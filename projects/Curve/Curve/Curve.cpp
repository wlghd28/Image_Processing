#define _CRT_SECURE_NO_WARNINGS
// Curve1.0.cpp : 애플리케이션에 대한 진입점을 정의합니다.
//
#include <stdio.h>
#include <Windows.h>
#include <iostream>
#include <commdlg.h>
#include "framework.h"
#include "Curve.h"
#include "shlwapi.h"
#include "shellapi.h"
#pragma comment(lib, "Shlwapi.lib")
//#pragma comment(linker, "/entry:WinMainCRTStartup /subsystem:console")
//#pragma comment(linker, "/entry:wWinMainCRTStartup /subsystem:console")

#define MAX_LOADSTRING 100

// 노주임 추가
//////////////////////////////////////////////////////////////////////////////
#define MSG_CURVE_CLOSE  1000
#define MSG_CURVE_SAVE  1001 

unsigned int m_uRegisteredMessage;
PCHAR* CommandLineToArgvA(PCHAR CmdLine, int* _argc);
void RegistMessage();
void CreateCurveFilePathTXT(const char* str_curve_file_path);
void SaveFile();

int _iNum;
TCHAR* _tchar_LoadPoint_FilePath = NULL;
//LPWSTR* pStr = NULL; 
LPSTR* pStr = NULL;

char _FN_Save[4096];
//////////////////////////////////////////////////////////////////////////////


int DrawCurve(HDC hdc, int P0x, int P0y, int P1x, int P1y, int P2x, int P2y, int P3x, int P3y);
int DrawSideCurve(HDC hdc, int P0x, int P0y, int P1x, int P1y, int P2x, int P2y);

LRESULT CALLBACK EditSubProcY(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam);
LRESULT CALLBACK EditSubProcX(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam);

WNDPROC g_OldEditProc;
HWND g_hList, g_hEditSub;

// char Permil[] = { "‰" };
void SLine(HWND hWnd);		// 직선

// 4분의 1일때 (곡선, 보조선, 제어점)
void CLine(HWND hWnd);		// 곡선
void LLine(HWND hWnd);		// 보조선
void CPoint(HWND hWnd);		// 제어점

// 3분의 1일때 (곡선, 보조선, 제어점)
void C2Line(HWND hWnd);		// 곡선
void L2Line(HWND hWnd);		// 보조선
void C2Point(HWND hWnd);		// 제어점

// 2분의 1일때 (곡선, 보조선, 제어점)
void C3Line(HWND hWnd);		// 곡선
void L3Line(HWND hWnd);		// 보조선
void C3Point(HWND hWnd);		// 제어점


void AddPoint(LPARAM lParam);		// 점 생성
void DeletePoint(LPARAM lParam);	// 점 삭제

//#define PN 81

// point는 위치상 앞에서부터 0인 좌표
int point[22][2] = { {0}, {0} };

//int pointR[81][2];
static POINT ptMouse;

int Energy = 0;
int EnergyDown, EnergyUp = 0;

int i;
int dp = 0;
float j = 0;
float k = 0;
float Gap = 0;
int YC = 0;
int a = 0;

/*
int CMoveStartX;
int CMoveStartY;
int CMoveEndX;
int CMoveEndY;
*/
int CMoveStartX = 45;
int CMoveStartY = 515;
int CMoveEndX = 545;
int CMoveEndY = 15;

int Click = 0;				// 화면 클릭횟수로 점 추가
int Doolgi = -1;		// 점 더블클릭했을 때 선택되는 점
int Max = 0;

static HWND hEditX, hEditY;
TCHAR strEditX[50];
TCHAR strEditY[50];
WNDPROC EditProcX, EditProcY;

static HWND c3, c4;
static HWND r1, r2, r3;		// 라디오버튼

int P0x, P0y, P1x, P1y, P2x, P2y, P3x, P3y;

int CPX1_1, CPX2_1, CPX3_1, CPX4_1, CPX5_1, CPX6_1, CPX7_1, CPX8_1, CPX9_1, CPX10_1, CPX11_1, CPX12_1, CPX13_1, CPX14_1, CPX15_1, CPX16_1, CPX17_1, CPX18_1, CPX19_1;
int CPY1_1, CPY2_1, CPY3_1, CPY4_1, CPY5_1, CPY6_1, CPY7_1, CPY8_1, CPY9_1, CPY10_1, CPY11_1, CPY12_1, CPY13_1, CPY14_1, CPY15_1, CPY16_1, CPY17_1, CPY18_1, CPY19_1;
int CPX1, CPX2, CPX3, CPX4, CPX5, CPX6, CPX7, CPX8, CPX9, CPX10, CPX11, CPX12, CPX13, CPX14, CPX15, CPX16, CPX17, CPX18, CPX19;
int CPY1, CPY2, CPY3, CPY4, CPY5, CPY6, CPY7, CPY8, CPY9, CPY10, CPY11, CPY12, CPY13, CPY14, CPY15, CPY16, CPY17, CPY18, CPY19;;

// CMoveY, CMoveY는 시간의 누르는 순서의 좌표
int CMoveX0 = 0;
int CMoveX1;
int CMoveX2;
int CMoveX3;
int CMoveX4;
int CMoveX5;
int CMoveX6;
int CMoveX7;
int CMoveX8;
int CMoveX9;
int CMoveX10;
int CMoveX11;
int CMoveX12;
int CMoveX13;
int CMoveX14;
int CMoveX15;
int CMoveX16;
int CMoveX17;
int CMoveX18;
int CMoveX19;
int CMoveX20;


int CMoveY0;
int CMoveY1;
int CMoveY2;
int CMoveY3;
int CMoveY4;
int CMoveY5;
int CMoveY6;
int CMoveY7;
int CMoveY8;
int CMoveY9;
int CMoveY10;
int CMoveY11;
int CMoveY12;
int CMoveY13;
int CMoveY14;
int CMoveY15;
int CMoveY16;
int CMoveY17;
int CMoveY18;
int CMoveY19;
int CMoveY20;

const char* s2 = "True";
int ret;

// 전역 변수:
HDC hdc;
HINSTANCE hInst;                                // 현재 인스턴스입니다.
WCHAR szTitle[MAX_LOADSTRING];                  // 제목 표시줄 텍스트입니다.
WCHAR szWindowClass[MAX_LOADSTRING];            // 기본 창 클래스 이름입니다.

// 이 코드 모듈에 포함된 함수의 선언을 전달합니다:
ATOM                MyRegisterClass(HINSTANCE hInstance);
BOOL                InitInstance(HINSTANCE, int);
LRESULT CALLBACK    WndProc(HWND, UINT, WPARAM, LPARAM);
INT_PTR CALLBACK    About(HWND, UINT, WPARAM, LPARAM);

int APIENTRY wWinMain(_In_ HINSTANCE hInstance,
	_In_opt_ HINSTANCE hPrevInstance,
	_In_ LPWSTR    lpCmdLine,
	_In_ int       nCmdShow)
{

	UNREFERENCED_PARAMETER(hPrevInstance);
	UNREFERENCED_PARAMETER(lpCmdLine);

	// TODO: 여기에 코드를 입력합니다.
	//wprintf(L"%s\n", lpCmdLine);
	int iCnt = 0;
	LPSTR lpcstr = ::GetCommandLineA();
	//LPCWSTR lpcwstr = ::GetCommandLineW(); 
	//pStr = ::CommandLineToArgvW(lpcwstr, &iCnt);
	pStr = ::CommandLineToArgvA(lpcstr, &iCnt);
	if (iCnt > 1)
	{
		_tchar_LoadPoint_FilePath = (TCHAR*)pStr[1];
		strcpy(_FN_Save, (TCHAR*)pStr[1]);
	}
	if (iCnt > 2) _iNum = _ttoi(pStr[2]);

	//wprintf(L"%s\n", _tchar_LoadPoint_FilePath);

	// 전역 문자열을 초기화합니다.
	LoadStringW(hInstance, IDS_APP_TITLE, szTitle, MAX_LOADSTRING);
	LoadStringW(hInstance, IDC_CURVE11, szWindowClass, MAX_LOADSTRING);
	MyRegisterClass(hInstance);

	// 애플리케이션 초기화를 수행합니다:
	if (!InitInstance(hInstance, nCmdShow))
	{
		return FALSE;
	}

	HACCEL hAccelTable = LoadAccelerators(hInstance, MAKEINTRESOURCE(IDC_CURVE11));

	MSG msg;

	// 기본 메시지 루프입니다:
	while (GetMessage(&msg, nullptr, 0, 0))
	{
		if (!TranslateAccelerator(msg.hwnd, hAccelTable, &msg))
		{
			TranslateMessage(&msg);
			DispatchMessage(&msg);
		}
	}

	return (int)msg.wParam;
}



//
//  함수: MyRegisterClass()
//
//  용도: 창 클래스를 등록합니다.
//
ATOM MyRegisterClass(HINSTANCE hInstance)
{
	WNDCLASSEXW wcex;

	wcex.cbSize = sizeof(WNDCLASSEX);

	wcex.style = CS_HREDRAW | CS_VREDRAW;
	wcex.lpfnWndProc = WndProc;
	wcex.cbClsExtra = 0;
	wcex.cbWndExtra = 0;
	wcex.hInstance = hInstance;
	wcex.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_CURVE11));
	wcex.hCursor = LoadCursor(nullptr, IDC_ARROW);
	wcex.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
	wcex.lpszMenuName = MAKEINTRESOURCEW(IDC_CURVE11);
	wcex.lpszClassName = szWindowClass;
	wcex.hIconSm = LoadIcon(wcex.hInstance, MAKEINTRESOURCE(IDI_SMALL));

	return RegisterClassExW(&wcex);
}

//
//   함수: InitInstance(HINSTANCE, int)
//
//   용도: 인스턴스 핸들을 저장하고 주 창을 만듭니다.
//
//   주석:
//
//        이 함수를 통해 인스턴스 핸들을 전역 변수에 저장하고
//        주 프로그램 창을 만든 다음 표시합니다.
//
BOOL InitInstance(HINSTANCE hInstance, int nCmdShow)
{
	hInst = hInstance; // 인스턴스 핸들을 전역 변수에 저장합니다.

	HWND hWnd = CreateWindowW(szWindowClass, szTitle, WS_OVERLAPPEDWINDOW | WS_CLIPCHILDREN,
		750, 10, 713, 670, nullptr, nullptr, hInstance, nullptr);		// 700 -> 750 ,  830 -> 713

	if (!hWnd)
	{
		return FALSE;
	}

	ShowWindow(hWnd, nCmdShow);
	UpdateWindow(hWnd);

	return TRUE;
}

// 에디트박스에서 엔터쳐서 점 이동_Y좌표 (서브클래싱)
LRESULT CALLBACK EditSubProcY(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
	TCHAR SPoint[100];
	switch (message)
	{
	case WM_KEYDOWN:
		if (wParam == VK_RETURN)
		{
			GetWindowText(hEditX, strEditX, 138);
			if (Doolgi == 0 || Doolgi == Click + 1) {
				//MessageBox(hWnd, "시작점과 끝점은 이동 불가합니다.", "이동불가", MB_OK);
				MessageBox(hWnd, "The start and end points cannot be moved.", "Move failed", MB_OK);
			}
			else {
				for (i = 1; i < 20; i++) {		// 양 옆 점의 X좌표와 4만큼씩 여유를 두도록
					if (Doolgi == i) {
						if ((int)(atof(strEditX) * 10) < (((point[i - 1][0] * 2) - 90)) + 4 || (int)(atof(strEditX) * 10) > (((point[i + 1][0] * 2) - 90)) - 4) {
							//if ((atoi(strEditX)) < (((point[i - 1][0] * 2) - 90)) + 4 || (atoi(strEditX)) > (((point[i + 1][0] * 2) - 90)) - 4) {
							sprintf(SPoint, "Enter a number between %0.1lf and %0.1lf", ((double)(((point[i - 1][0] * 2) - 90)) + 4) / 10, ((double)(((point[i + 1][0] * 2) - 90)) - 4) / 10);
							//sprintf(SPoint, "Enter a number between %d and %d", (((point[i - 1][0] * 2) - 90)) + 4, (((point[i + 1][0] * 2) - 90)) - 4);
							MessageBox(hWnd, SPoint, "Point move", MB_OK);
						}
						else {
							point[i][0] = (int)(atof(strEditX) * 10 * (0.5)) + 45;
							//Doolgi = -2;
						}
					}
				}
			}

			InvalidateRect(hWnd, NULL, FALSE);

			GetWindowText(hEditY, strEditY, 138);

			if (Doolgi >= 0 && Doolgi <= 21) point[Doolgi][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			Doolgi = -2;

			//if (Doolgi == 0) {
			//	point[0][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[0][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 1) {
			//	point[1][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[1][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 2) {
			//	point[2][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[2][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 3) {
			//	point[3][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[3][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 4) {
			//	point[4][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[4][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 5) {
			//	point[5][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[5][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 6) {
			//	point[6][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[6][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 7) {
			//	point[7][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[7][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 8) {
			//	point[8][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[8][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 9) {
			//	point[9][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[9][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 10) {
			//	point[10][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[10][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 11) {
			//	point[11][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[11][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 12) {
			//	point[12][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[12][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 13) {
			//	point[13][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[13][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 14) {
			//	point[14][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[14][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 15) {
			//	point[15][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[15][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 16) {
			//	point[16][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[16][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 17) {
			//	point[17][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[17][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 18) {
			//	point[18][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[18][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 19) {
			//	point[19][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[19][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 20) {
			//	point[20][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[20][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 21) {
			//	point[21][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[21][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}

			SetFocus(r1);   // 포커스 바꿔주는 (에디트박스에서 엔터 후 커서 사라지게)
		}
		return 0;

	}
	InvalidateRect(hWnd, NULL, FALSE);

	return CallWindowProc(EditProcY, hWnd, message, wParam, lParam);
}


// 에디트박스에서 엔터쳐서 점 이동_X좌표 (서브클래싱)
LRESULT CALLBACK EditSubProcX(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
	TCHAR SPoint[100];
	switch (message)
	{
	case WM_KEYDOWN:
		if (wParam == VK_RETURN)
		{
			GetWindowText(hEditX, strEditX, 138);
			if (Doolgi == 0 || Doolgi == Click + 1) {
				//MessageBox(hWnd, "시작점과 끝점은 이동 불가합니다.", "이동불가", MB_OK);
				MessageBox(hWnd, "The start and end points cannot be moved.", "Move failed", MB_OK);
			}
			else {
				for (i = 1; i < 20; i++) {		// 양 옆 점의 X좌표와 4만큼씩 여유를 두도록
					if (Doolgi == i) {
						if ((int)(atof(strEditX) * 10) < (((point[i - 1][0] * 2) - 90)) + 4 || (int)(atof(strEditX) * 10) > (((point[i + 1][0] * 2) - 90)) - 4) {
							//if ((atoi(strEditX)) < (((point[i - 1][0] * 2) - 90)) + 4 || (atoi(strEditX)) > (((point[i + 1][0] * 2) - 90)) - 4) {
							sprintf(SPoint, "Enter a number between %0.1lf and %0.1lf", ((double)(((point[i - 1][0] * 2) - 90)) + 4) / 10, ((double)(((point[i + 1][0] * 2) - 90)) - 4) / 10);
							//sprintf(SPoint, "Enter a number between %d and %d", (((point[i - 1][0] * 2) - 90)) + 4, (((point[i + 1][0] * 2) - 90)) - 4);
							MessageBox(hWnd, SPoint, "Point move", MB_OK);
						}
						else {
							point[i][0] = (int)(atof(strEditX) * 10 * (0.5)) + 45;
							//Doolgi = -2;
						}
					}
				}
			}

			InvalidateRect(hWnd, NULL, FALSE);

			GetWindowText(hEditY, strEditY, 138);

			if(Doolgi >= 0 && Doolgi <= 21) point[Doolgi][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			Doolgi = -2;

			//if (Doolgi == 0) {
			//	point[0][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[0][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 1) {
			//	point[1][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[1][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 2) {
			//	point[2][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[2][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 3) {
			//	point[3][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[3][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 4) {
			//	point[4][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[4][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 5) {
			//	point[5][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[5][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 6) {
			//	point[6][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[6][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 7) {
			//	point[7][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[7][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 8) {
			//	point[8][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[8][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 9) {
			//	point[9][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[9][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 10) {
			//	point[10][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[10][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 11) {
			//	point[11][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[11][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 12) {
			//	point[12][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[12][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 13) {
			//	point[13][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[13][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 14) {
			//	point[14][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[14][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 15) {
			//	point[15][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[15][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 16) {
			//	point[16][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[16][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 17) {
			//	point[17][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[17][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 18) {
			//	point[18][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[18][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 19) {
			//	point[19][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[19][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 20) {
			//	point[20][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[20][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}
			//else if (Doolgi == 21) {
			//	point[21][1] = (int)((atof(strEditY) * 10 * (-0.5)) + 515);
			//	//point[21][1] = (atoi(strEditY) * (- 0.5)) + 515;
			//	Doolgi = -2;
			//}

			SetFocus(r1);   // 포커스 바꿔주는 (에디트박스에서 엔터 후 커서 사라지게)
		}
		return 0;

	}
	InvalidateRect(hWnd, NULL, FALSE);

	return CallWindowProc(EditProcX, hWnd, message, wParam, lParam);
}


//
//  함수: WndProc(HWND, UINT, WPARAM, LPARAM)
//
//  용도: 주 창의 메시지를 처리합니다.
//
//  WM_COMMAND  - 애플리케이션 메뉴를 처리합니다.
//  WM_PAINT    - 주 창을 그립니다.
//  WM_DESTROY  - 종료 메시지를 게시하고 반환합니다.
//
//
LRESULT CALLBACK WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
	//TCHAR NewTitle[] = _T("타이틀 바꾸기");
	//TCHAR NewTitle[] = _T("ABCDEFG");
	//TCHAR GetTitle[80];


	OPENFILENAME OFN;
	TCHAR str[120] = _T("");
	TCHAR lpstrFile[4096] = _T("");
	TCHAR lpstrFile1[4096] = _T("");
	TCHAR lpstrFile2[4096] = _T("");
	TCHAR lpstrFile3[4096] = _T("");
	TCHAR lpstrFile4[4096] = _T("");

	//TCHAR filter[] = _T("Every File \0*.*\0Text File\0*.txt;*.doc\0");
	//TCHAR filter[] = _T("Text File\0*(point).txt;*.doc\0");			// (point) 텍스트 파일만 보이도록
	TCHAR filter[] = _T("Text File\0*.data;*.doc\0");
	int answer = 0, answera = 0;
	int check = 0;

	PAINTSTRUCT ps;


	static HWND c3, c4;
	static HWND r1, r2, r3;		// 라디오버튼
	enum { ID_R1 = 101, ID_R2, ID_R3 };
	static BOOL SubLine;
	static BOOL Line;
	static BOOL CPPosition = 1;		// 제어점 위치


	if (message == WM_CLOSE) {			// 프로그램에서 'X' 눌렀을 때
		//check = MessageBox(hWnd, TEXT("프로그램을 종료하시겠습니까?"), TEXT("종료 확인"), MB_OKCANCEL);
		check = MessageBox(hWnd, TEXT("Do you want quit program?"), TEXT("Program quit"), MB_OKCANCEL | MB_TOPMOST);
		::PostMessage(HWND_BROADCAST, m_uRegisteredMessage, MSG_CURVE_CLOSE, lParam);
	}
	if (check == IDCANCEL) {			// 닫기 취소
		return 0;
	}
	else if (message == WM_DESTROY)
	{
		PostQuitMessage(0);
	}

	if (Doolgi == -2) {								// 에디트에 좌표 숫자로 치고 엔터 누르면
		InvalidateRect(hWnd, NULL, FALSE);			// 점 이동
	}

	static int nBuff;
	static int CPPositionINI;
	TCHAR szBuff[80], szBuffer[256];
	TCHAR SubLineINI[80];

	switch (message)
	{

	case WM_CREATE:
	{
		RegistMessage();

		point[0][0] = CMoveStartX;
		point[0][1] = CMoveStartY;
		point[1][0] = CMoveEndX;
		point[1][1] = CMoveEndY;
		SetWindowTextW(hWnd, (LPCWSTR)TEXT("Curve"));		// 기본 타이틀 제목


		CreateWindow(TEXT("button"), TEXT("RESET"), WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON,
			580, 90, 96, 35, hWnd, (HMENU)2, hInst, NULL);
		CreateWindow(TEXT("button"), TEXT("SAVE"), WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON,
			580, 150, 96, 35, hWnd, (HMENU)16, hInst, NULL);
		CreateWindow(TEXT("button"), TEXT("SAVE AS"), WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON,
			580, 200, 96, 35, hWnd, (HMENU)18, hInst, NULL);
		CreateWindow(TEXT("button"), TEXT("LOAD"), WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON,
			580, 250, 96, 35, hWnd, (HMENU)17, hInst, NULL);


		//CreateWindow(TEXT("button"), TEXT("INISave"), WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON,
		//	580, 300, 96, 35, hWnd, (HMENU)19, hInst, NULL);
		CreateWindow(TEXT("button"), TEXT("INI Apply"), WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON,
			580, 340, 93, 33, hWnd, (HMENU)20, hInst, NULL);

		c3 = CreateWindow(TEXT("button"), TEXT("Straight"), WS_CHILD | WS_VISIBLE | BS_AUTOCHECKBOX,
			580, 545, 80, 30, hWnd, (HMENU)3, hInst, NULL);
		//c4 = CreateWindow(TEXT("button"), TEXT("보조선"), WS_CHILD | WS_VISIBLE | BS_AUTOCHECKBOX,
		//	710, 580, 90, 30, hWnd, (HMENU)4, hInst, NULL);

		hEditX = CreateWindow(TEXT("edit"), NULL, WS_CHILD | WS_VISIBLE | WS_BORDER | ES_AUTOHSCROLL,
			450, 555, 60, 25, hWnd, (HMENU)5, hInst, NULL);
		hEditY = CreateWindow(TEXT("edit"), NULL, WS_CHILD | WS_VISIBLE | WS_BORDER | ES_AUTOHSCROLL,
			580, 480, 60, 25, hWnd, (HMENU)6, hInst, NULL);

		EditProcY = (WNDPROC)SetWindowLong(hEditY, GWL_WNDPROC, (LONG)EditSubProcY);		// 에디트 + 엔터 처리하기 위한 서브클래싱
		EditProcX = (WNDPROC)SetWindowLong(hEditX, GWL_WNDPROC, (LONG)EditSubProcX);
		/*
		r1 = CreateWindow(TEXT("button"), TEXT("4분의 1"), WS_CHILD | WS_VISIBLE | BS_AUTORADIOBUTTON | WS_GROUP,
			710, 300, 102, 30, hWnd, (HMENU)ID_R1, hInst, NULL);
		r2 = CreateWindow(TEXT("button"), TEXT("3분의 1"), WS_CHILD | WS_VISIBLE | BS_AUTORADIOBUTTON,
			710, 340, 102, 30, hWnd, (HMENU)ID_R2, hInst, NULL);
		r3 = CreateWindow(TEXT("button"), TEXT("2분의 1"), WS_CHILD | WS_VISIBLE | BS_AUTORADIOBUTTON,
			710, 380, 102, 30, hWnd, (HMENU)ID_R3, hInst, NULL);
		*/

		WritePrivateProfileString(_T("Configuration"), _T("Control point width"), _T("25"), _T(".\\\Curve.ini"));	// CPPositionINI
		WritePrivateProfileString(_T("Configuration"), _T("Auxiliary line"), _T("False"), _T(".\\\Curve.ini"));	// SubLineINI
		WritePrivateProfileString(_T("Configuration"), _T("Section"), _T("20"), _T(".\\\Curve.ini"));

		WritePrivateProfileString(_T("Explanation"), _T("Control point width"), _T("Percent. Default : 25% (25%, 33%, 50%)"), _T(".\\\Curve.ini"));
		WritePrivateProfileString(_T("Explanation"), _T("Auxiliary line"), _T("Default : False (False True)"), _T(".\\\Curve.ini"));
		WritePrivateProfileString(_T("Explanation"), _T("Section"), _T("Default : 20"), _T(".\\\Curve.ini"));

		CPPositionINI = GetPrivateProfileInt(_T("Configuration"), _T("Control point width"), CPPositionINI, _T(".\\\\Curve.ini"));
		GetPrivateProfileString(_T("Configuration"), _T("Auxiliary line"), _T("ERROR"), SubLineINI, 80, _T(".\\\\Curve.ini"));
		ret = strcmp(SubLineINI, s2);			// ret는 SubLineINI 값과 s2(True) 를 비교해서 같으면 0, 다르면 -1


		FILE* fp2 = NULL;
		char* FileName2 = NULL;
		FileName2 = _tchar_LoadPoint_FilePath;
		//strcpy(lpstrFile, _tchar_LoadPoint_FilePath);

		// Point좌표 불러오기
		if (FileName2 != NULL)
		{
			fopen_s(&fp2, FileName2, "rb");		// Point 나오는 텍스트파일을 열어야 합니다.

			if (fp2 != NULL)
			{
				// 타이틀을 파일 이름으로
				TCHAR* NewTitle[] = { FileName2 };
				SetWindowTextW(hWnd, (LPCWSTR)*NewTitle);

				fscanf_s(fp2, "%d \n", &Click);
				fscanf_s(fp2, "%d  %d \n", &point[0][0], &point[0][1]);
				fscanf_s(fp2, "%d  %d \n", &point[1][0], &point[1][1]);
				fscanf_s(fp2, "%d  %d \n", &point[2][0], &point[2][1]);
				fscanf_s(fp2, "%d  %d \n", &point[3][0], &point[3][1]);
				fscanf_s(fp2, "%d  %d \n", &point[4][0], &point[4][1]);
				fscanf_s(fp2, "%d  %d \n", &point[5][0], &point[5][1]);
				fscanf_s(fp2, "%d  %d \n", &point[6][0], &point[6][1]);
				fscanf_s(fp2, "%d  %d \n", &point[7][0], &point[7][1]);
				fscanf_s(fp2, "%d  %d \n", &point[8][0], &point[8][1]);
				fscanf_s(fp2, "%d  %d \n", &point[9][0], &point[9][1]);
				fscanf_s(fp2, "%d  %d \n", &point[10][0], &point[10][1]);
				fscanf_s(fp2, "%d  %d \n", &point[11][0], &point[11][1]);
				fscanf_s(fp2, "%d  %d \n", &point[12][0], &point[12][1]);
				fscanf_s(fp2, "%d  %d \n", &point[13][0], &point[13][1]);
				fscanf_s(fp2, "%d  %d \n", &point[14][0], &point[14][1]);
				fscanf_s(fp2, "%d  %d \n", &point[15][0], &point[15][1]);
				fscanf_s(fp2, "%d  %d \n", &point[16][0], &point[16][1]);
				fscanf_s(fp2, "%d  %d \n", &point[17][0], &point[17][1]);
				fscanf_s(fp2, "%d  %d \n", &point[18][0], &point[18][1]);
				fscanf_s(fp2, "%d  %d \n", &point[19][0], &point[19][1]);
				fscanf_s(fp2, "%d  %d \n", &point[20][0], &point[20][1]);
				fscanf_s(fp2, "%d  %d \n", &point[21][0], &point[21][1]);


				fscanf_s(fp2, "%d  %d \n", &CMoveX0, &CMoveY0);
				fscanf_s(fp2, "%d  %d \n", &CMoveX1, &CMoveY1);
				fscanf_s(fp2, "%d  %d \n", &CMoveX2, &CMoveY2);
				fscanf_s(fp2, "%d  %d \n", &CMoveX3, &CMoveY3);
				fscanf_s(fp2, "%d  %d \n", &CMoveX4, &CMoveY4);
				fscanf_s(fp2, "%d  %d \n", &CMoveX5, &CMoveY5);
				fscanf_s(fp2, "%d  %d \n", &CMoveX6, &CMoveY6);
				fscanf_s(fp2, "%d  %d \n", &CMoveX7, &CMoveY7);
				fscanf_s(fp2, "%d  %d \n", &CMoveX8, &CMoveY8);
				fscanf_s(fp2, "%d  %d \n", &CMoveX9, &CMoveY9);
				fscanf_s(fp2, "%d  %d \n", &CMoveX10, &CMoveY10);
				fscanf_s(fp2, "%d  %d \n", &CMoveX11, &CMoveY11);
				fscanf_s(fp2, "%d  %d \n", &CMoveX12, &CMoveY12);
				fscanf_s(fp2, "%d  %d \n", &CMoveX13, &CMoveY13);
				fscanf_s(fp2, "%d  %d \n", &CMoveX14, &CMoveY14);
				fscanf_s(fp2, "%d  %d \n", &CMoveX15, &CMoveY15);
				fscanf_s(fp2, "%d  %d \n", &CMoveX16, &CMoveY16);
				fscanf_s(fp2, "%d  %d \n", &CMoveX17, &CMoveY17);
				fscanf_s(fp2, "%d  %d \n", &CMoveX18, &CMoveY18);
				fscanf_s(fp2, "%d  %d \n", &CMoveX19, &CMoveY19);

				Max = Click;
				fclose(fp2);

			}
		}
		InvalidateRect(hWnd, NULL, FALSE);
	}
	break;


	case WM_COMMAND:
	{
		if (Click == 0)
		{		// 처음 프로그램을 실행했을 때 한번만 실행
			// INI파일에 제어점폭, 보조선, 구간의 기본값 저장
			//WritePrivateProfileString(_T("Configuration"), _T("제어점폭"), _T("25"), _T(".\\\Curve.ini"));	// CPPositionINI
			//WritePrivateProfileString(_T("Configuration"), _T("보조선"), _T("False"), _T(".\\\Curve.ini"));	// SubLineINI
			//WritePrivateProfileString(_T("Configuration"), _T("구간"), _T("20"), _T(".\\\Curve.ini"));
			//
			//WritePrivateProfileString(_T("설명"), _T("제어점폭"), _T("퍼센트로 표기. 기본값 : 25% (25%, 33%, 50%)"), _T(".\\\Curve.ini"));
			//WritePrivateProfileString(_T("설명"), _T("보조선"), _T("기본값 : False (False True)"), _T(".\\\Curve.ini"));
			//WritePrivateProfileString(_T("설명"), _T("구간"), _T("기본값 : 20"), _T(".\\\Curve.ini"));

			//CPPositionINI = GetPrivateProfileInt(_T("Configuration"), _T("제어점폭"), CPPositionINI, _T(".\\\\Curve.ini"));
			//GetPrivateProfileString(_T("Configuration"), _T("보조선"), _T("ERROR"), SubLineINI, 80, _T(".\\\\Curve.ini"));

			WritePrivateProfileString(_T("Configuration"), _T("Control point width"), _T("25"), _T(".\\\Curve.ini"));	// CPPositionINI
			WritePrivateProfileString(_T("Configuration"), _T("Auxiliary line"), _T("False"), _T(".\\\Curve.ini"));	// SubLineINI
			WritePrivateProfileString(_T("Configuration"), _T("Section"), _T("20"), _T(".\\\Curve.ini"));

			WritePrivateProfileString(_T("Explanation"), _T("Control point width"), _T("Percent. Default : 25% (25%, 33%, 50%)"), _T(".\\\Curve.ini"));
			WritePrivateProfileString(_T("Explanation"), _T("Auxiliary line"), _T("Default : False (False True)"), _T(".\\\Curve.ini"));
			WritePrivateProfileString(_T("Explanation"), _T("Section"), _T("Default : 20"), _T(".\\\Curve.ini"));

			CPPositionINI = GetPrivateProfileInt(_T("Configuration"), _T("Control point width"), CPPositionINI, _T(".\\\\Curve.ini"));
			GetPrivateProfileString(_T("Configuration"), _T("Auxiliary line"), _T("ERROR"), SubLineINI, 80, _T(".\\\\Curve.ini"));
			ret = strcmp(SubLineINI, s2);			// ret는 SubLineINI 값과 s2(True) 를 비교해서 같으면 0, 다르면 -1
		}

		// 각 점이 저장되는 좌표 값
		float RealStartX = (point[0][0] * 2) - 90;
		float RealStartY = (point[0][1] * (-2)) + 1030;
		float RealX1 = (point[1][0] * 2) - 90;
		float RealY1 = (point[1][1] * (-2)) + 1030;
		float RealX2 = (point[2][0] * 2) - 90;
		float RealY2 = (point[2][1] * (-2)) + 1030;
		float RealX3 = (point[3][0] * 2) - 90;
		float RealY3 = (point[3][1] * (-2)) + 1030;
		float RealX4 = (point[4][0] * 2) - 90;
		float RealY4 = (point[4][1] * (-2)) + 1030;
		float RealX5 = (point[5][0] * 2) - 90;
		float RealY5 = (point[5][1] * (-2)) + 1030;
		float RealX6 = (point[6][0] * 2) - 90;
		float RealY6 = (point[6][1] * (-2)) + 1030;
		float RealX7 = (point[7][0] * 2) - 90;
		float RealY7 = (point[7][1] * (-2)) + 1030;
		float RealX8 = (point[8][0] * 2) - 90;
		float RealY8 = (point[8][1] * (-2)) + 1030;
		float RealX9 = (point[9][0] * 2) - 90;
		float RealY9 = (point[9][1] * (-2)) + 1030;
		float RealX10 = (point[10][0] * 2) - 90;
		float RealY10 = (point[10][1] * (-2)) + 1030;
		float RealX11 = (point[11][0] * 2) - 90;
		float RealY11 = (point[11][1] * (-2)) + 1030;
		float RealX12 = (point[12][0] * 2) - 90;
		float RealY12 = (point[12][1] * (-2)) + 1030;
		float RealX13 = (point[13][0] * 2) - 90;
		float RealY13 = (point[13][1] * (-2)) + 1030;
		float RealX14 = (point[14][0] * 2) - 90;
		float RealY14 = (point[14][1] * (-2)) + 1030;
		float RealX15 = (point[15][0] * 2) - 90;
		float RealY15 = (point[15][1] * (-2)) + 1030;
		float RealX16 = (point[16][0] * 2) - 90;
		float RealY16 = (point[16][1] * (-2)) + 1030;
		float RealX17 = (point[17][0] * 2) - 90;
		float RealY17 = (point[17][1] * (-2)) + 1030;
		float RealX18 = (point[18][0] * 2) - 90;
		float RealY18 = (point[18][1] * (-2)) + 1030;
		float RealX19 = (point[19][0] * 2) - 90;
		float RealY19 = (point[19][1] * (-2)) + 1030;
		float RealX20 = (point[20][0] * 2) - 90;
		float RealY20 = (point[20][1] * (-2)) + 1030;
		float RealX21 = (point[21][0] - 21) * 2 - 240;
		float RealY21 = (point[21][1] * (-2)) + 1030;


		int wmId = LOWORD(wParam);
		// 메뉴 선택을 구문 분석합니다:
		switch (wmId)
		{

		case 20: //(INILoad)
			//GetPrivateProfileString(_T("Configuration"), _T("CPPosition"), _T("ERROR"), szBuff, MAX_PATH, _T(".\\\\Curve.ini"));
			CPPositionINI = GetPrivateProfileInt(_T("Configuration"), _T("Control point width"), CPPositionINI, _T(".\\\\Curve.ini"));
			GetPrivateProfileString(_T("Configuration"), _T("Auxiliary line"), _T("ERROR"), SubLineINI, 80, _T(".\\\\Curve.ini"));

			ret = strcmp(SubLineINI, s2);
			InvalidateRect(hWnd, NULL, FALSE);

			break;


		case 17:		// Open
			memset(&OFN, 0, sizeof(OPENFILENAME));
			OFN.lStructSize = sizeof(OPENFILENAME);
			OFN.hwndOwner = hWnd;
			OFN.lpstrFilter = filter;
			OFN.lpstrFile = lpstrFile;

			OFN.nMaxFile = 100;
			OFN.lpstrInitialDir = _T(".");
			//OFN.lpstrInitialDir = lpstrFile;

			if (GetOpenFileName(&OFN) != 0) {
				// 열고 싶은 파일을 선택했다면


				//_stprintf_s(str, _T("%s 파일을 여시겠습니까?"), OFN.lpstrFile);
				//answer = MessageBox(hWnd, str, _T("열기 선택"), MB_YESNO);

				//_stprintf_s(str, _T("Do you want open %s file?"), OFN.lpstrFile);
				//answer = MessageBox(hWnd, str, _T("File Open"), MB_YESNO);
				answer = IDYES;

				if (answer == IDYES) {
					FILE* fp1;
					//FILE * fp;
					char* FileName = lpstrFile;
					strcpy(_FN_Save, FileName);

					// 타이틀을 파일 이름으로
					TCHAR* NewTitle[] = { lpstrFile };
					SetWindowTextW(hWnd, (LPCWSTR)*NewTitle);

					//MessageBox(hWnd, *NewTitle, _T("값"), MB_OK);



					// Point좌표 불러오기
					fopen_s(&fp1, FileName, "rb");		// Point 나오는 텍스트파일을 열어야 합니다.

					if (fp1 != NULL)
					{
						//printf("!!!!!!!!!!!!!!!\n");

						fscanf_s(fp1, "%d \n", &Click);
						fscanf_s(fp1, "%d  %d \n", &point[0][0], &point[0][1]);
						fscanf_s(fp1, "%d  %d \n", &point[1][0], &point[1][1]);
						fscanf_s(fp1, "%d  %d \n", &point[2][0], &point[2][1]);
						fscanf_s(fp1, "%d  %d \n", &point[3][0], &point[3][1]);
						fscanf_s(fp1, "%d  %d \n", &point[4][0], &point[4][1]);
						fscanf_s(fp1, "%d  %d \n", &point[5][0], &point[5][1]);
						fscanf_s(fp1, "%d  %d \n", &point[6][0], &point[6][1]);
						fscanf_s(fp1, "%d  %d \n", &point[7][0], &point[7][1]);
						fscanf_s(fp1, "%d  %d \n", &point[8][0], &point[8][1]);
						fscanf_s(fp1, "%d  %d \n", &point[9][0], &point[9][1]);
						fscanf_s(fp1, "%d  %d \n", &point[10][0], &point[10][1]);
						fscanf_s(fp1, "%d  %d \n", &point[11][0], &point[11][1]);
						fscanf_s(fp1, "%d  %d \n", &point[12][0], &point[12][1]);
						fscanf_s(fp1, "%d  %d \n", &point[13][0], &point[13][1]);
						fscanf_s(fp1, "%d  %d \n", &point[14][0], &point[14][1]);
						fscanf_s(fp1, "%d  %d \n", &point[15][0], &point[15][1]);
						fscanf_s(fp1, "%d  %d \n", &point[16][0], &point[16][1]);
						fscanf_s(fp1, "%d  %d \n", &point[17][0], &point[17][1]);
						fscanf_s(fp1, "%d  %d \n", &point[18][0], &point[18][1]);
						fscanf_s(fp1, "%d  %d \n", &point[19][0], &point[19][1]);
						fscanf_s(fp1, "%d  %d \n", &point[20][0], &point[20][1]);
						fscanf_s(fp1, "%d  %d \n", &point[21][0], &point[21][1]);


						fscanf_s(fp1, "%d  %d \n", &CMoveX0, &CMoveY0);
						fscanf_s(fp1, "%d  %d \n", &CMoveX1, &CMoveY1);
						fscanf_s(fp1, "%d  %d \n", &CMoveX2, &CMoveY2);
						fscanf_s(fp1, "%d  %d \n", &CMoveX3, &CMoveY3);
						fscanf_s(fp1, "%d  %d \n", &CMoveX4, &CMoveY4);
						fscanf_s(fp1, "%d  %d \n", &CMoveX5, &CMoveY5);
						fscanf_s(fp1, "%d  %d \n", &CMoveX6, &CMoveY6);
						fscanf_s(fp1, "%d  %d \n", &CMoveX7, &CMoveY7);
						fscanf_s(fp1, "%d  %d \n", &CMoveX8, &CMoveY8);
						fscanf_s(fp1, "%d  %d \n", &CMoveX9, &CMoveY9);
						fscanf_s(fp1, "%d  %d \n", &CMoveX10, &CMoveY10);
						fscanf_s(fp1, "%d  %d \n", &CMoveX11, &CMoveY11);
						fscanf_s(fp1, "%d  %d \n", &CMoveX12, &CMoveY12);
						fscanf_s(fp1, "%d  %d \n", &CMoveX13, &CMoveY13);
						fscanf_s(fp1, "%d  %d \n", &CMoveX14, &CMoveY14);
						fscanf_s(fp1, "%d  %d \n", &CMoveX15, &CMoveY15);
						fscanf_s(fp1, "%d  %d \n", &CMoveX16, &CMoveY16);
						fscanf_s(fp1, "%d  %d \n", &CMoveX17, &CMoveY17);
						fscanf_s(fp1, "%d  %d \n", &CMoveX18, &CMoveY18);
						fscanf_s(fp1, "%d  %d \n", &CMoveX19, &CMoveY19);


						Max = Click;
						fclose(fp1);
					}

					InvalidateRect(hWnd, NULL, FALSE);
					//// CMove좌표 불러오기
					//char *ptr2 = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
					//char str8[30] = "(CMove)";
					////char str9[10] = ".txt";
					//char str9[10] = ".data";
					//strcat(ptr2, str8);
					//strcat(ptr2, str9);

					//fopen_s(&fp, FileName, "rb");

					//if (fp != NULL)
					//{
					//	fscanf_s(fp, "%d  %d \n", &CMoveX0, &CMoveY0);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX1, &CMoveY1);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX2, &CMoveY2);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX3, &CMoveY3);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX4, &CMoveY4);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX5, &CMoveY5);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX6, &CMoveY6);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX7, &CMoveY7);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX8, &CMoveY8);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX9, &CMoveY9);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX10, &CMoveY10);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX11, &CMoveY11);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX12, &CMoveY12);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX13, &CMoveY13);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX14, &CMoveY14);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX15, &CMoveY15);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX16, &CMoveY16);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX17, &CMoveY17);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX18, &CMoveY18);
					//	fscanf_s(fp, "%d  %d \n", &CMoveX19, &CMoveY19);

					//	fclose(fp);
					//}
				}

			}
			else {
				// 파일열기를 취소했다면
				// MessageBox(hWnd, _T("불러오기를 취소하였습니다."), _T("불러오기 취소"), MB_OK);
			}
			break;

		case 18:		// SAVE2
			if (Click == 0)
			{
				MessageBox(hWnd, "There must be at least one midpoint!", _T("Alert"), MB_ICONSTOP);
				break;
			}

			memset(&OFN, 0, sizeof(OPENFILENAME));
			OFN.lStructSize = sizeof(OPENFILENAME);
			OFN.hwndOwner = hWnd;
			OFN.lpstrFilter = filter;
			OFN.lpstrFile = lpstrFile;
			OFN.nMaxFile = 100;
			//OFN.lpstrInitialDir = _T(".");
			OFN.lpstrInitialDir = lpstrFile;

			if (GetSaveFileName(&OFN) != 0) {
				FILE* fp;

				char* FileName = lpstrFile;
				strcpy(_FN_Save, FileName);

				SetWindowTextW(hWnd, (LPCWSTR)FileName);

				//char str2[30] = "(점좌표)";
				//char str2[30] = "(Point_position)";
				//char str3[10] = ".txt";
				//char str3[10] = ".data";
				//strcat(FileName, str2);		// 파일이름(불러오기)
				//strcat(FileName, str3);		// 파일이름(불러오기).txt


				if (PathFileExists(lpstrFile) == TRUE) {		// 같은 이름의 파일이 이미 있으면 경고메시지
					char* ptr0 = strtok(FileName, ".");
					//char *ptr0 = strtok(FileName, "(");
					//_stprintf_s(str, _T("대상 폴더에 이름이 %s 인 파일이 이미 있습니다. 덮어쓰겠습니까?"), FileName);
					_stprintf_s(str, _T("%s already exists in the destination folder.\nDo you want overwrite?"), FileName);

					//answer = MessageBox(hWnd, str, _T("파일이름 중복"), MB_YESNO);
					answer = MessageBox(hWnd, str, _T("File overwrite"), MB_YESNO);

					if (answer == IDYES) {			// 덮어쓰겠습니까? -> Yes
						// 점 좌표
						//char str2[30] = "(점좌표)";
						//char str2[30] = "(Point_Position)";
						//char str3[10] = ".txt";
						//strcat(FileName, str2);		// 파일이름(불러오기)
						//strcat(FileName, str3);		// 파일이름(불러오기).txt

						//fopen_s(&fp, FileName, "wb");	// 점좌표 저장
						//for (int i = 0; i < Click + 2; i++) {
						//	fprintf(fp, "(%d,  %d)	\n", (point[i][0] * 2) - 90, (point[i][1] * (-2) + 1030));
						//}
						//fclose(fp);


						char* ptr = strtok(FileName, ".");		// FileName 문자를 . 기준으로 자른다
						//char *ptr = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
						//char str4[30] = "(전체좌표_직선모드)";
						char str4[30] = "(All_Point)";
						//char str5[10] = ".txt";
						char str5[10] = ".csv";
						//strcat(ptr, str4);
						strcat(ptr, str5);

						CreateCurveFilePathTXT(FileName);

						// 직선 체크 되어 있을 경우
						if (Line == 1)
						{
							// 전체 좌표 저장
							fopen_s(&fp, FileName, "wb");

							if (point[0][0] > 140) {
								for (j = 0; j < RealStartX + 1; j++) {
									Gap = (0 - RealStartY) / (0 - RealStartX);
									k = j * Gap;
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}
							if (Click >= 1) {
								for (j = RealStartX; j < RealX1 + 1; j++) {
									Gap = (RealY1 - RealStartY) / (RealX1 - RealStartX);
									k = RealStartY + ((j - RealStartX) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								for (j = RealX1; j < RealX2 + 1; j++) {
									Gap = (RealY2 - RealY1) / (RealX2 - RealX1);
									k = RealY1 + ((j - RealX1) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 2) {
								for (j = RealX2; j < RealX3 + 1; j++) {
									Gap = (RealY3 - RealY2) / (RealX3 - RealX2);
									k = RealY2 + ((j - RealX2) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 3) {
								for (j = RealX3; j < RealX4 + 1; j++) {
									Gap = (RealY4 - RealY3) / (RealX4 - RealX3);
									k = RealY3 + ((j - RealX3) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 4) {
								for (j = RealX4; j < RealX5 + 1; j++) {
									Gap = (RealY5 - RealY4) / (RealX5 - RealX4);
									k = RealY4 + ((j - RealX4) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 5) {
								for (j = RealX5; j < RealX6 + 1; j++) {
									Gap = (RealY6 - RealY5) / (RealX6 - RealX5);
									k = RealY5 + ((j - RealX5) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 6) {
								for (j = RealX6; j < RealX7 + 1; j++) {
									Gap = (RealY7 - RealY6) / (RealX7 - RealX6);
									k = RealY6 + ((j - RealX6) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 7) {
								for (j = RealX7; j < RealX8 + 1; j++) {
									Gap = (RealY8 - RealY7) / (RealX8 - RealX7);
									k = RealY7 + ((j - RealX7) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 8) {
								for (j = RealX8; j < RealX9 + 1; j++) {
									Gap = (RealY9 - RealY8) / (RealX9 - RealX8);
									k = RealY8 + ((j - RealX8) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 9) {
								for (j = RealX9; j < RealX10 + 1; j++) {
									Gap = (RealY10 - RealY9) / (RealX10 - RealX9);
									k = RealY9 + ((j - RealX9) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 10) {
								for (j = RealX10; j < RealX11 + 1; j++) {
									Gap = (RealY11 - RealY10) / (RealX11 - RealX10);
									k = RealY10 + ((j - RealX10) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 11) {
								for (j = RealX11; j < RealX12 + 1; j++) {
									Gap = (RealY12 - RealY11) / (RealX12 - RealX11);
									k = RealY11 + ((j - RealX11) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 12) {
								for (j = RealX12; j < RealX13 + 1; j++) {
									Gap = (RealY13 - RealY12) / (RealX13 - RealX12);
									k = RealY12 + ((j - RealX12) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 13) {
								for (j = RealX13; j < RealX14 + 1; j++) {
									Gap = (RealY14 - RealY13) / (RealX14 - RealX13);
									k = RealY13 + ((j - RealX13) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 14) {
								for (j = RealX14; j < RealX15 + 1; j++) {
									Gap = (RealY15 - RealY14) / (RealX15 - RealX14);
									k = RealY14 + ((j - RealX14) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 15) {
								for (j = RealX15; j < RealX16 + 1; j++) {
									Gap = (RealY16 - RealY15) / (RealX16 - RealX15);
									k = RealY15 + ((j - RealX15) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 16) {
								for (j = RealX16; j < RealX17 + 1; j++) {
									Gap = (RealY17 - RealY16) / (RealX17 - RealX16);
									k = RealY16 + ((j - RealX16) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 17) {
								for (j = RealX17; j < RealX18 + 1; j++) {
									Gap = (RealY18 - RealY17) / (RealX18 - RealX17);
									k = RealY17 + ((j - RealX17) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 18) {
								for (j = RealX18; j < RealX19 + 1; j++) {
									Gap = (RealY19 - RealY18) / (RealX19 - RealX18);
									k = RealY18 + ((j - RealX18) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 19) {
								for (j = RealX19; j < RealX20 + 1; j++) {
									Gap = (RealY20 - RealY19) / (RealX20 - RealX19);
									k = RealY19 + ((j - RealX19) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}

							if (Click >= 20) {
								for (j = RealX20; j < RealX21 + 1; j++) {
									Gap = (RealY21 - RealY20) / (RealX21 - RealX20);
									k = RealY20 + ((j - RealX20) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
							}
							fclose(fp);
						}
						else
						{
							char* ptr1 = strtok(FileName, ".");		// FileName 문자를 . 기준으로 자른다
							//char *ptr1 = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
							//char str6[30] = "(전체좌표_곡선모드)";
							char str6[30] = "(All_Point)";
							//char str7[10] = ".txt";
							char str7[10] = ".csv";
							//strcat(ptr, str6);
							strcat(ptr, str7);

							float RealX0Line, RealX1Line, RealX2Line, RealX3Line, RealX4Line, RealX5Line, RealX6Line, RealX7Line, RealX8Line;
							float RealY0Line, RealY1Line, RealY2Line, RealY3Line, RealY4Line, RealY5Line, RealY6Line, RealY7Line, RealY8Line;

							int X0Line, X1Line, X2Line, X3Line, X4Line, X5Line, X6Line, X7Line, X8Line;
							int Y0Line, Y1Line, Y2Line, Y3Line, Y4Line, Y5Line, Y6Line, Y7Line, Y8Line;

							float GapY0Y1, GapY1Y2, GapY2Y3, GapY3Y4, GapY4Y5, GapY5Y6, GapY6Y7, GapY7Y8;



							// 전체 좌표 저장


							if (Click == 0) {
								fopen_s(&fp, FileName, "wb");
								for (j = point[0][0]; j < point[1][0] + 1; j++) {
									Gap = (point[1][1] - point[0][1]) / (point[0][1] - point[0][0]);
									k = point[0][1] + ((j - point[0][0]) * Gap);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);
							}

							if (Click >= 1) {
								CPX1 = (point[1][0] - ((point[1][0] - point[0][0]) / 4));
								CPY1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))));

								//DrawSideCurve(hdc, point[0][0], point[0][1], CPX1, CPY1, point[1][0], point[1][1]);
								P0x = point[0][0];
								P0y = point[0][1];
								P1x = CPX1;
								P1y = CPY1;
								P2x = point[1][0];
								P2y = point[1][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "wb");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 2) {
								CPX1_1 = (point[1][0] + ((point[2][0] - point[1][0]) / 4));
								CPY1_1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4))));
								CPX2 = (point[2][0] - ((point[2][0] - point[1][0]) / 4));
								CPY2 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))));

								P0x = point[1][0];
								P0y = point[1][1];
								P1x = CPX1_1;
								P1y = CPY1_1;
								P2x = CPX2;
								P2y = CPY2;
								P3x = point[2][0];
								P3y = point[2][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								//_stprintf_s(str, _T("%d  %d    %.2F  %.2F"), X1Line, X2Line, RealX1Line, RealX2Line);
								//MessageBox(hWnd, str, _T("RealY1Line"), MB_OK);
								//_stprintf_s(str, _T("%d  %d    %.2F  %.2F"), Y1Line, Y2Line, RealY1Line, RealY2Line);
								//MessageBox(hWnd, str, _T("RealY1Line"), MB_OK);

								//_stprintf_s(str, _T("%.2f %.2f %.2f %.2f  %.2f"), RealX1Line, RealX2Line, RealY1Line, RealY2Line, (RealY2Line - RealY1Line)/(RealX2Line - RealX1Line));
								//MessageBox(hWnd, str, _T("l"), MB_OK);
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 3) {
								CPX2_1 = (point[2][0] + ((point[3][0] - point[2][0]) / 4));
								CPY2_1 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4))));
								CPX3 = (point[3][0] - ((point[3][0] - point[2][0]) / 4));
								CPY3 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))));

								P0x = point[2][0];
								P0y = point[2][1];
								P1x = CPX2_1;
								P1y = CPY2_1;
								P2x = CPX3;
								P2y = CPY3;
								P3x = point[3][0];
								P3y = point[3][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 4) {
								CPX3_1 = (point[3][0] + ((point[4][0] - point[3][0]) / 4));
								CPY3_1 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4))));
								CPX4 = (point[4][0] - ((point[4][0] - point[3][0]) / 4));
								CPY4 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))));

								P0x = point[3][0];
								P0y = point[3][1];
								P1x = CPX3_1;
								P1y = CPY3_1;
								P2x = CPX4;
								P2y = CPY4;
								P3x = point[4][0];
								P3y = point[4][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 5) {
								CPX4_1 = (point[4][0] + ((point[5][0] - point[4][0]) / 4));
								CPY4_1 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4))));
								CPX5 = (point[5][0] - ((point[5][0] - point[4][0]) / 4));
								CPY5 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))));

								P0x = point[4][0];
								P0y = point[4][1];
								P1x = CPX4_1;
								P1y = CPY4_1;
								P2x = CPX5;
								P2y = CPY5;
								P3x = point[5][0];
								P3y = point[5][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 6) {
								CPX5_1 = (point[5][0] + ((point[6][0] - point[5][0]) / 4));
								CPY5_1 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 4))));
								CPX6 = (point[6][0] - ((point[6][0] - point[5][0]) / 4));
								CPY6 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 4)) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 4)) - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 4)))) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))));

								P0x = point[5][0];
								P0y = point[5][1];
								P1x = CPX5_1;
								P1y = CPY5_1;
								P2x = CPX6;
								P2y = CPY6;
								P3x = point[6][0];
								P3y = point[6][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 7) {
								CPX6_1 = (point[6][0] + ((point[7][0] - point[6][0]) / 4));
								CPY6_1 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 4)) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 4)) - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 4)))) - (point[6][1] + ((point[7][1] - point[6][1]) / 4))));
								CPX7 = (point[7][0] - ((point[7][0] - point[6][0]) / 4));
								CPY7 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 4)) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 4)) - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 4)))) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))));

								P0x = point[6][0];
								P0y = point[6][1];
								P1x = CPX6_1;
								P1y = CPY6_1;
								P2x = CPX7;
								P2y = CPY7;
								P3x = point[7][0];
								P3y = point[7][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 8) {
								CPX7_1 = (point[7][0] + ((point[8][0] - point[7][0]) / 4));
								CPY7_1 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 4)) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 4)) - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 4)))) - (point[7][1] + ((point[8][1] - point[7][1]) / 4))));
								CPX8 = (point[8][0] - ((point[8][0] - point[7][0]) / 4));
								CPY8 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 4)) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 4)) - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 4)))) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))));

								P0x = point[7][0];
								P0y = point[7][1];
								P1x = CPX7_1;
								P1y = CPY7_1;
								P2x = CPX8;
								P2y = CPY8;
								P3x = point[8][0];
								P3y = point[8][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 9) {
								CPX8_1 = (point[8][0] + ((point[9][0] - point[8][0]) / 4));
								CPY8_1 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 4)) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 4)) - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 4)))) - (point[8][1] + ((point[9][1] - point[8][1]) / 4))));
								CPX9 = (point[9][0] - ((point[9][0] - point[8][0]) / 4));
								CPY9 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 4)) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 4)) - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 4)))) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))));

								P0x = point[8][0];
								P0y = point[8][1];
								P1x = CPX8_1;
								P1y = CPY8_1;
								P2x = CPX9;
								P2y = CPY9;
								P3x = point[9][0];
								P3y = point[9][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 10) {
								CPX9_1 = (point[9][0] + ((point[10][0] - point[9][0]) / 4));
								CPY9_1 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 4)) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 4)) - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 4)))) - (point[9][1] + ((point[10][1] - point[9][1]) / 4))));
								CPX10 = (point[10][0] - ((point[10][0] - point[9][0]) / 4));
								CPY10 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 4)) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 4)) - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 4)))) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))));

								P0x = point[9][0];
								P0y = point[9][1];
								P1x = CPX9_1;
								P1y = CPY9_1;
								P2x = CPX10;
								P2y = CPY10;
								P3x = point[10][0];
								P3y = point[10][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 11) {
								CPX10_1 = (point[10][0] + ((point[11][0] - point[10][0]) / 4));
								CPY10_1 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 4)) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 4)) - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 4)))) - (point[10][1] + ((point[11][1] - point[10][1]) / 4))));
								CPX11 = (point[11][0] - ((point[11][0] - point[10][0]) / 4));
								CPY11 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 4)) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 4)) - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 4)))) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))));

								P0x = point[10][0];
								P0y = point[10][1];
								P1x = CPX10_1;
								P1y = CPY10_1;
								P2x = CPX11;
								P2y = CPY11;
								P3x = point[11][0];
								P3y = point[11][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 12) {
								CPX11_1 = (point[11][0] + ((point[12][0] - point[11][0]) / 4));
								CPY11_1 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 4)) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 4)) - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 4)))) - (point[11][1] + ((point[12][1] - point[11][1]) / 4))));
								CPX12 = (point[12][0] - ((point[12][0] - point[11][0]) / 4));
								CPY12 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 4)) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 4)) - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 4)))) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))));

								P0x = point[11][0];
								P0y = point[11][1];
								P1x = CPX11_1;
								P1y = CPY11_1;
								P2x = CPX12;
								P2y = CPY12;
								P3x = point[12][0];
								P3y = point[12][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 13) {
								CPX12_1 = (point[12][0] + ((point[13][0] - point[12][0]) / 4));
								CPY12_1 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 4)) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 4)) - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 4)))) - (point[12][1] + ((point[13][1] - point[12][1]) / 4))));
								CPX13 = (point[13][0] - ((point[13][0] - point[12][0]) / 4));
								CPY13 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 4)) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 4)) - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 4)))) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))));

								P0x = point[12][0];
								P0y = point[12][1];
								P1x = CPX12_1;
								P1y = CPY12_1;
								P2x = CPX13;
								P2y = CPY13;
								P3x = point[13][0];
								P3y = point[13][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 14) {
								CPX13_1 = (point[13][0] + ((point[14][0] - point[13][0]) / 4));
								CPY13_1 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 4)) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 4)) - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 4)))) - (point[13][1] + ((point[14][1] - point[13][1]) / 4))));
								CPX14 = (point[14][0] - ((point[14][0] - point[13][0]) / 4));
								CPY14 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 4)) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 4)) - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 4)))) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))));

								P0x = point[13][0];
								P0y = point[13][1];
								P1x = CPX13_1;
								P1y = CPY13_1;
								P2x = CPX14;
								P2y = CPY14;
								P3x = point[14][0];
								P3y = point[14][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 15) {
								CPX14_1 = (point[14][0] + ((point[15][0] - point[14][0]) / 4));
								CPY14_1 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 4)) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 4)) - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 4)))) - (point[14][1] + ((point[15][1] - point[14][1]) / 4))));
								CPX15 = (point[15][0] - ((point[15][0] - point[14][0]) / 4));
								CPY15 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 4)) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 4)) - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 4)))) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))));

								P0x = point[14][0];
								P0y = point[14][1];
								P1x = CPX14_1;
								P1y = CPY14_1;
								P2x = CPX15;
								P2y = CPY15;
								P3x = point[15][0];
								P3y = point[15][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 16) {
								CPX15_1 = (point[15][0] + ((point[16][0] - point[15][0]) / 4));
								CPY15_1 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 4)) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 4)) - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 4)))) - (point[15][1] + ((point[16][1] - point[15][1]) / 4))));
								CPX16 = (point[16][0] - ((point[16][0] - point[15][0]) / 4));
								CPY16 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 4)) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 4)) - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 4)))) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))));

								P0x = point[15][0];
								P0y = point[15][1];
								P1x = CPX15_1;
								P1y = CPY15_1;
								P2x = CPX16;
								P2y = CPY16;
								P3x = point[16][0];
								P3y = point[16][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 17) {
								CPX16_1 = (point[16][0] + ((point[17][0] - point[16][0]) / 4));
								CPY16_1 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 4)) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 4)) - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 4)))) - (point[16][1] + ((point[17][1] - point[16][1]) / 4))));
								CPX17 = (point[17][0] - ((point[17][0] - point[16][0]) / 4));
								CPY17 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 4)) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 4)) - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 4)))) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))));

								P0x = point[16][0];
								P0y = point[16][1];
								P1x = CPX16_1;
								P1y = CPY16_1;
								P2x = CPX17;
								P2y = CPY17;
								P3x = point[17][0];
								P3y = point[17][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 18) {
								CPX17_1 = (point[17][0] + ((point[18][0] - point[17][0]) / 4));
								CPY17_1 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 4)) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 4)) - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 4)))) - (point[17][1] + ((point[18][1] - point[17][1]) / 4))));
								CPX18 = (point[18][0] - ((point[18][0] - point[17][0]) / 4));
								CPY18 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 4)) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 4)) - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 4)))) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))));

								P0x = point[17][0];
								P0y = point[17][1];
								P1x = CPX17_1;
								P1y = CPY17_1;
								P2x = CPX18;
								P2y = CPY18;
								P3x = point[18][0];
								P3y = point[18][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							if (Click >= 19) {
								CPX18_1 = (point[18][0] + ((point[19][0] - point[18][0]) / 4));
								CPY18_1 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 4)) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 4)) - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 4)))) - (point[18][1] + ((point[19][1] - point[18][1]) / 4))));
								CPX19 = (point[19][0] - ((point[19][0] - point[18][0]) / 4));
								CPY19 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 4)) - (point[19][1] - ((point[19][1] - point[18][1]) / 4))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 4)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 4)) - (point[19][0] - ((point[19][0] - point[18][0]) / 4)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 4)))) - (point[19][1] - ((point[19][1] - point[18][1]) / 4))));

								P0x = point[18][0];
								P0y = point[18][1];
								P1x = CPX18_1;
								P1y = CPY18_1;
								P2x = CPX19;
								P2y = CPY19;
								P3x = point[19][0];
								P3y = point[19][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
								Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
								X8Line = P3x;
								Y8Line = P3y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}


							// 맨 오른쪽 끝 곡선 좌표 저장
							if (Click == 1) {
								CPX1_1 = (point[1][0] + ((point[2][0] - point[1][0]) / 4));
								CPY1_1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4))));

								P0x = point[1][0];
								P0y = point[1][1];
								P1x = CPX1_1;
								P1y = CPY1_1;
								P2x = point[2][0];
								P2y = point[2][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 2) {
								CPX2_1 = (point[2][0] + ((point[3][0] - point[2][0]) / 4));
								CPY2_1 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4))));

								P0x = point[2][0];
								P0y = point[2][1];
								P1x = CPX2_1;
								P1y = CPY2_1;
								P2x = point[3][0];
								P2y = point[3][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 3) {
								CPX3_1 = (point[3][0] + ((point[4][0] - point[3][0]) / 4));
								CPY3_1 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4))));

								P0x = point[3][0];
								P0y = point[3][1];
								P1x = CPX3_1;
								P1y = CPY3_1;
								P2x = point[4][0];
								P2y = point[4][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 4) {
								CPX4_1 = (point[4][0] + ((point[5][0] - point[4][0]) / 4));
								CPY4_1 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4))));

								P0x = point[4][0];
								P0y = point[4][1];
								P1x = CPX4_1;
								P1y = CPY4_1;
								P2x = point[5][0];
								P2y = point[5][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 5) {
								CPX5_1 = (point[5][0] + ((point[6][0] - point[5][0]) / 5));
								CPY5_1 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 5)) - (point[5][1] - ((point[5][1] - point[4][1]) / 5))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 5)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 5)) - (point[5][0] - ((point[5][0] - point[4][0]) / 5)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 5)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 5))));

								P0x = point[5][0];
								P0y = point[5][1];
								P1x = CPX5_1;
								P1y = CPY5_1;
								P2x = point[6][0];
								P2y = point[6][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 6) {
								CPX6_1 = (point[6][0] + ((point[7][0] - point[6][0]) / 6));
								CPY6_1 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 6)) - (point[6][1] - ((point[6][1] - point[5][1]) / 6))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 6)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 6)) - (point[6][0] - ((point[6][0] - point[5][0]) / 6)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 6)))) - (point[6][1] + ((point[7][1] - point[6][1]) / 6))));

								P0x = point[6][0];
								P0y = point[6][1];
								P1x = CPX6_1;
								P1y = CPY6_1;
								P2x = point[7][0];
								P2y = point[7][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 7) {
								CPX7_1 = (point[7][0] + ((point[8][0] - point[7][0]) / 7));
								CPY7_1 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 7)) - (point[7][1] - ((point[7][1] - point[6][1]) / 7))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 7)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 7)) - (point[7][0] - ((point[7][0] - point[6][0]) / 7)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 7)))) - (point[7][1] + ((point[8][1] - point[7][1]) / 7))));

								P0x = point[7][0];
								P0y = point[7][1];
								P1x = CPX7_1;
								P1y = CPY7_1;
								P2x = point[8][0];
								P2y = point[8][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 8) {
								CPX8_1 = (point[8][0] + ((point[9][0] - point[8][0]) / 8));
								CPY8_1 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 8)) - (point[8][1] - ((point[8][1] - point[7][1]) / 8))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 8)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 8)) - (point[8][0] - ((point[8][0] - point[7][0]) / 8)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 8)))) - (point[8][1] + ((point[9][1] - point[8][1]) / 8))));

								P0x = point[8][0];
								P0y = point[8][1];
								P1x = CPX8_1;
								P1y = CPY8_1;
								P2x = point[9][0];
								P2y = point[9][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 9) {
								CPX9_1 = (point[9][0] + ((point[10][0] - point[9][0]) / 9));
								CPY9_1 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 9)) - (point[9][1] - ((point[9][1] - point[8][1]) / 9))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 9)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 9)) - (point[9][0] - ((point[9][0] - point[8][0]) / 9)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 9)))) - (point[9][1] + ((point[10][1] - point[9][1]) / 9))));

								P0x = point[9][0];
								P0y = point[9][1];
								P1x = CPX9_1;
								P1y = CPY9_1;
								P2x = point[10][0];
								P2y = point[10][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 10) {
								CPX10_1 = (point[10][0] + ((point[11][0] - point[10][0]) / 10));
								CPY10_1 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 10)) - (point[10][1] - ((point[10][1] - point[9][1]) / 10))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 10)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 10)) - (point[10][0] - ((point[10][0] - point[9][0]) / 10)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 10)))) - (point[10][1] + ((point[11][1] - point[10][1]) / 10))));

								P0x = point[10][0];
								P0y = point[10][1];
								P1x = CPX10_1;
								P1y = CPY10_1;
								P2x = point[11][0];
								P2y = point[11][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 11) {
								CPX11_1 = (point[11][0] + ((point[12][0] - point[11][0]) / 11));
								CPY11_1 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 11)) - (point[11][1] - ((point[11][1] - point[10][1]) / 11))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 11)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 11)) - (point[11][0] - ((point[11][0] - point[10][0]) / 11)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 11)))) - (point[11][1] + ((point[12][1] - point[11][1]) / 11))));

								P0x = point[11][0];
								P0y = point[11][1];
								P1x = CPX11_1;
								P1y = CPY11_1;
								P2x = point[12][0];
								P2y = point[12][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 12) {
								CPX12_1 = (point[12][0] + ((point[13][0] - point[12][0]) / 12));
								CPY12_1 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 12)) - (point[12][1] - ((point[12][1] - point[11][1]) / 12))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 12)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 12)) - (point[12][0] - ((point[12][0] - point[11][0]) / 12)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 12)))) - (point[12][1] + ((point[13][1] - point[12][1]) / 12))));

								P0x = point[12][0];
								P0y = point[12][1];
								P1x = CPX12_1;
								P1y = CPY12_1;
								P2x = point[13][0];
								P2y = point[13][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 13) {
								CPX13_1 = (point[13][0] + ((point[14][0] - point[13][0]) / 13));
								CPY13_1 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 13)) - (point[13][1] - ((point[13][1] - point[12][1]) / 13))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 13)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 13)) - (point[13][0] - ((point[13][0] - point[12][0]) / 13)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 13)))) - (point[13][1] + ((point[14][1] - point[13][1]) / 13))));

								P0x = point[13][0];
								P0y = point[13][1];
								P1x = CPX13_1;
								P1y = CPY13_1;
								P2x = point[14][0];
								P2y = point[14][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 14) {
								CPX14_1 = (point[14][0] + ((point[15][0] - point[14][0]) / 14));
								CPY14_1 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 14)) - (point[14][1] - ((point[14][1] - point[13][1]) / 14))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 14)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 14)) - (point[14][0] - ((point[14][0] - point[13][0]) / 14)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 14)))) - (point[14][1] + ((point[15][1] - point[14][1]) / 14))));

								P0x = point[14][0];
								P0y = point[14][1];
								P1x = CPX14_1;
								P1y = CPY14_1;
								P2x = point[15][0];
								P2y = point[15][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 15) {
								CPX15_1 = (point[15][0] + ((point[16][0] - point[15][0]) / 15));
								CPY15_1 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 15)) - (point[15][1] - ((point[15][1] - point[14][1]) / 15))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 15)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 15)) - (point[15][0] - ((point[15][0] - point[14][0]) / 15)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 15)))) - (point[15][1] + ((point[16][1] - point[15][1]) / 15))));

								P0x = point[15][0];
								P0y = point[15][1];
								P1x = CPX15_1;
								P1y = CPY15_1;
								P2x = point[16][0];
								P2y = point[16][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 16) {
								CPX16_1 = (point[16][0] + ((point[17][0] - point[16][0]) / 16));
								CPY16_1 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 16)) - (point[16][1] - ((point[16][1] - point[15][1]) / 16))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 16)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 16)) - (point[16][0] - ((point[16][0] - point[15][0]) / 16)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 16)))) - (point[16][1] + ((point[17][1] - point[16][1]) / 16))));

								P0x = point[16][0];
								P0y = point[16][1];
								P1x = CPX16_1;
								P1y = CPY16_1;
								P2x = point[17][0];
								P2y = point[17][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 17) {
								CPX17_1 = (point[17][0] + ((point[18][0] - point[17][0]) / 17));
								CPY17_1 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 17)) - (point[17][1] - ((point[17][1] - point[16][1]) / 17))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 17)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 17)) - (point[17][0] - ((point[17][0] - point[16][0]) / 17)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 17)))) - (point[17][1] + ((point[18][1] - point[17][1]) / 17))));

								P0x = point[17][0];
								P0y = point[17][1];
								P1x = CPX17_1;
								P1y = CPY17_1;
								P2x = point[18][0];
								P2y = point[18][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 18) {
								CPX18_1 = (point[18][0] + ((point[19][0] - point[18][0]) / 18));
								CPY18_1 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 18)) - (point[18][1] - ((point[18][1] - point[17][1]) / 18))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 18)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 18)) - (point[18][0] - ((point[18][0] - point[17][0]) / 18)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 18)))) - (point[18][1] + ((point[19][1] - point[18][1]) / 18))));

								P0x = point[18][0];
								P0y = point[18][1];
								P1x = CPX18_1;
								P1y = CPY18_1;
								P2x = point[19][0];
								P2y = point[19][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}

							else if (Click == 19) {
								CPX19_1 = (point[19][0] + ((point[20][0] - point[19][0]) / 19));
								CPY19_1 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 19)) - (point[19][1] - ((point[19][1] - point[18][1]) / 19))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 19)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 19)) - (point[19][0] - ((point[19][0] - point[18][0]) / 19)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 19)))) - (point[19][1] + ((point[20][1] - point[19][1]) / 19))));

								P0x = point[19][0];
								P0y = point[19][1];
								P1x = CPX19_1;
								P1y = CPY19_1;
								P2x = point[20][0];
								P2y = point[20][1];

								// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
								fopen_s(&fp, FileName, "a");

								X0Line = P0x;
								Y0Line = P0y;
								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX0Line = (X0Line * 2) - 90;
								RealY0Line = (Y0Line * (-2)) + 1030;
								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;

								for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
									GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
									k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}

								fclose(fp);

								// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
								fopen_s(&fp, FileName, "a");

								X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

								RealX1Line = (X1Line * 2) - 90;
								RealY1Line = (Y1Line * (-2)) + 1030;
								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;

								for (j = RealX1Line; j < RealX2Line + 1; j++) {
									GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
									k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
								fopen_s(&fp, FileName, "a");

								X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX2Line = (X2Line * 2) - 90;
								RealY2Line = (Y2Line * (-2)) + 1030;
								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;

								for (j = RealX2Line; j < RealX3Line + 1; j++) {
									GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
									k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
								fopen_s(&fp, FileName, "a");

								X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

								RealX3Line = (X3Line * 2) - 90;
								RealY3Line = (Y3Line * (-2)) + 1030;
								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;

								for (j = RealX3Line; j < RealX4Line + 1; j++) {
									GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
									k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
								fopen_s(&fp, FileName, "a");

								X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

								RealX4Line = (X4Line * 2) - 90;
								RealY4Line = (Y4Line * (-2)) + 1030;
								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;

								for (j = RealX4Line; j < RealX5Line + 1; j++) {
									GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
									k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
								fopen_s(&fp, FileName, "a");

								X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

								RealX5Line = (X5Line * 2) - 90;
								RealY5Line = (Y5Line * (-2)) + 1030;
								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;

								for (j = RealX5Line; j < RealX6Line + 1; j++) {
									GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
									k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
								fopen_s(&fp, FileName, "a");

								X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

								RealX6Line = (X6Line * 2) - 90;
								RealY6Line = (Y6Line * (-2)) + 1030;
								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;

								for (j = RealX6Line; j < RealX7Line + 1; j++) {
									GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
									k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);


								// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
								fopen_s(&fp, FileName, "a");

								X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
								Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
								X8Line = P2x;
								Y8Line = P2y;

								RealX7Line = (X7Line * 2) - 90;
								RealY7Line = (Y7Line * (-2)) + 1030;
								RealX8Line = (X8Line * 2) - 90;
								RealY8Line = (Y8Line * (-2)) + 1030;

								for (j = RealX7Line; j < RealX8Line + 1; j++) {
									GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
									k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
									fprintf(fp, "(%.2d,  ", (int)j);
									fprintf(fp, "%.2f) \n", k);
								}
								fclose(fp);

							}
						}

						char* ptr2 = strtok(FileName, ".");		// FileName 문자를 . 기준으로 자른다.
						//char *ptr2 = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
						char str8[30] = "(point)";
						//char str9[10] = ".txt";
						char str9[10] = ".data";
						//strcat(ptr2, str8);
						strcat(ptr2, str9);

						// 불러오기 할 좌표
						fopen_s(&fp, FileName, "wb");	// 좌표 불러올 파일

						fprintf(fp, "%d \n", Click);
						fprintf(fp, "%d  %d\n", point[0][0], point[0][1]);
						fprintf(fp, "%d  %d\n", point[1][0], point[1][1]);
						fprintf(fp, "%d  %d\n", point[2][0], point[2][1]);
						fprintf(fp, "%d  %d\n", point[3][0], point[3][1]);
						fprintf(fp, "%d  %d\n", point[4][0], point[4][1]);
						fprintf(fp, "%d  %d\n", point[5][0], point[5][1]);
						fprintf(fp, "%d  %d\n", point[6][0], point[6][1]);
						fprintf(fp, "%d  %d\n", point[7][0], point[7][1]);
						fprintf(fp, "%d  %d\n", point[8][0], point[8][1]);
						fprintf(fp, "%d  %d\n", point[9][0], point[9][1]);
						fprintf(fp, "%d  %d\n", point[10][0], point[10][1]);
						fprintf(fp, "%d  %d\n", point[11][0], point[11][1]);
						fprintf(fp, "%d  %d\n", point[12][0], point[12][1]);
						fprintf(fp, "%d  %d\n", point[13][0], point[13][1]);
						fprintf(fp, "%d  %d\n", point[14][0], point[14][1]);
						fprintf(fp, "%d  %d\n", point[15][0], point[15][1]);
						fprintf(fp, "%d  %d\n", point[16][0], point[16][1]);
						fprintf(fp, "%d  %d\n", point[17][0], point[17][1]);
						fprintf(fp, "%d  %d\n", point[18][0], point[18][1]);
						fprintf(fp, "%d  %d\n", point[19][0], point[19][1]);
						fprintf(fp, "%d  %d\n", point[20][0], point[20][1]);
						fprintf(fp, "%d  %d\n", point[21][0], point[21][1]);

						// Move
						fprintf(fp, "%d  %d\n", CMoveX0, CMoveY0);
						fprintf(fp, "%d  %d\n", CMoveX1, CMoveY1);
						fprintf(fp, "%d  %d\n", CMoveX2, CMoveY2);
						fprintf(fp, "%d  %d\n", CMoveX3, CMoveY3);
						fprintf(fp, "%d  %d\n", CMoveX4, CMoveY4);
						fprintf(fp, "%d  %d\n", CMoveX5, CMoveY5);
						fprintf(fp, "%d  %d\n", CMoveX6, CMoveY6);
						fprintf(fp, "%d  %d\n", CMoveX7, CMoveY7);
						fprintf(fp, "%d  %d\n", CMoveX8, CMoveY8);
						fprintf(fp, "%d  %d\n", CMoveX9, CMoveY9);
						fprintf(fp, "%d  %d\n", CMoveX10, CMoveY10);
						fprintf(fp, "%d  %d\n", CMoveX11, CMoveY11);
						fprintf(fp, "%d  %d\n", CMoveX12, CMoveY12);
						fprintf(fp, "%d  %d\n", CMoveX13, CMoveY13);
						fprintf(fp, "%d  %d\n", CMoveX14, CMoveY14);
						fprintf(fp, "%d  %d\n", CMoveX15, CMoveY15);
						fprintf(fp, "%d  %d\n", CMoveX16, CMoveY16);
						fprintf(fp, "%d  %d\n", CMoveX17, CMoveY17);
						fprintf(fp, "%d  %d\n", CMoveX18, CMoveY18);
						fprintf(fp, "%d  %d\n", CMoveX19, CMoveY19);

						fclose(fp);




						//char *ptr3 = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
						//char str10[30] = "(CMove)";
						////char str11[10] = ".txt";
						//char str11[10] = ".data";
						//strcat(ptr3, str10);
						//strcat(ptr3, str11);
						//fopen_s(&fp, FileName, "wb");	// 좌표 불러올 파일

						//fprintf(fp, "%d  %d\n", CMoveX0, CMoveY0);
						//fprintf(fp, "%d  %d\n", CMoveX1, CMoveY1);
						//fprintf(fp, "%d  %d\n", CMoveX2, CMoveY2);
						//fprintf(fp, "%d  %d\n", CMoveX3, CMoveY3);
						//fprintf(fp, "%d  %d\n", CMoveX4, CMoveY4);
						//fprintf(fp, "%d  %d\n", CMoveX5, CMoveY5);
						//fprintf(fp, "%d  %d\n", CMoveX6, CMoveY6);
						//fprintf(fp, "%d  %d\n", CMoveX7, CMoveY7);
						//fprintf(fp, "%d  %d\n", CMoveX8, CMoveY8);
						//fprintf(fp, "%d  %d\n", CMoveX9, CMoveY9);
						//fprintf(fp, "%d  %d\n", CMoveX10, CMoveY10);
						//fprintf(fp, "%d  %d\n", CMoveX11, CMoveY11);
						//fprintf(fp, "%d  %d\n", CMoveX12, CMoveY12);
						//fprintf(fp, "%d  %d\n", CMoveX13, CMoveY13);
						//fprintf(fp, "%d  %d\n", CMoveX14, CMoveY14);
						//fprintf(fp, "%d  %d\n", CMoveX15, CMoveY15);
						//fprintf(fp, "%d  %d\n", CMoveX16, CMoveY16);
						//fprintf(fp, "%d  %d\n", CMoveX17, CMoveY17);
						//fprintf(fp, "%d  %d\n", CMoveX18, CMoveY18);
						//fprintf(fp, "%d  %d\n", CMoveX19, CMoveY19);

						//fclose(fp);


						//MessageBox(hWnd, _T("Save completed!!"), TEXT("Save"), MB_OK);
						::PostMessage(HWND_BROADCAST, m_uRegisteredMessage, MSG_CURVE_SAVE, lParam);
					}
				}

				else {
					// 같은 이름의 파일이 없으면 바로 저장
					// 점 좌표
					//fopen_s(&fp, FileName, "wb");	// 점좌표 저장
					//for (int i = 0; i < Click + 2; i++) {
					//	fprintf(fp, "(%d, %d)	\n", (point[i][0] * 2) - 90, (point[i][1] * (-2) + 1030));
					//}
					//fclose(fp);

					char* ptr = strtok(FileName, ".");		// FileName 문자를 . 기준으로 자른다.
					//char *ptr = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
					//char str4[30] = "(전체좌표_직선모드)";
					char str4[30] = "(ALL_Point)";
					//char str5[10] = ".txt";
					char str5[10] = ".csv";
					//strcat(ptr, str4);
					strcat(ptr, str5);

					CreateCurveFilePathTXT(FileName);

					if (Line == 1)
					{
						// 전체 좌표 저장
						fopen_s(&fp, FileName, "wb");

						if (point[0][0] > 140) {
							for (j = 0; j < RealStartX + 1; j++) {
								Gap = (0 - RealStartY) / (0 - RealStartX);
								k = j * Gap;
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click == 0) {
							for (i = 0; i <= 1000; i++) {
								fprintf(fp, "(%.2d,  %.2d) \n", i, i);
							}
						}

						if (Click >= 1) {
							for (j = RealStartX; j < RealX1 + 1; j++) {
								Gap = (RealY1 - RealStartY) / (RealX1 - RealStartX);
								k = RealStartY + ((j - RealStartX) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							for (j = RealX1; j < RealX2 + 1; j++) {
								Gap = (RealY2 - RealY1) / (RealX2 - RealX1);
								k = RealY1 + ((j - RealX1) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 2) {
							for (j = RealX2; j < RealX3 + 1; j++) {
								Gap = (RealY3 - RealY2) / (RealX3 - RealX2);
								k = RealY2 + ((j - RealX2) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 3) {
							for (j = RealX3; j < RealX4 + 1; j++) {
								Gap = (RealY4 - RealY3) / (RealX4 - RealX3);
								k = RealY3 + ((j - RealX3) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 4) {
							for (j = RealX4; j < RealX5 + 1; j++) {
								Gap = (RealY5 - RealY4) / (RealX5 - RealX4);
								k = RealY4 + ((j - RealX4) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 5) {
							for (j = RealX5; j < RealX6 + 1; j++) {
								Gap = (RealY6 - RealY5) / (RealX6 - RealX5);
								k = RealY5 + ((j - RealX5) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 6) {
							for (j = RealX6; j < RealX7 + 1; j++) {
								Gap = (RealY7 - RealY6) / (RealX7 - RealX6);
								k = RealY6 + ((j - RealX6) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 7) {
							for (j = RealX7; j < RealX8 + 1; j++) {
								Gap = (RealY8 - RealY7) / (RealX8 - RealX7);
								k = RealY7 + ((j - RealX7) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 8) {
							for (j = RealX8; j < RealX9 + 1; j++) {
								Gap = (RealY9 - RealY8) / (RealX9 - RealX8);
								k = RealY8 + ((j - RealX8) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 9) {
							for (j = RealX9; j < RealX10 + 1; j++) {
								Gap = (RealY10 - RealY9) / (RealX10 - RealX9);
								k = RealY9 + ((j - RealX9) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 10) {
							for (j = RealX10; j < RealX11 + 1; j++) {
								Gap = (RealY11 - RealY10) / (RealX11 - RealX10);
								k = RealY10 + ((j - RealX10) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 11) {
							for (j = RealX11; j < RealX12 + 1; j++) {
								Gap = (RealY12 - RealY11) / (RealX12 - RealX11);
								k = RealY11 + ((j - RealX11) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 12) {
							for (j = RealX12; j < RealX13 + 1; j++) {
								Gap = (RealY13 - RealY12) / (RealX13 - RealX12);
								k = RealY12 + ((j - RealX12) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 13) {
							for (j = RealX13; j < RealX14 + 1; j++) {
								Gap = (RealY14 - RealY13) / (RealX14 - RealX13);
								k = RealY13 + ((j - RealX13) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 14) {
							for (j = RealX14; j < RealX15 + 1; j++) {
								Gap = (RealY15 - RealY14) / (RealX15 - RealX14);
								k = RealY14 + ((j - RealX14) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 15) {
							for (j = RealX15; j < RealX16 + 1; j++) {
								Gap = (RealY16 - RealY15) / (RealX16 - RealX15);
								k = RealY15 + ((j - RealX15) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 16) {
							for (j = RealX16; j < RealX17 + 1; j++) {
								Gap = (RealY17 - RealY16) / (RealX17 - RealX16);
								k = RealY16 + ((j - RealX16) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 17) {
							for (j = RealX17; j < RealX18 + 1; j++) {
								Gap = (RealY18 - RealY17) / (RealX18 - RealX17);
								k = RealY17 + ((j - RealX17) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 18) {
							for (j = RealX18; j < RealX19 + 1; j++) {
								Gap = (RealY19 - RealY18) / (RealX19 - RealX18);
								k = RealY18 + ((j - RealX18) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 19) {
							for (j = RealX19; j < RealX20 + 1; j++) {
								Gap = (RealY20 - RealY19) / (RealX20 - RealX19);
								k = RealY19 + ((j - RealX19) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}

						if (Click >= 20) {
							for (j = RealX20; j < RealX21 + 1; j++) {
								Gap = (RealY21 - RealY20) / (RealX21 - RealX20);
								k = RealY20 + ((j - RealX20) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
						}
						fclose(fp);
					}
					else
					{
						char* ptr1 = strtok(FileName, ".");		// FileName 문자를 . 기준으로 자른다.
						//char *ptr1 = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
						//char str6[30] = "(전체좌표_곡선모드)";
						char str6[30] = "(All_Point)";
						//char str7[10] = ".txt";
						char str7[10] = ".csv";
						//strcat(ptr, str6);
						strcat(ptr, str7);

						float RealX0Line, RealX1Line, RealX2Line, RealX3Line, RealX4Line, RealX5Line, RealX6Line, RealX7Line, RealX8Line;
						float RealY0Line, RealY1Line, RealY2Line, RealY3Line, RealY4Line, RealY5Line, RealY6Line, RealY7Line, RealY8Line;

						int X0Line, X1Line, X2Line, X3Line, X4Line, X5Line, X6Line, X7Line, X8Line;
						int Y0Line, Y1Line, Y2Line, Y3Line, Y4Line, Y5Line, Y6Line, Y7Line, Y8Line;

						float GapY0Y1, GapY1Y2, GapY2Y3, GapY3Y4, GapY4Y5, GapY5Y6, GapY6Y7, GapY7Y8;



						// 전체 좌표 저장


						if (Click == 0) {
							fopen_s(&fp, FileName, "wb");
							for (j = point[0][0]; j < point[1][0] + 1; j++) {
								Gap = (point[1][1] - point[0][1]) / (point[0][1] - point[0][0]);
								k = point[0][1] + ((j - point[0][0]) * Gap);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);
						}

						if (Click >= 1) {
							CPX1 = (point[1][0] - ((point[1][0] - point[0][0]) / 4));
							CPY1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))));

							//DrawSideCurve(hdc, point[0][0], point[0][1], CPX1, CPY1, point[1][0], point[1][1]);
							P0x = point[0][0];
							P0y = point[0][1];
							P1x = CPX1;
							P1y = CPY1;
							P2x = point[1][0];
							P2y = point[1][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "wb");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 2) {
							CPX1_1 = (point[1][0] + ((point[2][0] - point[1][0]) / 4));
							CPY1_1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4))));
							CPX2 = (point[2][0] - ((point[2][0] - point[1][0]) / 4));
							CPY2 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))));

							P0x = point[1][0];
							P0y = point[1][1];
							P1x = CPX1_1;
							P1y = CPY1_1;
							P2x = CPX2;
							P2y = CPY2;
							P3x = point[2][0];
							P3y = point[2][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							//_stprintf_s(str, _T("%d  %d    %.2F  %.2F"), X1Line, X2Line, RealX1Line, RealX2Line);
							//MessageBox(hWnd, str, _T("RealY1Line"), MB_OK);
							//_stprintf_s(str, _T("%d  %d    %.2F  %.2F"), Y1Line, Y2Line, RealY1Line, RealY2Line);
							//MessageBox(hWnd, str, _T("RealY1Line"), MB_OK);

							//_stprintf_s(str, _T("%.2f %.2f %.2f %.2f  %.2f"), RealX1Line, RealX2Line, RealY1Line, RealY2Line, (RealY2Line - RealY1Line)/(RealX2Line - RealX1Line));
							//MessageBox(hWnd, str, _T("l"), MB_OK);
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 3) {
							CPX2_1 = (point[2][0] + ((point[3][0] - point[2][0]) / 4));
							CPY2_1 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4))));
							CPX3 = (point[3][0] - ((point[3][0] - point[2][0]) / 4));
							CPY3 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))));

							P0x = point[2][0];
							P0y = point[2][1];
							P1x = CPX2_1;
							P1y = CPY2_1;
							P2x = CPX3;
							P2y = CPY3;
							P3x = point[3][0];
							P3y = point[3][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 4) {
							CPX3_1 = (point[3][0] + ((point[4][0] - point[3][0]) / 4));
							CPY3_1 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4))));
							CPX4 = (point[4][0] - ((point[4][0] - point[3][0]) / 4));
							CPY4 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))));

							P0x = point[3][0];
							P0y = point[3][1];
							P1x = CPX3_1;
							P1y = CPY3_1;
							P2x = CPX4;
							P2y = CPY4;
							P3x = point[4][0];
							P3y = point[4][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 5) {
							CPX4_1 = (point[4][0] + ((point[5][0] - point[4][0]) / 4));
							CPY4_1 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4))));
							CPX5 = (point[5][0] - ((point[5][0] - point[4][0]) / 4));
							CPY5 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))));

							P0x = point[4][0];
							P0y = point[4][1];
							P1x = CPX4_1;
							P1y = CPY4_1;
							P2x = CPX5;
							P2y = CPY5;
							P3x = point[5][0];
							P3y = point[5][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 6) {
							CPX5_1 = (point[5][0] + ((point[6][0] - point[5][0]) / 4));
							CPY5_1 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 4))));
							CPX6 = (point[6][0] - ((point[6][0] - point[5][0]) / 4));
							CPY6 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 4)) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 4)) - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 4)))) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))));

							P0x = point[5][0];
							P0y = point[5][1];
							P1x = CPX5_1;
							P1y = CPY5_1;
							P2x = CPX6;
							P2y = CPY6;
							P3x = point[6][0];
							P3y = point[6][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 7) {
							CPX6_1 = (point[6][0] + ((point[7][0] - point[6][0]) / 4));
							CPY6_1 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 4)) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 4)) - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 4)))) - (point[6][1] + ((point[7][1] - point[6][1]) / 4))));
							CPX7 = (point[7][0] - ((point[7][0] - point[6][0]) / 4));
							CPY7 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 4)) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 4)) - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 4)))) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))));

							P0x = point[6][0];
							P0y = point[6][1];
							P1x = CPX6_1;
							P1y = CPY6_1;
							P2x = CPX7;
							P2y = CPY7;
							P3x = point[7][0];
							P3y = point[7][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 8) {
							CPX7_1 = (point[7][0] + ((point[8][0] - point[7][0]) / 4));
							CPY7_1 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 4)) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 4)) - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 4)))) - (point[7][1] + ((point[8][1] - point[7][1]) / 4))));
							CPX8 = (point[8][0] - ((point[8][0] - point[7][0]) / 4));
							CPY8 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 4)) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 4)) - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 4)))) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))));

							P0x = point[7][0];
							P0y = point[7][1];
							P1x = CPX7_1;
							P1y = CPY7_1;
							P2x = CPX8;
							P2y = CPY8;
							P3x = point[8][0];
							P3y = point[8][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 9) {
							CPX8_1 = (point[8][0] + ((point[9][0] - point[8][0]) / 4));
							CPY8_1 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 4)) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 4)) - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 4)))) - (point[8][1] + ((point[9][1] - point[8][1]) / 4))));
							CPX9 = (point[9][0] - ((point[9][0] - point[8][0]) / 4));
							CPY9 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 4)) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 4)) - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 4)))) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))));

							P0x = point[8][0];
							P0y = point[8][1];
							P1x = CPX8_1;
							P1y = CPY8_1;
							P2x = CPX9;
							P2y = CPY9;
							P3x = point[9][0];
							P3y = point[9][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 10) {
							CPX9_1 = (point[9][0] + ((point[10][0] - point[9][0]) / 4));
							CPY9_1 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 4)) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 4)) - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 4)))) - (point[9][1] + ((point[10][1] - point[9][1]) / 4))));
							CPX10 = (point[10][0] - ((point[10][0] - point[9][0]) / 4));
							CPY10 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 4)) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 4)) - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 4)))) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))));

							P0x = point[9][0];
							P0y = point[9][1];
							P1x = CPX9_1;
							P1y = CPY9_1;
							P2x = CPX10;
							P2y = CPY10;
							P3x = point[10][0];
							P3y = point[10][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 11) {
							CPX10_1 = (point[10][0] + ((point[11][0] - point[10][0]) / 4));
							CPY10_1 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 4)) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 4)) - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 4)))) - (point[10][1] + ((point[11][1] - point[10][1]) / 4))));
							CPX11 = (point[11][0] - ((point[11][0] - point[10][0]) / 4));
							CPY11 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 4)) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 4)) - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 4)))) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))));

							P0x = point[10][0];
							P0y = point[10][1];
							P1x = CPX10_1;
							P1y = CPY10_1;
							P2x = CPX11;
							P2y = CPY11;
							P3x = point[11][0];
							P3y = point[11][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 12) {
							CPX11_1 = (point[11][0] + ((point[12][0] - point[11][0]) / 4));
							CPY11_1 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 4)) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 4)) - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 4)))) - (point[11][1] + ((point[12][1] - point[11][1]) / 4))));
							CPX12 = (point[12][0] - ((point[12][0] - point[11][0]) / 4));
							CPY12 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 4)) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 4)) - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 4)))) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))));

							P0x = point[11][0];
							P0y = point[11][1];
							P1x = CPX11_1;
							P1y = CPY11_1;
							P2x = CPX12;
							P2y = CPY12;
							P3x = point[12][0];
							P3y = point[12][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 13) {
							CPX12_1 = (point[12][0] + ((point[13][0] - point[12][0]) / 4));
							CPY12_1 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 4)) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 4)) - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 4)))) - (point[12][1] + ((point[13][1] - point[12][1]) / 4))));
							CPX13 = (point[13][0] - ((point[13][0] - point[12][0]) / 4));
							CPY13 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 4)) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 4)) - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 4)))) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))));

							P0x = point[12][0];
							P0y = point[12][1];
							P1x = CPX12_1;
							P1y = CPY12_1;
							P2x = CPX13;
							P2y = CPY13;
							P3x = point[13][0];
							P3y = point[13][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 14) {
							CPX13_1 = (point[13][0] + ((point[14][0] - point[13][0]) / 4));
							CPY13_1 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 4)) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 4)) - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 4)))) - (point[13][1] + ((point[14][1] - point[13][1]) / 4))));
							CPX14 = (point[14][0] - ((point[14][0] - point[13][0]) / 4));
							CPY14 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 4)) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 4)) - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 4)))) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))));

							P0x = point[13][0];
							P0y = point[13][1];
							P1x = CPX13_1;
							P1y = CPY13_1;
							P2x = CPX14;
							P2y = CPY14;
							P3x = point[14][0];
							P3y = point[14][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 15) {
							CPX14_1 = (point[14][0] + ((point[15][0] - point[14][0]) / 4));
							CPY14_1 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 4)) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 4)) - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 4)))) - (point[14][1] + ((point[15][1] - point[14][1]) / 4))));
							CPX15 = (point[15][0] - ((point[15][0] - point[14][0]) / 4));
							CPY15 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 4)) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 4)) - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 4)))) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))));

							P0x = point[14][0];
							P0y = point[14][1];
							P1x = CPX14_1;
							P1y = CPY14_1;
							P2x = CPX15;
							P2y = CPY15;
							P3x = point[15][0];
							P3y = point[15][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 16) {
							CPX15_1 = (point[15][0] + ((point[16][0] - point[15][0]) / 4));
							CPY15_1 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 4)) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 4)) - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 4)))) - (point[15][1] + ((point[16][1] - point[15][1]) / 4))));
							CPX16 = (point[16][0] - ((point[16][0] - point[15][0]) / 4));
							CPY16 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 4)) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 4)) - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 4)))) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))));

							P0x = point[15][0];
							P0y = point[15][1];
							P1x = CPX15_1;
							P1y = CPY15_1;
							P2x = CPX16;
							P2y = CPY16;
							P3x = point[16][0];
							P3y = point[16][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 17) {
							CPX16_1 = (point[16][0] + ((point[17][0] - point[16][0]) / 4));
							CPY16_1 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 4)) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 4)) - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 4)))) - (point[16][1] + ((point[17][1] - point[16][1]) / 4))));
							CPX17 = (point[17][0] - ((point[17][0] - point[16][0]) / 4));
							CPY17 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 4)) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 4)) - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 4)))) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))));

							P0x = point[16][0];
							P0y = point[16][1];
							P1x = CPX16_1;
							P1y = CPY16_1;
							P2x = CPX17;
							P2y = CPY17;
							P3x = point[17][0];
							P3y = point[17][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 18) {
							CPX17_1 = (point[17][0] + ((point[18][0] - point[17][0]) / 4));
							CPY17_1 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 4)) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 4)) - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 4)))) - (point[17][1] + ((point[18][1] - point[17][1]) / 4))));
							CPX18 = (point[18][0] - ((point[18][0] - point[17][0]) / 4));
							CPY18 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 4)) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 4)) - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 4)))) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))));

							P0x = point[17][0];
							P0y = point[17][1];
							P1x = CPX17_1;
							P1y = CPY17_1;
							P2x = CPX18;
							P2y = CPY18;
							P3x = point[18][0];
							P3y = point[18][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						if (Click >= 19) {
							CPX18_1 = (point[18][0] + ((point[19][0] - point[18][0]) / 4));
							CPY18_1 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 4)) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 4)) - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 4)))) - (point[18][1] + ((point[19][1] - point[18][1]) / 4))));
							CPX19 = (point[19][0] - ((point[19][0] - point[18][0]) / 4));
							CPY19 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 4)) - (point[19][1] - ((point[19][1] - point[18][1]) / 4))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 4)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 4)) - (point[19][0] - ((point[19][0] - point[18][0]) / 4)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 4)))) - (point[19][1] - ((point[19][1] - point[18][1]) / 4))));

							P0x = point[18][0];
							P0y = point[18][1];
							P1x = CPX18_1;
							P1y = CPY18_1;
							P2x = CPX19;
							P2y = CPY19;
							P3x = point[19][0];
							P3y = point[19][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
							Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
							X8Line = P3x;
							Y8Line = P3y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}


						// 맨 오른쪽 끝 곡선 좌표 저장
						if (Click == 1) {
							CPX1_1 = (point[1][0] + ((point[2][0] - point[1][0]) / 4));
							CPY1_1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4))));

							P0x = point[1][0];
							P0y = point[1][1];
							P1x = CPX1_1;
							P1y = CPY1_1;
							P2x = point[2][0];
							P2y = point[2][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 2) {
							CPX2_1 = (point[2][0] + ((point[3][0] - point[2][0]) / 4));
							CPY2_1 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4))));

							P0x = point[2][0];
							P0y = point[2][1];
							P1x = CPX2_1;
							P1y = CPY2_1;
							P2x = point[3][0];
							P2y = point[3][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 3) {
							CPX3_1 = (point[3][0] + ((point[4][0] - point[3][0]) / 4));
							CPY3_1 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4))));

							P0x = point[3][0];
							P0y = point[3][1];
							P1x = CPX3_1;
							P1y = CPY3_1;
							P2x = point[4][0];
							P2y = point[4][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 4) {
							CPX4_1 = (point[4][0] + ((point[5][0] - point[4][0]) / 4));
							CPY4_1 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4))));

							P0x = point[4][0];
							P0y = point[4][1];
							P1x = CPX4_1;
							P1y = CPY4_1;
							P2x = point[5][0];
							P2y = point[5][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 5) {
							CPX5_1 = (point[5][0] + ((point[6][0] - point[5][0]) / 5));
							CPY5_1 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 5)) - (point[5][1] - ((point[5][1] - point[4][1]) / 5))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 5)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 5)) - (point[5][0] - ((point[5][0] - point[4][0]) / 5)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 5)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 5))));

							P0x = point[5][0];
							P0y = point[5][1];
							P1x = CPX5_1;
							P1y = CPY5_1;
							P2x = point[6][0];
							P2y = point[6][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 6) {
							CPX6_1 = (point[6][0] + ((point[7][0] - point[6][0]) / 6));
							CPY6_1 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 6)) - (point[6][1] - ((point[6][1] - point[5][1]) / 6))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 6)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 6)) - (point[6][0] - ((point[6][0] - point[5][0]) / 6)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 6)))) - (point[6][1] + ((point[7][1] - point[6][1]) / 6))));

							P0x = point[6][0];
							P0y = point[6][1];
							P1x = CPX6_1;
							P1y = CPY6_1;
							P2x = point[7][0];
							P2y = point[7][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 7) {
							CPX7_1 = (point[7][0] + ((point[8][0] - point[7][0]) / 7));
							CPY7_1 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 7)) - (point[7][1] - ((point[7][1] - point[6][1]) / 7))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 7)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 7)) - (point[7][0] - ((point[7][0] - point[6][0]) / 7)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 7)))) - (point[7][1] + ((point[8][1] - point[7][1]) / 7))));

							P0x = point[7][0];
							P0y = point[7][1];
							P1x = CPX7_1;
							P1y = CPY7_1;
							P2x = point[8][0];
							P2y = point[8][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 8) {
							CPX8_1 = (point[8][0] + ((point[9][0] - point[8][0]) / 8));
							CPY8_1 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 8)) - (point[8][1] - ((point[8][1] - point[7][1]) / 8))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 8)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 8)) - (point[8][0] - ((point[8][0] - point[7][0]) / 8)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 8)))) - (point[8][1] + ((point[9][1] - point[8][1]) / 8))));

							P0x = point[8][0];
							P0y = point[8][1];
							P1x = CPX8_1;
							P1y = CPY8_1;
							P2x = point[9][0];
							P2y = point[9][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 9) {
							CPX9_1 = (point[9][0] + ((point[10][0] - point[9][0]) / 9));
							CPY9_1 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 9)) - (point[9][1] - ((point[9][1] - point[8][1]) / 9))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 9)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 9)) - (point[9][0] - ((point[9][0] - point[8][0]) / 9)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 9)))) - (point[9][1] + ((point[10][1] - point[9][1]) / 9))));

							P0x = point[9][0];
							P0y = point[9][1];
							P1x = CPX9_1;
							P1y = CPY9_1;
							P2x = point[10][0];
							P2y = point[10][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 10) {
							CPX10_1 = (point[10][0] + ((point[11][0] - point[10][0]) / 10));
							CPY10_1 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 10)) - (point[10][1] - ((point[10][1] - point[9][1]) / 10))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 10)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 10)) - (point[10][0] - ((point[10][0] - point[9][0]) / 10)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 10)))) - (point[10][1] + ((point[11][1] - point[10][1]) / 10))));

							P0x = point[10][0];
							P0y = point[10][1];
							P1x = CPX10_1;
							P1y = CPY10_1;
							P2x = point[11][0];
							P2y = point[11][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 11) {
							CPX11_1 = (point[11][0] + ((point[12][0] - point[11][0]) / 11));
							CPY11_1 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 11)) - (point[11][1] - ((point[11][1] - point[10][1]) / 11))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 11)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 11)) - (point[11][0] - ((point[11][0] - point[10][0]) / 11)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 11)))) - (point[11][1] + ((point[12][1] - point[11][1]) / 11))));

							P0x = point[11][0];
							P0y = point[11][1];
							P1x = CPX11_1;
							P1y = CPY11_1;
							P2x = point[12][0];
							P2y = point[12][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 12) {
							CPX12_1 = (point[12][0] + ((point[13][0] - point[12][0]) / 12));
							CPY12_1 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 12)) - (point[12][1] - ((point[12][1] - point[11][1]) / 12))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 12)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 12)) - (point[12][0] - ((point[12][0] - point[11][0]) / 12)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 12)))) - (point[12][1] + ((point[13][1] - point[12][1]) / 12))));

							P0x = point[12][0];
							P0y = point[12][1];
							P1x = CPX12_1;
							P1y = CPY12_1;
							P2x = point[13][0];
							P2y = point[13][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 13) {
							CPX13_1 = (point[13][0] + ((point[14][0] - point[13][0]) / 13));
							CPY13_1 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 13)) - (point[13][1] - ((point[13][1] - point[12][1]) / 13))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 13)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 13)) - (point[13][0] - ((point[13][0] - point[12][0]) / 13)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 13)))) - (point[13][1] + ((point[14][1] - point[13][1]) / 13))));

							P0x = point[13][0];
							P0y = point[13][1];
							P1x = CPX13_1;
							P1y = CPY13_1;
							P2x = point[14][0];
							P2y = point[14][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 14) {
							CPX14_1 = (point[14][0] + ((point[15][0] - point[14][0]) / 14));
							CPY14_1 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 14)) - (point[14][1] - ((point[14][1] - point[13][1]) / 14))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 14)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 14)) - (point[14][0] - ((point[14][0] - point[13][0]) / 14)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 14)))) - (point[14][1] + ((point[15][1] - point[14][1]) / 14))));

							P0x = point[14][0];
							P0y = point[14][1];
							P1x = CPX14_1;
							P1y = CPY14_1;
							P2x = point[15][0];
							P2y = point[15][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 15) {
							CPX15_1 = (point[15][0] + ((point[16][0] - point[15][0]) / 15));
							CPY15_1 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 15)) - (point[15][1] - ((point[15][1] - point[14][1]) / 15))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 15)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 15)) - (point[15][0] - ((point[15][0] - point[14][0]) / 15)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 15)))) - (point[15][1] + ((point[16][1] - point[15][1]) / 15))));

							P0x = point[15][0];
							P0y = point[15][1];
							P1x = CPX15_1;
							P1y = CPY15_1;
							P2x = point[16][0];
							P2y = point[16][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 16) {
							CPX16_1 = (point[16][0] + ((point[17][0] - point[16][0]) / 16));
							CPY16_1 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 16)) - (point[16][1] - ((point[16][1] - point[15][1]) / 16))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 16)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 16)) - (point[16][0] - ((point[16][0] - point[15][0]) / 16)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 16)))) - (point[16][1] + ((point[17][1] - point[16][1]) / 16))));

							P0x = point[16][0];
							P0y = point[16][1];
							P1x = CPX16_1;
							P1y = CPY16_1;
							P2x = point[17][0];
							P2y = point[17][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 17) {
							CPX17_1 = (point[17][0] + ((point[18][0] - point[17][0]) / 17));
							CPY17_1 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 17)) - (point[17][1] - ((point[17][1] - point[16][1]) / 17))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 17)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 17)) - (point[17][0] - ((point[17][0] - point[16][0]) / 17)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 17)))) - (point[17][1] + ((point[18][1] - point[17][1]) / 17))));

							P0x = point[17][0];
							P0y = point[17][1];
							P1x = CPX17_1;
							P1y = CPY17_1;
							P2x = point[18][0];
							P2y = point[18][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 18) {
							CPX18_1 = (point[18][0] + ((point[19][0] - point[18][0]) / 18));
							CPY18_1 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 18)) - (point[18][1] - ((point[18][1] - point[17][1]) / 18))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 18)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 18)) - (point[18][0] - ((point[18][0] - point[17][0]) / 18)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 18)))) - (point[18][1] + ((point[19][1] - point[18][1]) / 18))));

							P0x = point[18][0];
							P0y = point[18][1];
							P1x = CPX18_1;
							P1y = CPY18_1;
							P2x = point[19][0];
							P2y = point[19][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}

						else if (Click == 19) {
							CPX19_1 = (point[19][0] + ((point[20][0] - point[19][0]) / 19));
							CPY19_1 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 19)) - (point[19][1] - ((point[19][1] - point[18][1]) / 19))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 19)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 19)) - (point[19][0] - ((point[19][0] - point[18][0]) / 19)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 19)))) - (point[19][1] + ((point[20][1] - point[19][1]) / 19))));

							P0x = point[19][0];
							P0y = point[19][1];
							P1x = CPX19_1;
							P1y = CPY19_1;
							P2x = point[20][0];
							P2y = point[20][1];

							// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
							fopen_s(&fp, FileName, "a");

							X0Line = P0x;
							Y0Line = P0y;
							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX0Line = (X0Line * 2) - 90;
							RealY0Line = (Y0Line * (-2)) + 1030;
							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;

							for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
								GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
								k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}

							fclose(fp);

							// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
							fopen_s(&fp, FileName, "a");

							X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

							RealX1Line = (X1Line * 2) - 90;
							RealY1Line = (Y1Line * (-2)) + 1030;
							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;

							for (j = RealX1Line; j < RealX2Line + 1; j++) {
								GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
								k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
							fopen_s(&fp, FileName, "a");

							X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX2Line = (X2Line * 2) - 90;
							RealY2Line = (Y2Line * (-2)) + 1030;
							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;

							for (j = RealX2Line; j < RealX3Line + 1; j++) {
								GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
								k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
							fopen_s(&fp, FileName, "a");

							X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

							RealX3Line = (X3Line * 2) - 90;
							RealY3Line = (Y3Line * (-2)) + 1030;
							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;

							for (j = RealX3Line; j < RealX4Line + 1; j++) {
								GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
								k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
							fopen_s(&fp, FileName, "a");

							X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

							RealX4Line = (X4Line * 2) - 90;
							RealY4Line = (Y4Line * (-2)) + 1030;
							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;

							for (j = RealX4Line; j < RealX5Line + 1; j++) {
								GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
								k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
							fopen_s(&fp, FileName, "a");

							X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

							RealX5Line = (X5Line * 2) - 90;
							RealY5Line = (Y5Line * (-2)) + 1030;
							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;

							for (j = RealX5Line; j < RealX6Line + 1; j++) {
								GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
								k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
							fopen_s(&fp, FileName, "a");

							X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

							RealX6Line = (X6Line * 2) - 90;
							RealY6Line = (Y6Line * (-2)) + 1030;
							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;

							for (j = RealX6Line; j < RealX7Line + 1; j++) {
								GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
								k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);


							// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
							fopen_s(&fp, FileName, "a");

							X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
							Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
							X8Line = P2x;
							Y8Line = P2y;

							RealX7Line = (X7Line * 2) - 90;
							RealY7Line = (Y7Line * (-2)) + 1030;
							RealX8Line = (X8Line * 2) - 90;
							RealY8Line = (Y8Line * (-2)) + 1030;

							for (j = RealX7Line; j < RealX8Line + 1; j++) {
								GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
								k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
								fprintf(fp, "(%.2d,  ", (int)j);
								fprintf(fp, "%.2f) \n", k);
							}
							fclose(fp);

						}
					}

					char* ptr2 = strtok(FileName, ".");		// FileName 문자를 ( 기준으로 자른다.
					//char *ptr2 = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
					char str8[30] = "(point)";
					//char str9[10] = ".txt";
					char str9[10] = ".data";
					//strcat(ptr2, str8);
					strcat(ptr2, str9);

					// 불러오기 할 좌표
					fopen_s(&fp, FileName, "wb");	// 좌표 불러올 파일

					fprintf(fp, "%d \n", Click);
					fprintf(fp, "%d  %d\n", point[0][0], point[0][1]);
					fprintf(fp, "%d  %d\n", point[1][0], point[1][1]);
					fprintf(fp, "%d  %d\n", point[2][0], point[2][1]);
					fprintf(fp, "%d  %d\n", point[3][0], point[3][1]);
					fprintf(fp, "%d  %d\n", point[4][0], point[4][1]);
					fprintf(fp, "%d  %d\n", point[5][0], point[5][1]);
					fprintf(fp, "%d  %d\n", point[6][0], point[6][1]);
					fprintf(fp, "%d  %d\n", point[7][0], point[7][1]);
					fprintf(fp, "%d  %d\n", point[8][0], point[8][1]);
					fprintf(fp, "%d  %d\n", point[9][0], point[9][1]);
					fprintf(fp, "%d  %d\n", point[10][0], point[10][1]);
					fprintf(fp, "%d  %d\n", point[11][0], point[11][1]);
					fprintf(fp, "%d  %d\n", point[12][0], point[12][1]);
					fprintf(fp, "%d  %d\n", point[13][0], point[13][1]);
					fprintf(fp, "%d  %d\n", point[14][0], point[14][1]);
					fprintf(fp, "%d  %d\n", point[15][0], point[15][1]);
					fprintf(fp, "%d  %d\n", point[16][0], point[16][1]);
					fprintf(fp, "%d  %d\n", point[17][0], point[17][1]);
					fprintf(fp, "%d  %d\n", point[18][0], point[18][1]);
					fprintf(fp, "%d  %d\n", point[19][0], point[19][1]);
					fprintf(fp, "%d  %d\n", point[20][0], point[20][1]);
					fprintf(fp, "%d  %d\n", point[21][0], point[21][1]);

					fprintf(fp, "%d  %d\n", CMoveX0, CMoveY0);
					fprintf(fp, "%d  %d\n", CMoveX1, CMoveY1);
					fprintf(fp, "%d  %d\n", CMoveX2, CMoveY2);
					fprintf(fp, "%d  %d\n", CMoveX3, CMoveY3);
					fprintf(fp, "%d  %d\n", CMoveX4, CMoveY4);
					fprintf(fp, "%d  %d\n", CMoveX5, CMoveY5);
					fprintf(fp, "%d  %d\n", CMoveX6, CMoveY6);
					fprintf(fp, "%d  %d\n", CMoveX7, CMoveY7);
					fprintf(fp, "%d  %d\n", CMoveX8, CMoveY8);
					fprintf(fp, "%d  %d\n", CMoveX9, CMoveY9);
					fprintf(fp, "%d  %d\n", CMoveX10, CMoveY10);
					fprintf(fp, "%d  %d\n", CMoveX11, CMoveY11);
					fprintf(fp, "%d  %d\n", CMoveX12, CMoveY12);
					fprintf(fp, "%d  %d\n", CMoveX13, CMoveY13);
					fprintf(fp, "%d  %d\n", CMoveX14, CMoveY14);
					fprintf(fp, "%d  %d\n", CMoveX15, CMoveY15);
					fprintf(fp, "%d  %d\n", CMoveX16, CMoveY16);
					fprintf(fp, "%d  %d\n", CMoveX17, CMoveY17);
					fprintf(fp, "%d  %d\n", CMoveX18, CMoveY18);
					fprintf(fp, "%d  %d\n", CMoveX19, CMoveY19);

					fclose(fp);


					//char *ptr3 = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
					//char str10[30] = "(CMove)";
					////char str11[10] = ".txt";
					//char str11[10] = ".data";
					//strcat(ptr3, str10);
					//strcat(ptr3, str11);
					//fopen_s(&fp, FileName, "wb");	// 좌표 불러올 파일

					//fprintf(fp, "%d  %d\n", CMoveX0, CMoveY0);
					//fprintf(fp, "%d  %d\n", CMoveX1, CMoveY1);
					//fprintf(fp, "%d  %d\n", CMoveX2, CMoveY2);
					//fprintf(fp, "%d  %d\n", CMoveX3, CMoveY3);
					//fprintf(fp, "%d  %d\n", CMoveX4, CMoveY4);
					//fprintf(fp, "%d  %d\n", CMoveX5, CMoveY5);
					//fprintf(fp, "%d  %d\n", CMoveX6, CMoveY6);
					//fprintf(fp, "%d  %d\n", CMoveX7, CMoveY7);
					//fprintf(fp, "%d  %d\n", CMoveX8, CMoveY8);
					//fprintf(fp, "%d  %d\n", CMoveX9, CMoveY9);
					//fprintf(fp, "%d  %d\n", CMoveX10, CMoveY10);
					//fprintf(fp, "%d  %d\n", CMoveX11, CMoveY11);
					//fprintf(fp, "%d  %d\n", CMoveX12, CMoveY12);
					//fprintf(fp, "%d  %d\n", CMoveX13, CMoveY13);
					//fprintf(fp, "%d  %d\n", CMoveX14, CMoveY14);
					//fprintf(fp, "%d  %d\n", CMoveX15, CMoveY15);
					//fprintf(fp, "%d  %d\n", CMoveX16, CMoveY16);
					//fprintf(fp, "%d  %d\n", CMoveX17, CMoveY17);
					//fprintf(fp, "%d  %d\n", CMoveX18, CMoveY18);
					//fprintf(fp, "%d  %d\n", CMoveX19, CMoveY19);

					//fclose(fp);


					//MessageBox(hWnd, _T("저장되었습니다."), TEXT("저장"), MB_OK);
					//MessageBox(hWnd, _T("Save completed!"), TEXT("Save"), MB_OK);
					::PostMessage(HWND_BROADCAST, m_uRegisteredMessage, MSG_CURVE_SAVE, lParam);
				}
			}
			break;

			// 노주임 추가 
			// 덮어쓰기 SAVE
		case 16:
		{
			if (Click == 0)
			{
				MessageBox(hWnd, "There must be at least one midpoint!", _T("Alert"), MB_ICONSTOP);
				break;
			}

			if (_FN_Save[0] == '\0')  break;
			//printf("%s\n", _FN_Save);

			FILE* fp;

			//char str2[30] = "(점좌표)";
			//char str2[30] = "(Point_position)";
			//char str3[10] = ".txt";
			//char str3[10] = ".data";
			//strcat(FileName, str2);		// 파일이름(불러오기)
			//strcat(FileName, str3);		// 파일이름(불러오기).txt

			char* ptr0 = strtok(_FN_Save, ".");
			//char *ptr0 = strtok(FileName, "(");
			//_stprintf_s(str, _T("대상 폴더에 이름이 %s 인 파일이 이미 있습니다. 덮어쓰겠습니까?"), FileName);
			_stprintf_s(str, _T("Do you want save?"));

			//answer = MessageBox(hWnd, str, _T("파일이름 중복"), MB_YESNO);
			answer = MessageBox(hWnd, str, _T("Save"), MB_YESNO);
			//answer = IDYES;

			if (answer == IDYES) {			// Save? -> Yes
				// 점 좌표
				//char str2[30] = "(점좌표)";
				//char str2[30] = "(Point_Position)";
				//char str3[10] = ".txt";
				//strcat(FileName, str2);		// 파일이름(불러오기)
				//strcat(FileName, str3);		// 파일이름(불러오기).txt

				//fopen_s(&fp, FileName, "wb");	// 점좌표 저장
				//for (int i = 0; i < Click + 2; i++) {
				//	fprintf(fp, "(%d,  %d)	\n", (point[i][0] * 2) - 90, (point[i][1] * (-2) + 1030));
				//}
				//fclose(fp);


				char* ptr = strtok(_FN_Save, ".");		// FileName 문자를 . 기준으로 자른다.
				//char *ptr = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
				//char str4[30] = "(전체좌표_직선모드)";
				char str4[30] = "(All_Point)";
				//char str5[10] = ".txt";
				char str5[10] = ".csv";
				//strcat(ptr, str4);
				strcat(ptr, str5);

				CreateCurveFilePathTXT(_FN_Save);

				// 직선 체크 되어 있을 경우
				if (Line == 1)
				{
					// 전체 좌표 저장
					fopen_s(&fp, _FN_Save, "wb");

					if (point[0][0] > 140) {
						for (j = 0; j < RealStartX + 1; j++) {
							Gap = (0 - RealStartY) / (0 - RealStartX);
							k = j * Gap;
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}
					if (Click >= 1) {
						for (j = RealStartX; j < RealX1 + 1; j++) {
							Gap = (RealY1 - RealStartY) / (RealX1 - RealStartX);
							k = RealStartY + ((j - RealStartX) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						for (j = RealX1; j < RealX2 + 1; j++) {
							Gap = (RealY2 - RealY1) / (RealX2 - RealX1);
							k = RealY1 + ((j - RealX1) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 2) {
						for (j = RealX2; j < RealX3 + 1; j++) {
							Gap = (RealY3 - RealY2) / (RealX3 - RealX2);
							k = RealY2 + ((j - RealX2) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 3) {
						for (j = RealX3; j < RealX4 + 1; j++) {
							Gap = (RealY4 - RealY3) / (RealX4 - RealX3);
							k = RealY3 + ((j - RealX3) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 4) {
						for (j = RealX4; j < RealX5 + 1; j++) {
							Gap = (RealY5 - RealY4) / (RealX5 - RealX4);
							k = RealY4 + ((j - RealX4) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 5) {
						for (j = RealX5; j < RealX6 + 1; j++) {
							Gap = (RealY6 - RealY5) / (RealX6 - RealX5);
							k = RealY5 + ((j - RealX5) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 6) {
						for (j = RealX6; j < RealX7 + 1; j++) {
							Gap = (RealY7 - RealY6) / (RealX7 - RealX6);
							k = RealY6 + ((j - RealX6) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 7) {
						for (j = RealX7; j < RealX8 + 1; j++) {
							Gap = (RealY8 - RealY7) / (RealX8 - RealX7);
							k = RealY7 + ((j - RealX7) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 8) {
						for (j = RealX8; j < RealX9 + 1; j++) {
							Gap = (RealY9 - RealY8) / (RealX9 - RealX8);
							k = RealY8 + ((j - RealX8) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 9) {
						for (j = RealX9; j < RealX10 + 1; j++) {
							Gap = (RealY10 - RealY9) / (RealX10 - RealX9);
							k = RealY9 + ((j - RealX9) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 10) {
						for (j = RealX10; j < RealX11 + 1; j++) {
							Gap = (RealY11 - RealY10) / (RealX11 - RealX10);
							k = RealY10 + ((j - RealX10) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 11) {
						for (j = RealX11; j < RealX12 + 1; j++) {
							Gap = (RealY12 - RealY11) / (RealX12 - RealX11);
							k = RealY11 + ((j - RealX11) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 12) {
						for (j = RealX12; j < RealX13 + 1; j++) {
							Gap = (RealY13 - RealY12) / (RealX13 - RealX12);
							k = RealY12 + ((j - RealX12) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 13) {
						for (j = RealX13; j < RealX14 + 1; j++) {
							Gap = (RealY14 - RealY13) / (RealX14 - RealX13);
							k = RealY13 + ((j - RealX13) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 14) {
						for (j = RealX14; j < RealX15 + 1; j++) {
							Gap = (RealY15 - RealY14) / (RealX15 - RealX14);
							k = RealY14 + ((j - RealX14) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 15) {
						for (j = RealX15; j < RealX16 + 1; j++) {
							Gap = (RealY16 - RealY15) / (RealX16 - RealX15);
							k = RealY15 + ((j - RealX15) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 16) {
						for (j = RealX16; j < RealX17 + 1; j++) {
							Gap = (RealY17 - RealY16) / (RealX17 - RealX16);
							k = RealY16 + ((j - RealX16) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 17) {
						for (j = RealX17; j < RealX18 + 1; j++) {
							Gap = (RealY18 - RealY17) / (RealX18 - RealX17);
							k = RealY17 + ((j - RealX17) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 18) {
						for (j = RealX18; j < RealX19 + 1; j++) {
							Gap = (RealY19 - RealY18) / (RealX19 - RealX18);
							k = RealY18 + ((j - RealX18) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 19) {
						for (j = RealX19; j < RealX20 + 1; j++) {
							Gap = (RealY20 - RealY19) / (RealX20 - RealX19);
							k = RealY19 + ((j - RealX19) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}

					if (Click >= 20) {
						for (j = RealX20; j < RealX21 + 1; j++) {
							Gap = (RealY21 - RealY20) / (RealX21 - RealX20);
							k = RealY20 + ((j - RealX20) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
					}
					fclose(fp);
				}
				else
				{
					char* ptr1 = strtok(_FN_Save, ".");		// FileName 문자를 . 기준으로 자른다.
					//char *ptr1 = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
					//char str6[30] = "(전체좌표_곡선모드)";
					char str6[30] = "(All_Point)";
					//char str7[10] = ".txt";
					char str7[10] = ".csv";
					//strcat(ptr, str6);
					strcat(ptr, str7);

					float RealX0Line, RealX1Line, RealX2Line, RealX3Line, RealX4Line, RealX5Line, RealX6Line, RealX7Line, RealX8Line;
					float RealY0Line, RealY1Line, RealY2Line, RealY3Line, RealY4Line, RealY5Line, RealY6Line, RealY7Line, RealY8Line;

					int X0Line, X1Line, X2Line, X3Line, X4Line, X5Line, X6Line, X7Line, X8Line;
					int Y0Line, Y1Line, Y2Line, Y3Line, Y4Line, Y5Line, Y6Line, Y7Line, Y8Line;

					float GapY0Y1, GapY1Y2, GapY2Y3, GapY3Y4, GapY4Y5, GapY5Y6, GapY6Y7, GapY7Y8;



					// 전체 좌표 저장


					if (Click == 0) {
						fopen_s(&fp, _FN_Save, "wb");
						for (j = point[0][0]; j < point[1][0] + 1; j++) {
							Gap = (point[1][1] - point[0][1]) / (point[0][1] - point[0][0]);
							k = point[0][1] + ((j - point[0][0]) * Gap);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);
					}

					if (Click >= 1) {
						CPX1 = (point[1][0] - ((point[1][0] - point[0][0]) / 4));
						CPY1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))));

						//DrawSideCurve(hdc, point[0][0], point[0][1], CPX1, CPY1, point[1][0], point[1][1]);
						P0x = point[0][0];
						P0y = point[0][1];
						P1x = CPX1;
						P1y = CPY1;
						P2x = point[1][0];
						P2y = point[1][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "wb");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 2) {
						CPX1_1 = (point[1][0] + ((point[2][0] - point[1][0]) / 4));
						CPY1_1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4))));
						CPX2 = (point[2][0] - ((point[2][0] - point[1][0]) / 4));
						CPY2 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))));

						P0x = point[1][0];
						P0y = point[1][1];
						P1x = CPX1_1;
						P1y = CPY1_1;
						P2x = CPX2;
						P2y = CPY2;
						P3x = point[2][0];
						P3y = point[2][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						//_stprintf_s(str, _T("%d  %d    %.2F  %.2F"), X1Line, X2Line, RealX1Line, RealX2Line);
						//MessageBox(hWnd, str, _T("RealY1Line"), MB_OK);
						//_stprintf_s(str, _T("%d  %d    %.2F  %.2F"), Y1Line, Y2Line, RealY1Line, RealY2Line);
						//MessageBox(hWnd, str, _T("RealY1Line"), MB_OK);

						//_stprintf_s(str, _T("%.2f %.2f %.2f %.2f  %.2f"), RealX1Line, RealX2Line, RealY1Line, RealY2Line, (RealY2Line - RealY1Line)/(RealX2Line - RealX1Line));
						//MessageBox(hWnd, str, _T("l"), MB_OK);
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 3) {
						CPX2_1 = (point[2][0] + ((point[3][0] - point[2][0]) / 4));
						CPY2_1 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4))));
						CPX3 = (point[3][0] - ((point[3][0] - point[2][0]) / 4));
						CPY3 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))));

						P0x = point[2][0];
						P0y = point[2][1];
						P1x = CPX2_1;
						P1y = CPY2_1;
						P2x = CPX3;
						P2y = CPY3;
						P3x = point[3][0];
						P3y = point[3][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 4) {
						CPX3_1 = (point[3][0] + ((point[4][0] - point[3][0]) / 4));
						CPY3_1 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4))));
						CPX4 = (point[4][0] - ((point[4][0] - point[3][0]) / 4));
						CPY4 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))));

						P0x = point[3][0];
						P0y = point[3][1];
						P1x = CPX3_1;
						P1y = CPY3_1;
						P2x = CPX4;
						P2y = CPY4;
						P3x = point[4][0];
						P3y = point[4][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 5) {
						CPX4_1 = (point[4][0] + ((point[5][0] - point[4][0]) / 4));
						CPY4_1 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4))));
						CPX5 = (point[5][0] - ((point[5][0] - point[4][0]) / 4));
						CPY5 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))));

						P0x = point[4][0];
						P0y = point[4][1];
						P1x = CPX4_1;
						P1y = CPY4_1;
						P2x = CPX5;
						P2y = CPY5;
						P3x = point[5][0];
						P3y = point[5][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 6) {
						CPX5_1 = (point[5][0] + ((point[6][0] - point[5][0]) / 4));
						CPY5_1 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 4))));
						CPX6 = (point[6][0] - ((point[6][0] - point[5][0]) / 4));
						CPY6 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 4)) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 4)) - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 4)))) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))));

						P0x = point[5][0];
						P0y = point[5][1];
						P1x = CPX5_1;
						P1y = CPY5_1;
						P2x = CPX6;
						P2y = CPY6;
						P3x = point[6][0];
						P3y = point[6][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 7) {
						CPX6_1 = (point[6][0] + ((point[7][0] - point[6][0]) / 4));
						CPY6_1 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 4)) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 4)) - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 4)))) - (point[6][1] + ((point[7][1] - point[6][1]) / 4))));
						CPX7 = (point[7][0] - ((point[7][0] - point[6][0]) / 4));
						CPY7 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 4)) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 4)) - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 4)))) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))));

						P0x = point[6][0];
						P0y = point[6][1];
						P1x = CPX6_1;
						P1y = CPY6_1;
						P2x = CPX7;
						P2y = CPY7;
						P3x = point[7][0];
						P3y = point[7][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 8) {
						CPX7_1 = (point[7][0] + ((point[8][0] - point[7][0]) / 4));
						CPY7_1 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 4)) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 4)) - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 4)))) - (point[7][1] + ((point[8][1] - point[7][1]) / 4))));
						CPX8 = (point[8][0] - ((point[8][0] - point[7][0]) / 4));
						CPY8 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 4)) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 4)) - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 4)))) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))));

						P0x = point[7][0];
						P0y = point[7][1];
						P1x = CPX7_1;
						P1y = CPY7_1;
						P2x = CPX8;
						P2y = CPY8;
						P3x = point[8][0];
						P3y = point[8][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 9) {
						CPX8_1 = (point[8][0] + ((point[9][0] - point[8][0]) / 4));
						CPY8_1 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 4)) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 4)) - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 4)))) - (point[8][1] + ((point[9][1] - point[8][1]) / 4))));
						CPX9 = (point[9][0] - ((point[9][0] - point[8][0]) / 4));
						CPY9 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 4)) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 4)) - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 4)))) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))));

						P0x = point[8][0];
						P0y = point[8][1];
						P1x = CPX8_1;
						P1y = CPY8_1;
						P2x = CPX9;
						P2y = CPY9;
						P3x = point[9][0];
						P3y = point[9][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 10) {
						CPX9_1 = (point[9][0] + ((point[10][0] - point[9][0]) / 4));
						CPY9_1 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 4)) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 4)) - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 4)))) - (point[9][1] + ((point[10][1] - point[9][1]) / 4))));
						CPX10 = (point[10][0] - ((point[10][0] - point[9][0]) / 4));
						CPY10 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 4)) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 4)) - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 4)))) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))));

						P0x = point[9][0];
						P0y = point[9][1];
						P1x = CPX9_1;
						P1y = CPY9_1;
						P2x = CPX10;
						P2y = CPY10;
						P3x = point[10][0];
						P3y = point[10][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 11) {
						CPX10_1 = (point[10][0] + ((point[11][0] - point[10][0]) / 4));
						CPY10_1 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 4)) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 4)) - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 4)))) - (point[10][1] + ((point[11][1] - point[10][1]) / 4))));
						CPX11 = (point[11][0] - ((point[11][0] - point[10][0]) / 4));
						CPY11 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 4)) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 4)) - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 4)))) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))));

						P0x = point[10][0];
						P0y = point[10][1];
						P1x = CPX10_1;
						P1y = CPY10_1;
						P2x = CPX11;
						P2y = CPY11;
						P3x = point[11][0];
						P3y = point[11][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 12) {
						CPX11_1 = (point[11][0] + ((point[12][0] - point[11][0]) / 4));
						CPY11_1 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 4)) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 4)) - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 4)))) - (point[11][1] + ((point[12][1] - point[11][1]) / 4))));
						CPX12 = (point[12][0] - ((point[12][0] - point[11][0]) / 4));
						CPY12 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 4)) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 4)) - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 4)))) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))));

						P0x = point[11][0];
						P0y = point[11][1];
						P1x = CPX11_1;
						P1y = CPY11_1;
						P2x = CPX12;
						P2y = CPY12;
						P3x = point[12][0];
						P3y = point[12][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 13) {
						CPX12_1 = (point[12][0] + ((point[13][0] - point[12][0]) / 4));
						CPY12_1 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 4)) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 4)) - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 4)))) - (point[12][1] + ((point[13][1] - point[12][1]) / 4))));
						CPX13 = (point[13][0] - ((point[13][0] - point[12][0]) / 4));
						CPY13 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 4)) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 4)) - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 4)))) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))));

						P0x = point[12][0];
						P0y = point[12][1];
						P1x = CPX12_1;
						P1y = CPY12_1;
						P2x = CPX13;
						P2y = CPY13;
						P3x = point[13][0];
						P3y = point[13][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 14) {
						CPX13_1 = (point[13][0] + ((point[14][0] - point[13][0]) / 4));
						CPY13_1 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 4)) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 4)) - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 4)))) - (point[13][1] + ((point[14][1] - point[13][1]) / 4))));
						CPX14 = (point[14][0] - ((point[14][0] - point[13][0]) / 4));
						CPY14 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 4)) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 4)) - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 4)))) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))));

						P0x = point[13][0];
						P0y = point[13][1];
						P1x = CPX13_1;
						P1y = CPY13_1;
						P2x = CPX14;
						P2y = CPY14;
						P3x = point[14][0];
						P3y = point[14][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 15) {
						CPX14_1 = (point[14][0] + ((point[15][0] - point[14][0]) / 4));
						CPY14_1 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 4)) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 4)) - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 4)))) - (point[14][1] + ((point[15][1] - point[14][1]) / 4))));
						CPX15 = (point[15][0] - ((point[15][0] - point[14][0]) / 4));
						CPY15 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 4)) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 4)) - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 4)))) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))));

						P0x = point[14][0];
						P0y = point[14][1];
						P1x = CPX14_1;
						P1y = CPY14_1;
						P2x = CPX15;
						P2y = CPY15;
						P3x = point[15][0];
						P3y = point[15][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 16) {
						CPX15_1 = (point[15][0] + ((point[16][0] - point[15][0]) / 4));
						CPY15_1 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 4)) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 4)) - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 4)))) - (point[15][1] + ((point[16][1] - point[15][1]) / 4))));
						CPX16 = (point[16][0] - ((point[16][0] - point[15][0]) / 4));
						CPY16 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 4)) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 4)) - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 4)))) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))));

						P0x = point[15][0];
						P0y = point[15][1];
						P1x = CPX15_1;
						P1y = CPY15_1;
						P2x = CPX16;
						P2y = CPY16;
						P3x = point[16][0];
						P3y = point[16][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 17) {
						CPX16_1 = (point[16][0] + ((point[17][0] - point[16][0]) / 4));
						CPY16_1 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 4)) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 4)) - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 4)))) - (point[16][1] + ((point[17][1] - point[16][1]) / 4))));
						CPX17 = (point[17][0] - ((point[17][0] - point[16][0]) / 4));
						CPY17 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 4)) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 4)) - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 4)))) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))));

						P0x = point[16][0];
						P0y = point[16][1];
						P1x = CPX16_1;
						P1y = CPY16_1;
						P2x = CPX17;
						P2y = CPY17;
						P3x = point[17][0];
						P3y = point[17][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 18) {
						CPX17_1 = (point[17][0] + ((point[18][0] - point[17][0]) / 4));
						CPY17_1 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 4)) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 4)) - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 4)))) - (point[17][1] + ((point[18][1] - point[17][1]) / 4))));
						CPX18 = (point[18][0] - ((point[18][0] - point[17][0]) / 4));
						CPY18 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 4)) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 4)) - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 4)))) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))));

						P0x = point[17][0];
						P0y = point[17][1];
						P1x = CPX17_1;
						P1y = CPY17_1;
						P2x = CPX18;
						P2y = CPY18;
						P3x = point[18][0];
						P3y = point[18][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					if (Click >= 19) {
						CPX18_1 = (point[18][0] + ((point[19][0] - point[18][0]) / 4));
						CPY18_1 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 4)) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 4)) - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 4)))) - (point[18][1] + ((point[19][1] - point[18][1]) / 4))));
						CPX19 = (point[19][0] - ((point[19][0] - point[18][0]) / 4));
						CPY19 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 4)) - (point[19][1] - ((point[19][1] - point[18][1]) / 4))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 4)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 4)) - (point[19][0] - ((point[19][0] - point[18][0]) / 4)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 4)))) - (point[19][1] - ((point[19][1] - point[18][1]) / 4))));

						P0x = point[18][0];
						P0y = point[18][1];
						P1x = CPX18_1;
						P1y = CPY18_1;
						P2x = CPX19;
						P2y = CPY19;
						P3x = point[19][0];
						P3y = point[19][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;
						Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;
						X8Line = P3x;
						Y8Line = P3y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}


					// 맨 오른쪽 끝 곡선 좌표 저장
					if (Click == 1) {
						CPX1_1 = (point[1][0] + ((point[2][0] - point[1][0]) / 4));
						CPY1_1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4))));

						P0x = point[1][0];
						P0y = point[1][1];
						P1x = CPX1_1;
						P1y = CPY1_1;
						P2x = point[2][0];
						P2y = point[2][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 2) {
						CPX2_1 = (point[2][0] + ((point[3][0] - point[2][0]) / 4));
						CPY2_1 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4))));

						P0x = point[2][0];
						P0y = point[2][1];
						P1x = CPX2_1;
						P1y = CPY2_1;
						P2x = point[3][0];
						P2y = point[3][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 3) {
						CPX3_1 = (point[3][0] + ((point[4][0] - point[3][0]) / 4));
						CPY3_1 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4))));

						P0x = point[3][0];
						P0y = point[3][1];
						P1x = CPX3_1;
						P1y = CPY3_1;
						P2x = point[4][0];
						P2y = point[4][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 4) {
						CPX4_1 = (point[4][0] + ((point[5][0] - point[4][0]) / 4));
						CPY4_1 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4))));

						P0x = point[4][0];
						P0y = point[4][1];
						P1x = CPX4_1;
						P1y = CPY4_1;
						P2x = point[5][0];
						P2y = point[5][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 5) {
						CPX5_1 = (point[5][0] + ((point[6][0] - point[5][0]) / 5));
						CPY5_1 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 5)) - (point[5][1] - ((point[5][1] - point[4][1]) / 5))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 5)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 5)) - (point[5][0] - ((point[5][0] - point[4][0]) / 5)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 5)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 5))));

						P0x = point[5][0];
						P0y = point[5][1];
						P1x = CPX5_1;
						P1y = CPY5_1;
						P2x = point[6][0];
						P2y = point[6][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 6) {
						CPX6_1 = (point[6][0] + ((point[7][0] - point[6][0]) / 6));
						CPY6_1 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 6)) - (point[6][1] - ((point[6][1] - point[5][1]) / 6))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 6)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 6)) - (point[6][0] - ((point[6][0] - point[5][0]) / 6)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 6)))) - (point[6][1] + ((point[7][1] - point[6][1]) / 6))));

						P0x = point[6][0];
						P0y = point[6][1];
						P1x = CPX6_1;
						P1y = CPY6_1;
						P2x = point[7][0];
						P2y = point[7][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 7) {
						CPX7_1 = (point[7][0] + ((point[8][0] - point[7][0]) / 7));
						CPY7_1 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 7)) - (point[7][1] - ((point[7][1] - point[6][1]) / 7))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 7)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 7)) - (point[7][0] - ((point[7][0] - point[6][0]) / 7)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 7)))) - (point[7][1] + ((point[8][1] - point[7][1]) / 7))));

						P0x = point[7][0];
						P0y = point[7][1];
						P1x = CPX7_1;
						P1y = CPY7_1;
						P2x = point[8][0];
						P2y = point[8][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 8) {
						CPX8_1 = (point[8][0] + ((point[9][0] - point[8][0]) / 8));
						CPY8_1 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 8)) - (point[8][1] - ((point[8][1] - point[7][1]) / 8))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 8)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 8)) - (point[8][0] - ((point[8][0] - point[7][0]) / 8)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 8)))) - (point[8][1] + ((point[9][1] - point[8][1]) / 8))));

						P0x = point[8][0];
						P0y = point[8][1];
						P1x = CPX8_1;
						P1y = CPY8_1;
						P2x = point[9][0];
						P2y = point[9][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 9) {
						CPX9_1 = (point[9][0] + ((point[10][0] - point[9][0]) / 9));
						CPY9_1 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 9)) - (point[9][1] - ((point[9][1] - point[8][1]) / 9))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 9)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 9)) - (point[9][0] - ((point[9][0] - point[8][0]) / 9)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 9)))) - (point[9][1] + ((point[10][1] - point[9][1]) / 9))));

						P0x = point[9][0];
						P0y = point[9][1];
						P1x = CPX9_1;
						P1y = CPY9_1;
						P2x = point[10][0];
						P2y = point[10][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 10) {
						CPX10_1 = (point[10][0] + ((point[11][0] - point[10][0]) / 10));
						CPY10_1 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 10)) - (point[10][1] - ((point[10][1] - point[9][1]) / 10))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 10)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 10)) - (point[10][0] - ((point[10][0] - point[9][0]) / 10)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 10)))) - (point[10][1] + ((point[11][1] - point[10][1]) / 10))));

						P0x = point[10][0];
						P0y = point[10][1];
						P1x = CPX10_1;
						P1y = CPY10_1;
						P2x = point[11][0];
						P2y = point[11][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 11) {
						CPX11_1 = (point[11][0] + ((point[12][0] - point[11][0]) / 11));
						CPY11_1 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 11)) - (point[11][1] - ((point[11][1] - point[10][1]) / 11))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 11)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 11)) - (point[11][0] - ((point[11][0] - point[10][0]) / 11)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 11)))) - (point[11][1] + ((point[12][1] - point[11][1]) / 11))));

						P0x = point[11][0];
						P0y = point[11][1];
						P1x = CPX11_1;
						P1y = CPY11_1;
						P2x = point[12][0];
						P2y = point[12][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 12) {
						CPX12_1 = (point[12][0] + ((point[13][0] - point[12][0]) / 12));
						CPY12_1 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 12)) - (point[12][1] - ((point[12][1] - point[11][1]) / 12))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 12)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 12)) - (point[12][0] - ((point[12][0] - point[11][0]) / 12)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 12)))) - (point[12][1] + ((point[13][1] - point[12][1]) / 12))));

						P0x = point[12][0];
						P0y = point[12][1];
						P1x = CPX12_1;
						P1y = CPY12_1;
						P2x = point[13][0];
						P2y = point[13][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 13) {
						CPX13_1 = (point[13][0] + ((point[14][0] - point[13][0]) / 13));
						CPY13_1 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 13)) - (point[13][1] - ((point[13][1] - point[12][1]) / 13))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 13)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 13)) - (point[13][0] - ((point[13][0] - point[12][0]) / 13)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 13)))) - (point[13][1] + ((point[14][1] - point[13][1]) / 13))));

						P0x = point[13][0];
						P0y = point[13][1];
						P1x = CPX13_1;
						P1y = CPY13_1;
						P2x = point[14][0];
						P2y = point[14][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 14) {
						CPX14_1 = (point[14][0] + ((point[15][0] - point[14][0]) / 14));
						CPY14_1 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 14)) - (point[14][1] - ((point[14][1] - point[13][1]) / 14))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 14)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 14)) - (point[14][0] - ((point[14][0] - point[13][0]) / 14)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 14)))) - (point[14][1] + ((point[15][1] - point[14][1]) / 14))));

						P0x = point[14][0];
						P0y = point[14][1];
						P1x = CPX14_1;
						P1y = CPY14_1;
						P2x = point[15][0];
						P2y = point[15][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 15) {
						CPX15_1 = (point[15][0] + ((point[16][0] - point[15][0]) / 15));
						CPY15_1 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 15)) - (point[15][1] - ((point[15][1] - point[14][1]) / 15))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 15)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 15)) - (point[15][0] - ((point[15][0] - point[14][0]) / 15)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 15)))) - (point[15][1] + ((point[16][1] - point[15][1]) / 15))));

						P0x = point[15][0];
						P0y = point[15][1];
						P1x = CPX15_1;
						P1y = CPY15_1;
						P2x = point[16][0];
						P2y = point[16][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 16) {
						CPX16_1 = (point[16][0] + ((point[17][0] - point[16][0]) / 16));
						CPY16_1 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 16)) - (point[16][1] - ((point[16][1] - point[15][1]) / 16))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 16)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 16)) - (point[16][0] - ((point[16][0] - point[15][0]) / 16)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 16)))) - (point[16][1] + ((point[17][1] - point[16][1]) / 16))));

						P0x = point[16][0];
						P0y = point[16][1];
						P1x = CPX16_1;
						P1y = CPY16_1;
						P2x = point[17][0];
						P2y = point[17][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 17) {
						CPX17_1 = (point[17][0] + ((point[18][0] - point[17][0]) / 17));
						CPY17_1 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 17)) - (point[17][1] - ((point[17][1] - point[16][1]) / 17))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 17)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 17)) - (point[17][0] - ((point[17][0] - point[16][0]) / 17)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 17)))) - (point[17][1] + ((point[18][1] - point[17][1]) / 17))));

						P0x = point[17][0];
						P0y = point[17][1];
						P1x = CPX17_1;
						P1y = CPY17_1;
						P2x = point[18][0];
						P2y = point[18][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 18) {
						CPX18_1 = (point[18][0] + ((point[19][0] - point[18][0]) / 18));
						CPY18_1 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 18)) - (point[18][1] - ((point[18][1] - point[17][1]) / 18))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 18)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 18)) - (point[18][0] - ((point[18][0] - point[17][0]) / 18)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 18)))) - (point[18][1] + ((point[19][1] - point[18][1]) / 18))));

						P0x = point[18][0];
						P0y = point[18][1];
						P1x = CPX18_1;
						P1y = CPY18_1;
						P2x = point[19][0];
						P2y = point[19][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}

					else if (Click == 19) {
						CPX19_1 = (point[19][0] + ((point[20][0] - point[19][0]) / 19));
						CPY19_1 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 19)) - (point[19][1] - ((point[19][1] - point[18][1]) / 19))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 19)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 19)) - (point[19][0] - ((point[19][0] - point[18][0]) / 19)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 19)))) - (point[19][1] + ((point[20][1] - point[19][1]) / 19))));

						P0x = point[19][0];
						P0y = point[19][1];
						P1x = CPX19_1;
						P1y = CPY19_1;
						P2x = point[20][0];
						P2y = point[20][1];

						// point[1][0] ~ 첫번째 점 사이의 좌표 (point[1][0] ~ Y1Line)
						fopen_s(&fp, _FN_Save, "a");

						X0Line = P0x;
						Y0Line = P0y;
						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX0Line = (X0Line * 2) - 90;
						RealY0Line = (Y0Line * (-2)) + 1030;
						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;

						for (j = RealX0Line + 1; j < RealX1Line + 1; j++) {
							GapY0Y1 = (RealY1Line - RealY0Line) / (RealX1Line - RealX0Line);
							k = RealY0Line + ((j - RealX0Line + 1) * GapY0Y1);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}

						fclose(fp);

						// 첫번째 - 두번째 점 사이 좌표   (Y1Line ~ Y2Line)
						fopen_s(&fp, _FN_Save, "a");

						X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);

						RealX1Line = (X1Line * 2) - 90;
						RealY1Line = (Y1Line * (-2)) + 1030;
						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;

						for (j = RealX1Line; j < RealX2Line + 1; j++) {
							GapY1Y2 = (RealY2Line - RealY1Line) / (RealX2Line - RealX1Line);
							k = RealY1Line + ((j - RealX1Line) * GapY1Y2);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 두번째 - 세번째 점 사이 좌표 (Y2Line ~ Y3Line)
						fopen_s(&fp, _FN_Save, "a");

						X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX2Line = (X2Line * 2) - 90;
						RealY2Line = (Y2Line * (-2)) + 1030;
						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;

						for (j = RealX2Line; j < RealX3Line + 1; j++) {
							GapY2Y3 = (RealY3Line - RealY2Line) / (RealX3Line - RealX2Line);
							k = RealY2Line + ((j - RealX2Line) * GapY2Y3);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 세번째 - 네번째 점 사이 좌표 (Y3Line ~ Y4Line)
						fopen_s(&fp, _FN_Save, "a");

						X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);

						RealX3Line = (X3Line * 2) - 90;
						RealY3Line = (Y3Line * (-2)) + 1030;
						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;

						for (j = RealX3Line; j < RealX4Line + 1; j++) {
							GapY3Y4 = (RealY4Line - RealY3Line) / (RealX4Line - RealX3Line);
							k = RealY3Line + ((j - RealX3Line) * GapY3Y4);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 네번째 - 다섯번째 점 사이 좌표 (Y4Line ~ Y5Line)
						fopen_s(&fp, _FN_Save, "a");

						X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);

						RealX4Line = (X4Line * 2) - 90;
						RealY4Line = (Y4Line * (-2)) + 1030;
						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;

						for (j = RealX4Line; j < RealX5Line + 1; j++) {
							GapY4Y5 = (RealY5Line - RealY4Line) / (RealX5Line - RealX4Line);
							k = RealY4Line + ((j - RealX4Line) * GapY4Y5);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 다섯번째 - 여섯번째 점 사이 좌표 (Y5Line ~ Y6Line)
						fopen_s(&fp, _FN_Save, "a");

						X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);

						RealX5Line = (X5Line * 2) - 90;
						RealY5Line = (Y5Line * (-2)) + 1030;
						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;

						for (j = RealX5Line; j < RealX6Line + 1; j++) {
							GapY5Y6 = (RealY6Line - RealY5Line) / (RealX6Line - RealX5Line);
							k = RealY5Line + ((j - RealX5Line) * GapY5Y6);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 여섯번째 - 일곱번째 점 사이 좌표 (Y6Line ~ Y7Line)
						fopen_s(&fp, _FN_Save, "a");

						X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

						RealX6Line = (X6Line * 2) - 90;
						RealY6Line = (Y6Line * (-2)) + 1030;
						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;

						for (j = RealX6Line; j < RealX7Line + 1; j++) {
							GapY6Y7 = (RealY7Line - RealY6Line) / (RealX7Line - RealX6Line);
							k = RealY6Line + ((j - RealX6Line) * GapY6Y7);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);


						// 일곱번째 - point[2][0] 점 사이 좌표 (Y7Line ~ point[2][0])
						fopen_s(&fp, _FN_Save, "a");

						X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);
						Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);
						X8Line = P2x;
						Y8Line = P2y;

						RealX7Line = (X7Line * 2) - 90;
						RealY7Line = (Y7Line * (-2)) + 1030;
						RealX8Line = (X8Line * 2) - 90;
						RealY8Line = (Y8Line * (-2)) + 1030;

						for (j = RealX7Line; j < RealX8Line + 1; j++) {
							GapY7Y8 = (RealY8Line - RealY7Line) / (RealX8Line - RealX7Line);
							k = RealY7Line + ((j - RealX7Line) * GapY7Y8);
							fprintf(fp, "(%.2d,  ", (int)j);
							fprintf(fp, "%.2f) \n", k);
						}
						fclose(fp);

					}
				}

				char* ptr2 = strtok(_FN_Save, ".");		// FileName 문자를 . 기준으로 자른다.
				//char *ptr2 = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
				char str8[30] = "(point)";
				//char str9[10] = ".txt";
				char str9[10] = ".data";
				//strcat(ptr2, str8);
				strcat(ptr2, str9);

				// 불러오기 할 좌표
				fopen_s(&fp, _FN_Save, "wb");	// 좌표 불러올 파일

				fprintf(fp, "%d \n", Click);
				fprintf(fp, "%d  %d\n", point[0][0], point[0][1]);
				fprintf(fp, "%d  %d\n", point[1][0], point[1][1]);
				fprintf(fp, "%d  %d\n", point[2][0], point[2][1]);
				fprintf(fp, "%d  %d\n", point[3][0], point[3][1]);
				fprintf(fp, "%d  %d\n", point[4][0], point[4][1]);
				fprintf(fp, "%d  %d\n", point[5][0], point[5][1]);
				fprintf(fp, "%d  %d\n", point[6][0], point[6][1]);
				fprintf(fp, "%d  %d\n", point[7][0], point[7][1]);
				fprintf(fp, "%d  %d\n", point[8][0], point[8][1]);
				fprintf(fp, "%d  %d\n", point[9][0], point[9][1]);
				fprintf(fp, "%d  %d\n", point[10][0], point[10][1]);
				fprintf(fp, "%d  %d\n", point[11][0], point[11][1]);
				fprintf(fp, "%d  %d\n", point[12][0], point[12][1]);
				fprintf(fp, "%d  %d\n", point[13][0], point[13][1]);
				fprintf(fp, "%d  %d\n", point[14][0], point[14][1]);
				fprintf(fp, "%d  %d\n", point[15][0], point[15][1]);
				fprintf(fp, "%d  %d\n", point[16][0], point[16][1]);
				fprintf(fp, "%d  %d\n", point[17][0], point[17][1]);
				fprintf(fp, "%d  %d\n", point[18][0], point[18][1]);
				fprintf(fp, "%d  %d\n", point[19][0], point[19][1]);
				fprintf(fp, "%d  %d\n", point[20][0], point[20][1]);
				fprintf(fp, "%d  %d\n", point[21][0], point[21][1]);

				// Move
				fprintf(fp, "%d  %d\n", CMoveX0, CMoveY0);
				fprintf(fp, "%d  %d\n", CMoveX1, CMoveY1);
				fprintf(fp, "%d  %d\n", CMoveX2, CMoveY2);
				fprintf(fp, "%d  %d\n", CMoveX3, CMoveY3);
				fprintf(fp, "%d  %d\n", CMoveX4, CMoveY4);
				fprintf(fp, "%d  %d\n", CMoveX5, CMoveY5);
				fprintf(fp, "%d  %d\n", CMoveX6, CMoveY6);
				fprintf(fp, "%d  %d\n", CMoveX7, CMoveY7);
				fprintf(fp, "%d  %d\n", CMoveX8, CMoveY8);
				fprintf(fp, "%d  %d\n", CMoveX9, CMoveY9);
				fprintf(fp, "%d  %d\n", CMoveX10, CMoveY10);
				fprintf(fp, "%d  %d\n", CMoveX11, CMoveY11);
				fprintf(fp, "%d  %d\n", CMoveX12, CMoveY12);
				fprintf(fp, "%d  %d\n", CMoveX13, CMoveY13);
				fprintf(fp, "%d  %d\n", CMoveX14, CMoveY14);
				fprintf(fp, "%d  %d\n", CMoveX15, CMoveY15);
				fprintf(fp, "%d  %d\n", CMoveX16, CMoveY16);
				fprintf(fp, "%d  %d\n", CMoveX17, CMoveY17);
				fprintf(fp, "%d  %d\n", CMoveX18, CMoveY18);
				fprintf(fp, "%d  %d\n", CMoveX19, CMoveY19);

				fclose(fp);




				//char *ptr3 = strtok(FileName, "(");		// FileName 문자를 ( 기준으로 자른다.
				//char str10[30] = "(CMove)";
				////char str11[10] = ".txt";
				//char str11[10] = ".data";
				//strcat(ptr3, str10);
				//strcat(ptr3, str11);
				//fopen_s(&fp, FileName, "wb");	// 좌표 불러올 파일

				//fprintf(fp, "%d  %d\n", CMoveX0, CMoveY0);
				//fprintf(fp, "%d  %d\n", CMoveX1, CMoveY1);
				//fprintf(fp, "%d  %d\n", CMoveX2, CMoveY2);
				//fprintf(fp, "%d  %d\n", CMoveX3, CMoveY3);
				//fprintf(fp, "%d  %d\n", CMoveX4, CMoveY4);
				//fprintf(fp, "%d  %d\n", CMoveX5, CMoveY5);
				//fprintf(fp, "%d  %d\n", CMoveX6, CMoveY6);
				//fprintf(fp, "%d  %d\n", CMoveX7, CMoveY7);
				//fprintf(fp, "%d  %d\n", CMoveX8, CMoveY8);
				//fprintf(fp, "%d  %d\n", CMoveX9, CMoveY9);
				//fprintf(fp, "%d  %d\n", CMoveX10, CMoveY10);
				//fprintf(fp, "%d  %d\n", CMoveX11, CMoveY11);
				//fprintf(fp, "%d  %d\n", CMoveX12, CMoveY12);
				//fprintf(fp, "%d  %d\n", CMoveX13, CMoveY13);
				//fprintf(fp, "%d  %d\n", CMoveX14, CMoveY14);
				//fprintf(fp, "%d  %d\n", CMoveX15, CMoveY15);
				//fprintf(fp, "%d  %d\n", CMoveX16, CMoveY16);
				//fprintf(fp, "%d  %d\n", CMoveX17, CMoveY17);
				//fprintf(fp, "%d  %d\n", CMoveX18, CMoveY18);
				//fprintf(fp, "%d  %d\n", CMoveX19, CMoveY19);

				//fclose(fp);


				//MessageBox(hWnd, _T("Save completed!!"), TEXT("Save"), MB_OK);
				::PostMessage(HWND_BROADCAST, m_uRegisteredMessage, MSG_CURVE_SAVE, lParam);
			}
		}
		break;

		case 2:		// 처음으로
			SetWindowTextW(hWnd, (LPCWSTR)TEXT("Curve"));
			Max = 0;
			Click = 0;
			Doolgi = -1;
			CMoveStartX = 45;
			CMoveStartY = 515;
			CMoveEndX = 545;
			CMoveEndY = 15;

			point[0][0] = CMoveStartX;
			point[0][1] = CMoveStartY;
			point[1][0] = CMoveEndX;
			point[1][1] = CMoveEndY;

			point[2][0] = 0;
			point[2][1] = 0;
			point[3][0] = 0;
			point[3][1] = 0;
			point[4][0] = 0;
			point[4][1] = 0;
			point[5][0] = 0;
			point[5][1] = 0;
			point[6][0] = 0;
			point[6][1] = 0;
			point[7][0] = 0;
			point[7][1] = 0;
			point[8][0] = 0;
			point[8][1] = 0;
			point[9][0] = 0;
			point[9][1] = 0;
			point[10][0] = 0;
			point[10][1] = 0;
			point[11][0] = 0;
			point[11][1] = 0;
			point[12][0] = 0;
			point[12][1] = 0;
			point[13][0] = 0;
			point[13][1] = 0;
			point[14][0] = 0;
			point[14][1] = 0;
			point[15][0] = 0;
			point[15][1] = 0;
			point[16][0] = 0;
			point[16][1] = 0;
			point[17][0] = 0;
			point[17][1] = 0;
			point[18][0] = 0;
			point[18][1] = 0;
			point[19][0] = 0;
			point[19][1] = 0;
			point[20][0] = 0;
			point[20][1] = 0;
			point[21][0] = 0;
			point[21][1] = 0;


			CMoveX0 = 0;
			CMoveX1 = 0;
			CMoveX2 = 0;
			CMoveX3 = 0;
			CMoveX4 = 0;
			CMoveX5 = 0;
			CMoveX6 = 0;
			CMoveX7 = 0;
			CMoveX8 = 0;
			CMoveX9 = 0;
			CMoveX10 = 0;
			CMoveX11 = 0;
			CMoveX12 = 0;
			CMoveX13 = 0;
			CMoveX14 = 0;
			CMoveX15 = 0;
			CMoveX16 = 0;
			CMoveX17 = 0;
			CMoveX18 = 0;
			CMoveX19 = 0;



			CMoveY0 = 0;
			CMoveY1 = 0;
			CMoveY2 = 0;
			CMoveY3 = 0;
			CMoveY4 = 0;
			CMoveY5 = 0;
			CMoveY6 = 0;
			CMoveY7 = 0;
			CMoveY8 = 0;
			CMoveY9 = 0;
			CMoveY10 = 0;
			CMoveY11 = 0;
			CMoveY12 = 0;
			CMoveY13 = 0;
			CMoveY14 = 0;
			CMoveY15 = 0;
			CMoveY16 = 0;
			CMoveY17 = 0;
			CMoveY18 = 0;
			CMoveY19 = 0;

			InvalidateRect(hWnd, NULL, FALSE);

			break;



		case 3:
			if (SendMessage(c3, BM_GETCHECK, 0, 0) == BST_UNCHECKED) {
				Line = 0;
				InvalidateRect(hWnd, NULL, FALSE);
			}
			else {
				Line = 1;
				InvalidateRect(hWnd, NULL, FALSE);
			}
			break;

		case 4:
			if (SendMessage(c4, BM_GETCHECK, 0, 0) == BST_UNCHECKED) {
				SubLine = 0;
				InvalidateRect(hWnd, NULL, FALSE);
			}
			else {
				SubLine = 1;
				InvalidateRect(hWnd, NULL, FALSE);
			}
			break;

		case 5:

			break;


		case 6:

			break;


		case ID_R1:		// 4분의 1 지점에 제어점
			CPPosition = 1;
			InvalidateRect(hWnd, NULL, FALSE);
			break;

		case ID_R2:		// 3분의 1 지점에 제어점
			CPPosition = 2;
			InvalidateRect(hWnd, NULL, FALSE);
			break;

		case ID_R3:		// 2분의 1 지점에 제어점
			CPPosition = 3;
			InvalidateRect(hWnd, NULL, FALSE);
			break;

		case IDM_ABOUT:
			DialogBox(hInst, MAKEINTRESOURCE(IDD_ABOUTBOX), hWnd, About);
			break;
		case IDM_EXIT:
			//answer = MessageBox(hWnd, TEXT("프로그램을 종료하시겠습니까"), TEXT("종료"), MB_YESNO);
			answer = MessageBox(hWnd, TEXT("Do you want quit program?"), TEXT("Program quit"), MB_YESNO);
			if (answer == IDYES) {
				DestroyWindow(hWnd);
			}
			break;
		default:
			return DefWindowProc(hWnd, message, wParam, lParam);
		}
	}
	break;

	case WM_LBUTTONDOWN:		// 마우스 누른 순간
	{
		EnergyDown = EnergyDown + 1;

		if (ptMouse.x <= 545 && ptMouse.y <= 515 && ptMouse.x >= 45 && ptMouse.y >= 15) {
			Click = Click + 1;
			if (Click >= 19) {
				Click = 19;
			}
		}
	}

	case WM_LBUTTONUP:		// 마우스 뗀 순간
	{
		EnergyUp = EnergyUp + 1;
	}

	case WM_MOUSEMOVE:
	{
		switch (wParam)
		{

		case (VK_RBUTTON):		// 오른쪽 마우스 클릭하면 : 점 움직일때 y축으로만 움직이도록
			// 좌표가 아닌곳을 누르면
			/*
			if (ptMouse.x <= 45 && ptMouse.y <= 15 && ptMouse.x >= 545 && ptMouse.y >= 515) {
				Click = Max;
			}
			*/
			if (ptMouse.y >= point[Click + 1][1] - 25 && ptMouse.y <= point[Click + 1][1] + 25 && ptMouse.x >= point[Click + 1][0] - 15 && ptMouse.x <= point[Click + 1][0] + 15) {
				point[Click + 1][1] = ptMouse.y;
				point[Click + 1][0] = 545;
				Doolgi = Click + 1;
				Click = Max;
				if (point[Click + 1][1] <= 15) {
					point[Click + 1][1] = 15;
				}
				else if (point[Click + 1][1] >= 515) {
					point[Click + 1][1] = 515;
				}
			}

			else if (ptMouse.y >= point[0][1] - 25 && ptMouse.y <= point[0][1] + 25 && ptMouse.x >= point[0][0] - 15 && ptMouse.x <= point[0][0] + 15) {
				point[0][1] = ptMouse.y;
				Doolgi = 0;
				Click = Max;
				if (point[0][1] > 515) {		// y축이 좌표 밖으로 나가지 않도록
					point[0][1] = 515;
				}
				if (point[0][1] < 15) {
					point[0][1] = 15;
				}
			}
			else if (ptMouse.y >= point[1][1] - 25 && ptMouse.y <= point[1][1] + 25 && ptMouse.x >= point[1][0] - 15 && ptMouse.x <= point[1][0] + 15) {
				point[1][1] = ptMouse.y;
				Doolgi = 1;
				Click = Max;
			}
			else if (ptMouse.y >= point[2][1] - 25 && ptMouse.y <= point[2][1] + 25 && ptMouse.x >= point[2][0] - 15 && ptMouse.x <= point[2][0] + 15) {
				point[2][1] = ptMouse.y;
				Doolgi = 2;
				Click = Max;
			}
			else if (ptMouse.y >= point[3][1] - 25 && ptMouse.y <= point[3][1] + 25 && ptMouse.x >= point[3][0] - 15 && ptMouse.x <= point[3][0] + 15) {
				point[3][1] = ptMouse.y;
				Doolgi = 3;
				Click = Max;
			}
			else if (ptMouse.y >= point[4][1] - 25 && ptMouse.y <= point[4][1] + 25 && ptMouse.x >= point[4][0] - 15 && ptMouse.x <= point[4][0] + 15) {
				point[4][1] = ptMouse.y;
				Doolgi = 4;
				Click = Max;
			}
			else if (ptMouse.y >= point[5][1] - 25 && ptMouse.y <= point[5][1] + 25 && ptMouse.x >= point[5][0] - 15 && ptMouse.x <= point[5][0] + 15) {
				point[5][1] = ptMouse.y;
				Doolgi = 5;
				Click = Max;
			}
			else if (ptMouse.y >= point[6][1] - 25 && ptMouse.y <= point[6][1] + 25 && ptMouse.x >= point[6][0] - 15 && ptMouse.x <= point[6][0] + 15) {
				point[6][1] = ptMouse.y;
				Doolgi = 6;
				Click = Max;
			}
			else if (ptMouse.y >= point[7][1] - 25 && ptMouse.y <= point[7][1] + 25 && ptMouse.x >= point[7][0] - 15 && ptMouse.x <= point[7][0] + 15) {
				point[7][1] = ptMouse.y;
				Doolgi = 7;
				Click = Max;
			}
			else if (ptMouse.y >= point[8][1] - 25 && ptMouse.y <= point[8][1] + 25 && ptMouse.x >= point[8][0] - 15 && ptMouse.x <= point[8][0] + 15) {
				point[8][1] = ptMouse.y;
				Doolgi = 8;
				Click = Max;
			}
			else if (ptMouse.y >= point[9][1] - 25 && ptMouse.y <= point[9][1] + 25 && ptMouse.x >= point[9][0] - 15 && ptMouse.x <= point[9][0] + 15) {
				point[9][1] = ptMouse.y;
				Doolgi = 9;
				Click = Max;
			}
			else if (ptMouse.y >= point[10][1] - 25 && ptMouse.y <= point[10][1] + 25 && ptMouse.x >= point[10][0] - 15 && ptMouse.x <= point[10][0] + 15) {
				point[10][1] = ptMouse.y;
				Doolgi = 10;
				Click = Max;
			}
			else if (ptMouse.y >= point[11][1] - 25 && ptMouse.y <= point[11][1] + 25 && ptMouse.x >= point[11][0] - 15 && ptMouse.x <= point[11][0] + 15) {
				point[11][1] = ptMouse.y;
				Doolgi = 11;
				Click = Max;
			}
			else if (ptMouse.y >= point[12][1] - 25 && ptMouse.y <= point[12][1] + 25 && ptMouse.x >= point[12][0] - 15 && ptMouse.x <= point[12][0] + 15) {
				point[12][1] = ptMouse.y;
				Doolgi = 12;
				Click = Max;
			}
			else if (ptMouse.y >= point[13][1] - 25 && ptMouse.y <= point[13][1] + 25 && ptMouse.x >= point[13][0] - 15 && ptMouse.x <= point[13][0] + 15) {
				point[13][1] = ptMouse.y;
				Doolgi = 13;
				Click = Max;
			}
			else if (ptMouse.y >= point[14][1] - 25 && ptMouse.y <= point[14][1] + 25 && ptMouse.x >= point[14][0] - 15 && ptMouse.x <= point[14][0] + 15) {
				point[14][1] = ptMouse.y;
				Doolgi = 14;
				Click = Max;
			}
			else if (ptMouse.y >= point[15][1] - 25 && ptMouse.y <= point[15][1] + 25 && ptMouse.x >= point[15][0] - 15 && ptMouse.x <= point[15][0] + 15) {
				point[15][1] = ptMouse.y;
				Doolgi = 15;
				Click = Max;
			}
			else if (ptMouse.y >= point[16][1] - 25 && ptMouse.y <= point[16][1] + 25 && ptMouse.x >= point[16][0] - 15 && ptMouse.x <= point[16][0] + 15) {
				point[16][1] = ptMouse.y;
				Doolgi = 16;
				Click = Max;
			}
			else if (ptMouse.y >= point[17][1] - 25 && ptMouse.y <= point[17][1] + 25 && ptMouse.x >= point[17][0] - 15 && ptMouse.x <= point[17][0] + 15) {
				point[17][1] = ptMouse.y;
				Doolgi = 17;
				Click = Max;
			}
			else if (ptMouse.y >= point[18][1] - 25 && ptMouse.y <= point[18][1] + 25 && ptMouse.x >= point[18][0] - 15 && ptMouse.x <= point[18][0] + 15) {
				point[18][1] = ptMouse.y;
				Doolgi = 18;
				Click = Max;
			}
			else if (ptMouse.y >= point[19][1] - 25 && ptMouse.y <= point[19][1] + 25 && ptMouse.x >= point[19][0] - 15 && ptMouse.x <= point[19][0] + 15) {
				point[19][1] = ptMouse.y;
				Doolgi = 19;
				Click = Max;
			}
			else if (ptMouse.y >= point[20][1] - 25 && ptMouse.y <= point[20][1] + 25 && ptMouse.x >= point[20][0] - 15 && ptMouse.x <= point[20][0] + 15) {
				point[20][1] = ptMouse.y;
				Doolgi = 20;
				Click = Max;
			}
			else if (ptMouse.y >= point[21][1] - 25 && ptMouse.y <= point[21][1] + 25 && ptMouse.x >= point[21][0] - 15 && ptMouse.x <= point[21][0] + 15) {
				point[21][1] = ptMouse.y;
				Doolgi = 21;
				Click = Max;
			}
			else {
				Doolgi = -1;
			}
			InvalidateRect(hWnd, NULL, FALSE);
			break;



		case VK_LBUTTON:		// 왼쪽 마우스 클릭하면
		{

			// 좌표가 아닌곳을 누르면
			if (ptMouse.x <= 45 && ptMouse.y <= 15 && ptMouse.x >= 545 && ptMouse.y >= 515) {
				Click = Max;
			}

			if (Click < 0 || Max < 0) {		// 구간이 - 로 넘어가지 않도록
				Max = 0;
				Click = 0;
			}

			// 왼쪽 마우스 : 점 움직일때 x축, y축 한번에 움직이도록 (시작점과 끝점은 y축으로만 움직이도록)
			if (ptMouse.y >= point[Click + 1][1] - 25 && ptMouse.y <= point[Click + 1][1] + 25 && ptMouse.x >= point[Click + 1][0] - 15 && ptMouse.x <= point[Click + 1][0] + 15) {
				point[Click + 1][1] = ptMouse.y;
				point[Click + 1][0] = 545;
				Doolgi = Click + 1;
				Click = Max;
				if (point[Click + 1][1] <= 15) {
					point[Click + 1][1] = 15;
				}
				else if (point[Click + 1][1] >= 515) {
					point[Click + 1][1] = 515;
				}
			}

			else if (ptMouse.y >= point[0][1] - 25 && ptMouse.y <= point[0][1] + 25 && ptMouse.x >= point[0][0] - 15 && ptMouse.x <= point[0][0] + 15) {
				point[0][1] = ptMouse.y;
				point[0][0] = 45;
				Doolgi = 0;
				Click = Max;
				if (point[0][1] > 515) {		// y축이 좌표 밖으로 나가지 않도록
					point[0][1] = 515;
				}
				if (point[0][1] < 15) {
					point[0][1] = 15;
				}
			}

			else if (ptMouse.y >= point[1][1] - 25 && ptMouse.y <= point[1][1] + 25 && ptMouse.x >= point[1][0] - 15 && ptMouse.x <= point[1][0] + 15) {
				point[1][0] = ptMouse.x;
				point[1][1] = ptMouse.y;
				Doolgi = 1;
				Click = Max;
			}
			else if (ptMouse.y >= point[2][1] - 25 && ptMouse.y <= point[2][1] + 25 && ptMouse.x >= point[2][0] - 15 && ptMouse.x <= point[2][0] + 15) {
				point[2][0] = ptMouse.x;
				point[2][1] = ptMouse.y;
				Doolgi = 2;
				Click = Max;
			}
			else if (ptMouse.y >= point[3][1] - 25 && ptMouse.y <= point[3][1] + 25 && ptMouse.x >= point[3][0] - 15 && ptMouse.x <= point[3][0] + 15) {
				point[3][0] = ptMouse.x;
				point[3][1] = ptMouse.y;
				Doolgi = 3;
				Click = Max;
			}
			else if (ptMouse.y >= point[4][1] - 25 && ptMouse.y <= point[4][1] + 25 && ptMouse.x >= point[4][0] - 15 && ptMouse.x <= point[4][0] + 15) {
				point[4][0] = ptMouse.x;
				point[4][1] = ptMouse.y;
				Doolgi = 4;
				Click = Max;
			}
			else if (ptMouse.y >= point[5][1] - 25 && ptMouse.y <= point[5][1] + 25 && ptMouse.x >= point[5][0] - 15 && ptMouse.x <= point[5][0] + 15) {
				point[5][0] = ptMouse.x;
				point[5][1] = ptMouse.y;
				Doolgi = 5;
				Click = Max;
			}
			else if (ptMouse.y >= point[6][1] - 25 && ptMouse.y <= point[6][1] + 25 && ptMouse.x >= point[6][0] - 15 && ptMouse.x <= point[6][0] + 15) {
				point[6][0] = ptMouse.x;
				point[6][1] = ptMouse.y;
				Doolgi = 6;
				Click = Max;
			}
			else if (ptMouse.y >= point[7][1] - 25 && ptMouse.y <= point[7][1] + 25 && ptMouse.x >= point[7][0] - 15 && ptMouse.x <= point[7][0] + 15) {
				point[7][0] = ptMouse.x;
				point[7][1] = ptMouse.y;
				Doolgi = 7;
				Click = Max;
			}
			else if (ptMouse.y >= point[8][1] - 25 && ptMouse.y <= point[8][1] + 25 && ptMouse.x >= point[8][0] - 15 && ptMouse.x <= point[8][0] + 15) {
				point[8][0] = ptMouse.x;
				point[8][1] = ptMouse.y;
				Doolgi = 8;
				Click = Max;
			}
			else if (ptMouse.y >= point[9][1] - 25 && ptMouse.y <= point[9][1] + 25 && ptMouse.x >= point[9][0] - 15 && ptMouse.x <= point[9][0] + 15) {
				point[9][0] = ptMouse.x;
				point[9][1] = ptMouse.y;
				Doolgi = 9;
				Click = Max;
			}
			else if (ptMouse.y >= point[10][1] - 25 && ptMouse.y <= point[10][1] + 25 && ptMouse.x >= point[10][0] - 15 && ptMouse.x <= point[10][0] + 15) {
				point[10][0] = ptMouse.x;
				point[10][1] = ptMouse.y;
				Doolgi = 10;
				Click = Max;
			}
			else if (ptMouse.y >= point[11][1] - 25 && ptMouse.y <= point[11][1] + 25 && ptMouse.x >= point[11][0] - 15 && ptMouse.x <= point[11][0] + 15) {
				point[11][0] = ptMouse.x;
				point[11][1] = ptMouse.y;
				Doolgi = 11;
				Click = Max;
			}
			else if (ptMouse.y >= point[12][1] - 25 && ptMouse.y <= point[12][1] + 25 && ptMouse.x >= point[12][0] - 15 && ptMouse.x <= point[12][0] + 15) {
				point[12][0] = ptMouse.x;
				point[12][1] = ptMouse.y;
				Doolgi = 12;
				Click = Max;
			}
			else if (ptMouse.y >= point[13][1] - 25 && ptMouse.y <= point[13][1] + 25 && ptMouse.x >= point[13][0] - 15 && ptMouse.x <= point[13][0] + 15) {
				point[13][0] = ptMouse.x;
				point[13][1] = ptMouse.y;
				Doolgi = 13;
				Click = Max;
			}
			else if (ptMouse.y >= point[14][1] - 25 && ptMouse.y <= point[14][1] + 25 && ptMouse.x >= point[14][0] - 15 && ptMouse.x <= point[14][0] + 15) {
				point[14][0] = ptMouse.x;
				point[14][1] = ptMouse.y;
				Doolgi = 14;
				Click = Max;
			}
			else if (ptMouse.y >= point[15][1] - 25 && ptMouse.y <= point[15][1] + 25 && ptMouse.x >= point[15][0] - 15 && ptMouse.x <= point[15][0] + 15) {
				point[15][0] = ptMouse.x;
				point[15][1] = ptMouse.y;
				Doolgi = 15;
				Click = Max;
			}
			else if (ptMouse.y >= point[16][1] - 25 && ptMouse.y <= point[16][1] + 25 && ptMouse.x >= point[16][0] - 15 && ptMouse.x <= point[16][0] + 15) {
				point[16][0] = ptMouse.x;
				point[16][1] = ptMouse.y;
				Doolgi = 16;
				Click = Max;
			}
			else if (ptMouse.y >= point[17][1] - 25 && ptMouse.y <= point[17][1] + 25 && ptMouse.x >= point[17][0] - 15 && ptMouse.x <= point[17][0] + 15) {
				point[17][0] = ptMouse.x;
				point[17][1] = ptMouse.y;
				Doolgi = 17;
				Click = Max;
			}
			else if (ptMouse.y >= point[18][1] - 25 && ptMouse.y <= point[18][1] + 25 && ptMouse.x >= point[18][0] - 15 && ptMouse.x <= point[18][0] + 15) {
				point[18][0] = ptMouse.x;
				point[18][1] = ptMouse.y;
				Doolgi = 18;
				Click = Max;
			}
			else if (ptMouse.y >= point[19][1] - 25 && ptMouse.y <= point[19][1] + 25 && ptMouse.x >= point[19][0] - 15 && ptMouse.x <= point[19][0] + 15) {
				point[19][0] = ptMouse.x;
				point[19][1] = ptMouse.y;
				Doolgi = 19;
				Click = Max;
			}
			else if (ptMouse.y >= point[20][1] - 25 && ptMouse.y <= point[20][1] + 25 && ptMouse.x >= point[20][0] - 15 && ptMouse.x <= point[20][0] + 15) {
				point[20][0] = ptMouse.x;
				point[20][1] = ptMouse.y;
				Doolgi = 20;
				Click = Max;
			}
			/*
			else if (ptMouse.y >= point[21][1] - 25 && ptMouse.y <= point[21][1] + 25 && ptMouse.x >= point[21][0] - 15 && ptMouse.x <= point[21][0] + 15) {
				point[21][0] = ptMouse.x;
				point[21][1] = ptMouse.y;
				Doolgi = 21;
				Click = Max;
			}
			*/
			else if (Click == 19 && ptMouse.x != 140 && ptMouse.y != 582 && ptMouse.x != 120 && ptMouse.y != 602) {		// 19개 점을 다 찍으면
				//MessageBox(hWnd, "최대점입니다", "최대점", MB_OK);
				MessageBox(hWnd, "MAX points", "MAX", MB_OK);
				//_stprintf_s(str, _T("%d / %d"), ptMouse.x, ptMouse.y);
				//MessageBox(hWnd, str, _T("ptMouse.x / ptMouse.y"), MB_YESNO);

				Doolgi = -1;
			}
			else {
				Doolgi = -1;
			}







			if (Click == 0)
			{

			}

			// 점 생성 불가
			// 첫번째 조절점
			if (CMoveX0 <= 1 && Click == 1) {

				//point[0][0] = CMoveStartX;
				//point[0][1] = CMoveStartY;
				//point[1][0] = CMoveEndX;
				//point[1][1] = CMoveEndY;


				AddPoint(lParam);

				CMoveX0 = point[a][0];
				CMoveY0 = point[a][1];

				Max = Max + 1;
			}


			// 두번째 조절점
			else if (CMoveX1 <= 1 && Click == 2) {
				AddPoint(lParam);

				CMoveX1 = point[a][0];
				CMoveY1 = point[a][1];
				Max = Max + 1;
			}

			// 세번째 조절점
			else if (CMoveX1 > 1 && CMoveX2 <= 1 && Click == 3) {

				if (ptMouse.x >= point[1][0] && ptMouse.x <= point[2][0] && (point[2][0] - point[1][0] <= 4)) {		// 찍으려는 위치의 양 옆의 점이 너무 가까울때 (x좌표 차이가 3이하)
					Doolgi = -1;
					Click = 2;
					//MessageBox(hWnd, "점 생성 불가 ", "X", MB_OK);
					MessageBox(hWnd, "Unable to create points", "X", MB_OK);
				}
				else {
					AddPoint(lParam);

					CMoveX2 = point[a][0];
					CMoveY2 = point[a][1];
					Max = Max + 1;
				}
			}


			// 네번째 조절점
			else if (CMoveX2 > 1 && CMoveX3 <= 1 && Click == 4) {
				if (ptMouse.x >= point[1][0] && ptMouse.x <= point[2][0] && (point[2][0] - point[1][0] <= 4)) {
					Doolgi = -1;
					Click = 3;
					//MessageBox(hWnd, "점 생성 불가 ", "X", MB_OK);
					MessageBox(hWnd, "Unable to create points", "X", MB_OK);
				}
				else if (ptMouse.x >= point[2][0] && ptMouse.x <= point[3][0] && (point[3][0] - point[2][0] <= 4)) {
					Doolgi = -1;
					Click = 3;
					//MessageBox(hWnd, "점 생성 불가 ", "X", MB_OK);
					MessageBox(hWnd, "Unable to create points", "X", MB_OK);
				}
				else {
					AddPoint(lParam);

					CMoveX3 = point[a][0];
					CMoveY3 = point[a][1];
					//Max = 4;
					Max = Max + 1;
				}
			}


			// 다섯번째 조절점
			else if (CMoveX3 > 1 && CMoveX4 <= 1 && Click == 5) {
				if (ptMouse.x >= point[1][0] && ptMouse.x <= point[2][0] && (point[2][0] - point[1][0] <= 4)) {
					Doolgi = -1;
					Click = 4;
					//MessageBox(hWnd, "점 생성 불가 ", "X", MB_OK);
					MessageBox(hWnd, "Unable to create points", "X", MB_OK);
				}
				else if (ptMouse.x >= point[2][0] && ptMouse.x <= point[3][0] && (point[3][0] - point[2][0] <= 4)) {
					Doolgi = -1;
					Click = 4;
					//MessageBox(hWnd, "점 생성 불가 ", "X", MB_OK);
					MessageBox(hWnd, "Unable to create points", "X", MB_OK);
				}
				else if (ptMouse.x >= point[3][0] && ptMouse.x <= point[4][0] && (point[4][0] - point[3][0] <= 4)) {
					Doolgi = -1;
					Click = 4;
					//MessageBox(hWnd, "점 생성 불가 ", "X", MB_OK);
					MessageBox(hWnd, "Unable to create points", "X", MB_OK);
				}
				else {
					AddPoint(lParam);

					CMoveX4 = point[a][0];
					CMoveY4 = point[a][1];
					//Max = 5;
					Max = Max + 1;
				}
			}

			// 여섯번째 조절점
			else if (CMoveX4 > 1 && CMoveX5 <= 1 && Click == 6) {
				if (ptMouse.x >= point[1][0] && ptMouse.x <= point[2][0] && (point[2][0] - point[1][0] <= 4)) {
					Doolgi = -1;
					Click = 5;
					//MessageBox(hWnd, "점 생성 불가 ", "X", MB_OK);
					MessageBox(hWnd, "Unable to create points", "X", MB_OK);
				}
				else if (ptMouse.x >= point[2][0] && ptMouse.x <= point[3][0] && (point[3][0] - point[2][0] <= 4)) {
					Doolgi = -1;
					Click = 5;
					//MessageBox(hWnd, "점 생성 불가 ", "X", MB_OK);
					MessageBox(hWnd, "Unable to create points", "X", MB_OK);
				}
				else if (ptMouse.x >= point[3][0] && ptMouse.x <= point[4][0] && (point[4][0] - point[3][0] <= 4)) {
					Doolgi = -1;
					Click = 5;
					//MessageBox(hWnd, "점 생성 불가 ", "X", MB_OK);
					MessageBox(hWnd, "Unable to create points", "X", MB_OK);
				}
				else if (ptMouse.x >= point[4][0] && ptMouse.x <= point[5][0] && (point[5][0] - point[4][0] <= 4)) {
					Doolgi = -1;
					Click = 5;
					//MessageBox(hWnd, "점 생성 불가 ", "X", MB_OK);
					MessageBox(hWnd, "Unable to create points", "X", MB_OK);
				}
				else {
					AddPoint(lParam);

					CMoveX5 = point[a][0];
					CMoveY5 = point[a][1];
					//Max = 5;
					Max = Max + 1;
				}
			}


			// 일곱번째 조절점
			else if (CMoveX5 > 1 && CMoveX6 <= 1 && Click == 7) {
				if (ptMouse.x >= point[1][0] && ptMouse.x <= point[2][0] && (point[2][0] - point[1][0] <= 4)) {
					Doolgi = -1;
					Click = 6;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[2][0] && ptMouse.x <= point[3][0] && (point[3][0] - point[2][0] <= 4)) {
					Doolgi = -1;
					Click = 6;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[3][0] && ptMouse.x <= point[4][0] && (point[4][0] - point[3][0] <= 4)) {
					Doolgi = -1;
					Click = 6;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[4][0] && ptMouse.x <= point[5][0] && (point[5][0] - point[4][0] <= 4)) {
					Doolgi = -1;
					Click = 6;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[5][0] && ptMouse.x <= point[6][0] && (point[6][0] - point[5][0] <= 4)) {
					Doolgi = -1;
					Click = 6;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else {
					AddPoint(lParam);

					CMoveX6 = point[a][0];
					CMoveY6 = point[a][1];
					//Max = 5;
					Max = Max + 1;
				}
			}

			// 여덟번째 조절점
			else if (CMoveX6 > 1 && CMoveX7 <= 1 && Click == 8) {
				if (ptMouse.x >= point[1][0] && ptMouse.x <= point[2][0] && (point[2][0] - point[1][0] <= 4)) {
					Doolgi = -1;
					Click = 7;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[2][0] && ptMouse.x <= point[3][0] && (point[3][0] - point[2][0] <= 4)) {
					Doolgi = -1;
					Click = 7;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[3][0] && ptMouse.x <= point[4][0] && (point[4][0] - point[3][0] <= 4)) {
					Doolgi = -1;
					Click = 7;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[4][0] && ptMouse.x <= point[5][0] && (point[5][0] - point[4][0] <= 4)) {
					Doolgi = -1;
					Click = 7;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[5][0] && ptMouse.x <= point[6][0] && (point[6][0] - point[5][0] <= 4)) {
					Doolgi = -1;
					Click = 7;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[6][0] && ptMouse.x <= point[7][0] && (point[7][0] - point[6][0] <= 4)) {
					Doolgi = -1;
					Click = 7;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else {
					AddPoint(lParam);

					CMoveX7 = point[a][0];
					CMoveY7 = point[a][1];
					//Max = 5;
					Max = Max + 1;
				}
			}



			// 아홉번째 조절점
			else if (CMoveX7 > 1 && CMoveX8 <= 1 && Click == 9) {
				if (ptMouse.x >= point[1][0] && ptMouse.x <= point[2][0] && (point[2][0] - point[1][0] <= 4)) {
					Doolgi = -1;
					Click = 8;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[2][0] && ptMouse.x <= point[3][0] && (point[3][0] - point[2][0] <= 4)) {
					Doolgi = -1;
					Click = 8;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[3][0] && ptMouse.x <= point[4][0] && (point[4][0] - point[3][0] <= 4)) {
					Doolgi = -1;
					Click = 8;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[4][0] && ptMouse.x <= point[5][0] && (point[5][0] - point[4][0] <= 4)) {
					Doolgi = -1;
					Click = 8;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[5][0] && ptMouse.x <= point[6][0] && (point[6][0] - point[5][0] <= 4)) {
					Doolgi = -1;
					Click = 8;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[6][0] && ptMouse.x <= point[7][0] && (point[7][0] - point[6][0] <= 4)) {
					Doolgi = -1;
					Click = 8;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else if (ptMouse.x >= point[7][0] && ptMouse.x <= point[8][0] && (point[8][0] - point[7][0] <= 4)) {
					Doolgi = -1;
					Click = 8;
					MessageBox(hWnd, "Unable to create points ", "X", MB_OK);
				}
				else {
					AddPoint(lParam);

					CMoveX8 = point[a][0];
					CMoveY8 = point[a][1];
					//Max = 5;
					Max = Max + 1;
				}
			}

			// 열번째 조절점
			else if (CMoveX8 > 1 && CMoveX9 <= 1 && Click == 10) {
				AddPoint(lParam);

				CMoveX9 = point[a][0];
				CMoveY9 = point[a][1];
				Max = Max + 1;
			}

			else if (CMoveX9 > 1 && CMoveX10 <= 1 && Click == 11) {
				AddPoint(lParam);

				CMoveX10 = point[a][0];
				CMoveY10 = point[a][1];
				Max = Max + 1;
			}

			else if (CMoveX10 > 1 && CMoveX11 <= 1 && Click == 12) {
				AddPoint(lParam);

				CMoveX11 = point[a][0];
				CMoveY11 = point[a][1];
				Max = Max + 1;
			}

			else if (CMoveX11 > 1 && CMoveX12 <= 1 && Click == 13) {
				AddPoint(lParam);

				CMoveX12 = point[a][0];
				CMoveY12 = point[a][1];
				Max = Max + 1;
			}

			else if (CMoveX12 > 1 && CMoveX13 <= 1 && Click == 14) {
				AddPoint(lParam);

				CMoveX13 = point[a][0];
				CMoveY13 = point[a][1];
				Max = Max + 1;
			}

			else if (CMoveX13 > 1 && CMoveX14 <= 1 && Click == 15) {
				AddPoint(lParam);

				CMoveX14 = point[a][0];
				CMoveY14 = point[a][1];
				Max = Max + 1;
			}

			else if (CMoveX14 > 1 && CMoveX15 <= 1 && Click == 16) {
				AddPoint(lParam);

				CMoveX15 = point[a][0];
				CMoveY15 = point[a][1];
				Max = Max + 1;
			}

			else if (CMoveX15 > 1 && CMoveX16 <= 1 && Click == 17) {
				AddPoint(lParam);

				CMoveX16 = point[a][0];
				CMoveY16 = point[a][1];
				Max = Max + 1;
			}

			else if (CMoveX16 > 1 && CMoveX17 <= 1 && Click == 18) {
				AddPoint(lParam);

				CMoveX17 = point[a][0];
				CMoveY17 = point[a][1];
				Max = Max + 1;
			}

			else if (CMoveX17 > 1 && CMoveX18 <= 1 && Click == 19) {
				AddPoint(lParam);

				CMoveX18 = point[a][0];
				CMoveY18 = point[a][1];
				Max = Max + 1;
			}

			else if (CMoveX18 > 1 && CMoveX19 <= 1 && Click == 20) {
				AddPoint(lParam);

				CMoveX19 = point[a][0];
				CMoveY19 = point[a][1];
				Max = Max + 1;
			}





			// 점 삭제
			// 첫번째에 있는 점 삭제 (point[1][0])
			if (point[1][1] < 15 || point[1][1] > 515 || point[1][0] < 45 || point[1][0] > 545 ||				// 점이 테두리 밖으로 나갔을 때
				(point[1][0] > point[2][0] && Doolgi == 1) || (point[1][0] < point[0][0] && Doolgi == 1)) {		// 옆 점보다 옆으로 갔을때

				for (int dp = 2; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}


			// 두번째에 있는 점 삭제
			else if (point[3][0] >= 45 && (point[2][1] < 15 || point[2][1] > 515 ||
				(point[2][0] > point[3][0] && Doolgi == 2) || (point[2][0] < point[1][0] && Doolgi == 2))) {
				for (int dp = 3; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);


			}

			// 세번째에 있는 점 삭제
			else if (point[4][0] >= 45 && (point[3][1] < 15 || point[3][1] > 515 ||
				(point[3][0] > point[4][0] && Doolgi == 3) || (point[3][0] < point[2][0] && Doolgi == 3))) {
				for (int dp = 4; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 네번째에 있는 점 삭제
			else if (point[5][0] >= 45 && (point[4][1] < 15 || point[4][1] > 515 ||
				(point[4][0] > point[5][0] && Doolgi == 4) || (point[4][0] < point[3][0] && Doolgi == 4))) {
				for (int dp = 5; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 다섯번째에 있는 점 삭제
			else if (point[6][0] >= 45 && (point[5][1] < 15 || point[5][1] > 515 ||
				(point[5][0] > point[6][0] && Doolgi == 5) || (point[5][0] < point[4][0] && Doolgi == 5))) {
				for (int dp = 6; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 여섯번째에 있는 점 삭제
			else if (point[7][0] >= 45 && (point[6][1] < 15 || point[6][1] > 515 ||
				(point[6][0] > point[7][0] && Doolgi == 6) || (point[6][0] < point[5][0] && Doolgi == 6))) {
				for (int dp = 7; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 일곱번째에 있는 점 삭제
			else if (point[8][0] >= 45 && (point[7][1] < 15 || point[7][1] > 515 ||
				(point[7][0] > point[8][0] && Doolgi == 7) || (point[7][0] < point[6][0] && Doolgi == 7))) {
				for (int dp = 8; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 여덟번째에 있는 점 삭제
			else if (point[9][0] >= 45 && (point[8][1] < 15 || point[8][1] > 515 ||
				(point[8][0] > point[9][0] && Doolgi == 8) || (point[8][0] < point[7][0] && Doolgi == 8))) {
				for (int dp = 9; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 아홉번째에 있는 점 삭제
			else if (point[10][0] >= 45 && (point[9][1] < 15 || point[9][1] > 515 ||
				(point[9][0] > point[10][0] && Doolgi == 9) || (point[9][0] < point[8][0] && Doolgi == 9))) {
				for (int dp = 10; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 열번째에 있는 점 삭제
			else if (point[11][0] >= 45 && (point[10][1] < 15 || point[10][1] > 515 ||
				(point[10][0] > point[11][0] && Doolgi == 10) || (point[10][0] < point[9][0] && Doolgi == 10))) {
				for (int dp = 11; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 열한번째에 있는 점 삭제
			else if (point[12][0] >= 45 && (point[11][1] < 15 || point[11][1] > 515 ||
				(point[11][0] > point[12][0] && Doolgi == 11) || (point[11][0] < point[10][0] && Doolgi == 11))) {
				for (int dp = 12; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 열두번째에 있는 점 삭제
			else if (point[13][0] >= 45 && (point[12][1] < 15 || point[12][1] > 515 ||
				(point[12][0] > point[13][0] && Doolgi == 12) || (point[12][0] < point[11][0] && Doolgi == 12))) {
				for (int dp = 13; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 열세번째에 있는 점 삭제
			else if (point[14][0] >= 45 && (point[13][1] < 15 || point[13][1] > 515 ||
				(point[13][0] > point[14][0] && Doolgi == 13) || (point[13][0] < point[12][0] && Doolgi == 13))) {
				for (int dp = 14; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 열네번째에 있는 점 삭제
			else if (point[15][0] >= 45 && (point[14][1] < 15 || point[14][1] > 515 ||
				(point[14][0] > point[15][0] && Doolgi == 14) || (point[14][0] < point[13][0] && Doolgi == 14))) {
				for (int dp = 15; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 열다섯번째에 있는 점 삭제
			else if (point[16][0] >= 45 && (point[15][1] < 15 || point[15][1] > 515 ||
				(point[15][0] > point[16][0] && Doolgi == 15) || (point[15][0] < point[14][0] && Doolgi == 15))) {
				for (int dp = 16; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 열여섯번째에 있는 점 삭제
			else if (point[17][0] >= 45 && (point[16][1] < 15 || point[16][1] > 515 ||
				(point[16][0] > point[17][0] && Doolgi == 16) || (point[16][0] < point[15][0] && Doolgi == 16))) {
				for (int dp = 17; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 열일곱번째에 있는 점 삭제
			else if (point[18][0] >= 45 && (point[17][1] < 15 || point[17][1] > 515 ||
				(point[17][0] > point[18][0] && Doolgi == 17) || (point[17][0] < point[16][0] && Doolgi == 17))) {
				for (int dp = 18; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 열여덟번째에 있는 점 삭제
			else if (point[19][0] >= 45 && (point[18][1] < 15 || point[18][1] > 515 ||
				(point[18][0] > point[19][0] && Doolgi == 18) || (point[18][0] < point[17][0] && Doolgi == 18))) {
				for (int dp = 19; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 열아홉번째에 있는 점 삭제
			else if (point[20][0] >= 45 && (point[19][1] < 15 || point[19][1] > 515 ||
				(point[19][0] > point[20][0] && Doolgi == 19) || (point[19][0] < point[18][0] && Doolgi == 19))) {
				for (int dp = 20; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}

			// 스무번째에 있는 점 삭제
			else if (point[21][0] >= 45 && (point[20][1] < 15 || point[20][1] > 515 ||
				(point[20][0] > point[21][0] && Doolgi == 20) || (point[20][0] < point[19][0] && Doolgi == 20))) {
				for (int dp = 21; dp <= Click + 1; dp++) {
					point[dp - 1][0] = point[dp][0];
					point[dp - 1][1] = point[dp][1];
				}
				DeletePoint(lParam);
			}



		}
		InvalidateRect(hWnd, NULL, FALSE);		// WM_PAINT를 강제로 호출 (마우스 드래그 표현 (점 이동))
		}

		ptMouse.x = LOWORD(lParam);
		ptMouse.y = HIWORD(lParam);
		if (Doolgi == -1) {

			if (ptMouse.x < 45) {		// 좌표 밖에 있을 때 에디트박스에 '0'으로 좌표 표시되도록
				ptMouse.x = 45;
				ptMouse.y = 515;
			}
			else if (ptMouse.x > 545) {
				ptMouse.x = 45;
				ptMouse.y = 515;
			}
			else if (ptMouse.y < 15) {
				ptMouse.x = 45;
				ptMouse.y = 515;
			}
			else if (ptMouse.y > 515) {
				ptMouse.x = 45;
				ptMouse.y = 515;
			}

			InvalidateRect(hWnd, NULL, FALSE);		// 아무 점도 선택하지 않았을 때 마우스의 좌표 출력하기 위해서(마우스를 계속 움직일때)
		}

		break;
	}
	break;


	case WM_PAINT:
	{
		//hdc = BeginPaint(hWnd, &ps);
		HFONT hFont, OldFont;

		// 더블버퍼링 시작처리입니다. 
		static HDC hdc, MemDC, tmpDC;
		static HBITMAP BackBit, oldBackBit;
		static RECT bufferRT;
		hdc = BeginPaint(hWnd, &ps);

		GetClientRect(hWnd, &bufferRT);
		MemDC = CreateCompatibleDC(hdc);
		BackBit = CreateCompatibleBitmap(hdc, bufferRT.right, bufferRT.bottom);
		oldBackBit = (HBITMAP)SelectObject(MemDC, BackBit);
		PatBlt(MemDC, 0, 0, bufferRT.right, bufferRT.bottom, WHITENESS);
		tmpDC = hdc;
		hdc = MemDC;
		MemDC = tmpDC;
		// 더블 버퍼링 앞부분 끝

		// TODO: 여기에 hdc를 사용하는 그리기 코드를 추가합니다...


		// 배경
		HBRUSH GrayBrush2 = CreateSolidBrush(RGB(250, 250, 250));
		HGDIOBJ OldGrayBrush2 = SelectObject(hdc, GrayBrush2);
		Rectangle(hdc, 1, 0, 695, 610);
		SelectObject(hdc, OldGrayBrush2);
		DeleteObject(GrayBrush2);

		//TCHAR str0[100];
		TCHAR str[100];
		TCHAR str1[100];
		TCHAR str2[100];
		TCHAR str3[100];

		/*
		if (ptMouse.x >= 652 && ptMouse.x <= 672) {
			ptMouse.x = 652;
		}
		else if (ptMouse.x <= 140 && ptMouse.x >= 120) {
			ptMouse.x = 140;
		}
		if (ptMouse.y >= 582 && ptMouse.y <= 602) {
			ptMouse.y = 582;
		}
		else if (ptMouse.y <= 70 && ptMouse.y >= 50) {
			ptMouse.y = 70;
		}
		*/

		char ptX[128] = { 0 };
		char ptY[128] = { 0 };

		wsprintf(str2, TEXT("ptMouse.x : %d"), (int)ptMouse.x / 10);
		TextOut(hdc, 570, 380, str2, lstrlen(str2));
		wsprintf(str3, TEXT("ptMouse.y : %d"), (int)ptMouse.y / 10);
		TextOut(hdc, 570, 410, str3, lstrlen(str3));

		/*printf("Click : %d, Max : %d\n", Click, Max);
		for (int i = 0; i < 22; i++)
		{
			printf("%d %d\n", point[i][0], point[i][1]);
		}*/


		/*
		wsprintf(str2, TEXT("EnergyDown : %d"), (int)EnergyDown);
		TextOut(hdc, 700, 445, str2, lstrlen(str2));
		wsprintf(str3, TEXT("EnergyUp : %d"), (int)EnergyUp);
		TextOut(hdc, 700, 470, str3, lstrlen(str3));
		wsprintf(str, TEXT("Click : %d"), (int)Click);
		TextOut(hdc, 700, 495, str, lstrlen(str));
		wsprintf(str1, TEXT("Doolgi : %d"), (int)Doolgi);
		TextOut(hdc, 700, 520, str1, lstrlen(str1));
		*/

		wsprintf(str, TEXT("point[0][0] : %d"), ((point[0][0] * 2) - 90));
		TextOut(hdc, 700, 100, str, lstrlen(str));
		wsprintf(str, TEXT("point[1][0] : %d"), ((point[1][0] * 2) - 90));
		TextOut(hdc, 700, 140, str, lstrlen(str));
		wsprintf(str1, TEXT("point[2][0] : %d"), ((point[2][0] * 2) - 90));
		TextOut(hdc, 700, 180, str1, lstrlen(str1));
		wsprintf(str1, TEXT("point[3][0] : %d"), ((point[3][0] * 2) - 90));
		TextOut(hdc, 700, 220, str1, lstrlen(str1));


		wsprintf(str, TEXT("point[0][1] : %d"), ((point[0][1] * (-2)) + 1030));
		TextOut(hdc, 900, 100, str, lstrlen(str));
		wsprintf(str, TEXT("point[1][1] : %d"), ((point[1][1] * (-2)) + 1030));
		TextOut(hdc, 900, 140, str, lstrlen(str));
		wsprintf(str1, TEXT("point[2][1] : %d"), ((point[2][1] * (-2)) + 1030));
		TextOut(hdc, 900, 180, str1, lstrlen(str1));
		wsprintf(str1, TEXT("point[3][1] : %d"), ((point[3][1] * (-2)) + 1030));
		TextOut(hdc, 900, 220, str1, lstrlen(str1));


		// _itoa((point[14][0] * 2) - 90, ptX, 10);
		// _itoa((point[14][1] * (-2)) + 1030, ptY, 10);

		hFont = CreateFont(19, 0, 0, 0, 600, 0, 0, 0, HANGEUL_CHARSET, 0, 0, 0,
			VARIABLE_PITCH | FF_ROMAN, TEXT("굴림"));
		OldFont = (HFONT)SelectObject(hdc, hFont);
		wsprintf(str, TEXT("%d / 20"), Click + 1);
		TextOut(hdc, 600, 35, str, lstrlen(str));
		SelectObject(hdc, OldFont);
		DeleteObject(hFont);

		/*
		hFont = CreateFont(19, 0, 0, 0, 600, 0, 0, 0, HANGEUL_CHARSET, 0, 0, 0,
			VARIABLE_PITCH | FF_ROMAN, TEXT("굴림"));
		OldFont = (HFONT)SelectObject(hdc, hFont);
		wsprintf(str, TEXT("%d 구간"), (int)Click + 1);
		TextOut(hdc, 740, 50, str, lstrlen(str));
		SelectObject(hdc, OldFont);
		DeleteObject(hFont);
		*/


		//TextOut(hdc, 95, 585, "0%", 2);		// X좌표 값
		//TextOut(hdc, 220, 585, "25%", 3);
		//TextOut(hdc, 348, 585, "50%", 3);
		//TextOut(hdc, 475, 585, "75%", 3);
		//TextOut(hdc, 595, 585, "100%", 4);
		//TextOut(hdc, 595, 605, "1025", 4);
		//TextOut(hdc, 95, 605, "0", 1);


		hFont = CreateFont(17, 0, 0, 0, 600, 0, 0, 0, HANGEUL_CHARSET, 0, 0, 0,
			VARIABLE_PITCH | FF_ROMAN, "굴림");
		OldFont = (HFONT)SelectObject(hdc, hFont);
		TextOut(hdc, 580, 450, "Output:", 7);
		TextOut(hdc, 390, 558, "Input:", 7);
		//TextOut(hdc, 513, 558, "‰", 2);
		//TextOut(hdc, 642, 482, "‰", 2);
		TextOut(hdc, 513, 558, "%", 2);
		TextOut(hdc, 642, 482, "%", 2);
		//TextOut(hdc, 38, 30, "Channel:", 8);
		SelectObject(hdc, OldFont);
		DeleteObject(hFont);


		// 회색 테두리
		HPEN GrayPen1 = CreatePen(PS_SOLID, 1, RGB(150, 150, 150));
		HGDIOBJ OldGrayPen1 = SelectObject(hdc, GrayPen1);
		MoveToEx(hdc, 5, 5, NULL);
		LineTo(hdc, 565, 5);
		MoveToEx(hdc, 565, 5, NULL);
		LineTo(hdc, 565, 590);
		MoveToEx(hdc, 565, 590, NULL);
		LineTo(hdc, 5, 590);
		MoveToEx(hdc, 5, 590, NULL);
		LineTo(hdc, 5, 5);
		SelectObject(hdc, OldGrayPen1);
		DeleteObject(GrayPen1);




		// 맵 테두리 그리기 (좌표값 500으로 * 2해서 사용할 것)
		HBRUSH GrayBrush = CreateSolidBrush(RGB(255, 255, 255));
		HGDIOBJ OldGrayBrush = SelectObject(hdc, GrayBrush);
		Rectangle(hdc, 45, 15, 545, 515);
		SelectObject(hdc, OldGrayBrush);
		DeleteObject(GrayBrush);



		HPEN DottedLine = CreatePen(PS_SOLID, 1, RGB(153, 153, 153));		// 맵에 좌표 선 그리기
		HGDIOBJ OldDottedLine = SelectObject(hdc, DottedLine);

		MoveToEx(hdc, 295, 15, NULL);
		LineTo(hdc, 295, 515);
		MoveToEx(hdc, 170, 15, NULL);
		LineTo(hdc, 170, 515);
		MoveToEx(hdc, 420, 15, NULL);
		LineTo(hdc, 420, 515);

		MoveToEx(hdc, 45, 140, NULL);
		LineTo(hdc, 545, 140);
		MoveToEx(hdc, 45, 265, NULL);
		LineTo(hdc, 545, 265);
		MoveToEx(hdc, 45, 390, NULL);
		LineTo(hdc, 545, 390);

		SelectObject(hdc, OldDottedLine);
		DeleteObject(DottedLine);





		HPEN GrayPen = CreatePen(PS_SOLID, 1, RGB(150, 150, 150));
		HGDIOBJ OldGrayPen = SelectObject(hdc, GrayPen);
		// 그라데이션 바
		Rectangle(hdc, 15, 15, 45, 515);
		Rectangle(hdc, 45, 515, 545, 545);
		SelectObject(hdc, OldGrayPen);
		DeleteObject(GrayPen);

		// 세로 그라데이션 바 색칠
		for (i = 255; i >= 0; i--) {
			//HPEN NoPen = CreatePen(PS_SOLID, 1, RGB(255-i, 255-i, 255-i));
			HPEN NoPen = CreatePen(PS_SOLID, 1, RGB(i, i, i));
			HGDIOBJ OldNoPen = SelectObject(hdc, NoPen);

			//HBRUSH BlackBrush = CreateSolidBrush(RGB(255 - i, 255 - i, 255 - i));
			HBRUSH BlackBrush = CreateSolidBrush(RGB(i, i, i));
			HGDIOBJ OldBlackBrush = SelectObject(hdc, BlackBrush);

			Rectangle(hdc, 16, 1.95 * i + 16, 45, 1.95 * i + 18);


			SelectObject(hdc, OldBlackBrush);
			DeleteObject(BlackBrush);
			SelectObject(hdc, OldNoPen);
			DeleteObject(NoPen);
		}
		// 가로 그라데이션 바 색칠
		for (i = 0; i < 256; i++) {
			//HPEN NoPen = CreatePen(PS_SOLID, 1, RGB(255 - i, 255 - i, 255 - i));
			HPEN NoPen = CreatePen(PS_SOLID, 1, RGB(i, i, i));
			HGDIOBJ OldNoPen = SelectObject(hdc, NoPen);

			//HBRUSH BlackBrush = CreateSolidBrush(RGB(255 - i, 255 - i, 255 - i));
			HBRUSH BlackBrush = CreateSolidBrush(RGB(i, i, i));
			HGDIOBJ OldBlackBrush = SelectObject(hdc, BlackBrush);

			Rectangle(hdc, -1.95 * i + 33 + 509, 515, -1.95 * i + 35 + 509, 544);


			SelectObject(hdc, OldBlackBrush);
			DeleteObject(BlackBrush);
			SelectObject(hdc, OldNoPen);
			DeleteObject(NoPen);

		}









		// 조절점
		Ellipse(hdc, point[0][0] - 3, point[0][1] - 3, point[0][0] + 3, point[0][1] + 3);
		Ellipse(hdc, point[1][0] - 3, point[1][1] - 3, point[1][0] + 3, point[1][1] + 3);
		Ellipse(hdc, point[2][0] - 3, point[2][1] - 3, point[2][0] + 3, point[2][1] + 3);
		Ellipse(hdc, point[3][0] - 3, point[3][1] - 3, point[3][0] + 3, point[3][1] + 3);
		Ellipse(hdc, point[4][0] - 3, point[4][1] - 3, point[4][0] + 3, point[4][1] + 3);
		Ellipse(hdc, point[5][0] - 3, point[5][1] - 3, point[5][0] + 3, point[5][1] + 3);
		Ellipse(hdc, point[6][0] - 3, point[6][1] - 3, point[6][0] + 3, point[6][1] + 3);
		Ellipse(hdc, point[7][0] - 3, point[7][1] - 3, point[7][0] + 3, point[7][1] + 3);
		Ellipse(hdc, point[8][0] - 3, point[8][1] - 3, point[8][0] + 3, point[8][1] + 3);
		Ellipse(hdc, point[9][0] - 3, point[9][1] - 3, point[9][0] + 3, point[9][1] + 3);
		Ellipse(hdc, point[10][0] - 3, point[10][1] - 3, point[10][0] + 3, point[10][1] + 3);
		Ellipse(hdc, point[11][0] - 3, point[11][1] - 3, point[11][0] + 3, point[11][1] + 3);
		Ellipse(hdc, point[12][0] - 3, point[12][1] - 3, point[12][0] + 3, point[12][1] + 3);
		Ellipse(hdc, point[13][0] - 3, point[13][1] - 3, point[13][0] + 3, point[13][1] + 3);
		Ellipse(hdc, point[14][0] - 3, point[14][1] - 3, point[14][0] + 3, point[14][1] + 3);
		Ellipse(hdc, point[15][0] - 3, point[15][1] - 3, point[15][0] + 3, point[15][1] + 3);
		Ellipse(hdc, point[16][0] - 3, point[16][1] - 3, point[16][0] + 3, point[16][1] + 3);
		Ellipse(hdc, point[17][0] - 3, point[17][1] - 3, point[17][0] + 3, point[17][1] + 3);
		Ellipse(hdc, point[18][0] - 3, point[18][1] - 3, point[18][0] + 3, point[18][1] + 3);
		Ellipse(hdc, point[19][0] - 3, point[19][1] - 3, point[19][0] + 3, point[19][1] + 3);
		Ellipse(hdc, point[20][0] - 3, point[20][1] - 3, point[20][0] + 3, point[20][1] + 3);
		//Ellipse(hdc, point[21][0] - 3, point[21][1] - 3, point[21][0] + 3, point[21][1] + 3);



		// 점을 선택했을 때 
		// 선택한 점의 크기가 커져서 뭐가 선택되었는지 알수 있도록
		// 선택한 점의 좌표 표시
		if (Doolgi == 0) {
			Ellipse(hdc, point[0][0] - 5, point[0][1] - 5, point[0][0] + 5, point[0][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[0][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[0][1] * (-2)) + 1030) / 10);
			//_itoa((point[0][0] * 2) - 90, ptX, 10);
			//_itoa((point[0][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 1) {
			Ellipse(hdc, point[1][0] - 5, point[1][1] - 5, point[1][0] + 5, point[1][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[1][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[1][1] * (-2)) + 1030) / 10);
			//_itoa((point[1][0] * 2) - 90, ptX, 10);
			//_itoa((point[1][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 2) {
			Ellipse(hdc, point[2][0] - 5, point[2][1] - 5, point[2][0] + 5, point[2][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[2][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[2][1] * (-2)) + 1030) / 10);
			//_itoa((point[2][0] * 2) - 90, ptX, 10);
			//_itoa((point[2][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 3) {
			Ellipse(hdc, point[3][0] - 5, point[3][1] - 5, point[3][0] + 5, point[3][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[3][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[3][1] * (-2)) + 1030) / 10);
			//_itoa((point[3][0] * 2) - 90, ptX, 10);
			//_itoa((point[3][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 4) {
			Ellipse(hdc, point[4][0] - 5, point[4][1] - 5, point[4][0] + 5, point[4][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[4][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[4][1] * (-2)) + 1030) / 10);
			//_itoa((point[4][0] * 2) - 90, ptX, 10);
			//_itoa((point[4][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 5) {
			Ellipse(hdc, point[5][0] - 5, point[5][1] - 5, point[5][0] + 5, point[5][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[5][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[5][1] * (-2)) + 1030) / 10);
			//_itoa((point[5][0] * 2) - 90, ptX, 10);
			//_itoa((point[5][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 6) {
			Ellipse(hdc, point[6][0] - 5, point[6][1] - 5, point[6][0] + 5, point[6][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[6][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[6][1] * (-2)) + 1030) / 10);
			//_itoa((point[6][0] * 2) - 90, ptX, 10);
			//_itoa((point[6][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 7) {
			Ellipse(hdc, point[7][0] - 5, point[7][1] - 5, point[7][0] + 5, point[7][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[7][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[7][1] * (-2)) + 1030) / 10);
			//_itoa((point[7][0] * 2) - 90, ptX, 10);
			//_itoa((point[7][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 8) {
			Ellipse(hdc, point[8][0] - 5, point[8][1] - 5, point[8][0] + 5, point[8][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[8][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[8][1] * (-2)) + 1030) / 10);
			//_itoa((point[8][0] * 2) - 90, ptX, 10);
			//_itoa((point[8][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 9) {
			Ellipse(hdc, point[9][0] - 5, point[9][1] - 5, point[9][0] + 5, point[9][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[9][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[9][1] * (-2)) + 1030) / 10);
			//_itoa((point[9][0] * 2) - 90, ptX, 10);
			//_itoa((point[9][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 10) {
			Ellipse(hdc, point[10][0] - 5, point[10][1] - 5, point[10][0] + 5, point[10][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[10][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[10][1] * (-2)) + 1030) / 10);
			//_itoa((point[10][0] * 2) - 90, ptX, 10);
			//_itoa((point[10][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 11) {
			Ellipse(hdc, point[11][0] - 5, point[11][1] - 5, point[11][0] + 5, point[11][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[11][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[11][1] * (-2)) + 1030) / 10);
			//_itoa((point[11][0] * 2) - 90, ptX, 10);
			//_itoa((point[11][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 12) {
			Ellipse(hdc, point[12][0] - 5, point[12][1] - 5, point[12][0] + 5, point[12][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[12][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[12][1] * (-2)) + 1030) / 10);
			//_itoa((point[12][0] * 2) - 90, ptX, 10);
			//_itoa((point[12][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 13) {
			Ellipse(hdc, point[13][0] - 5, point[13][1] - 5, point[13][0] + 5, point[13][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[13][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[13][1] * (-2)) + 1030) / 10);
			//_itoa((point[13][0] * 2) - 90, ptX, 10);
			//_itoa((point[13][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 14) {
			Ellipse(hdc, point[14][0] - 5, point[14][1] - 5, point[14][0] + 5, point[14][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[14][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[14][1] * (-2)) + 1030) / 10);
			//_itoa((point[14][0] * 2) - 90, ptX, 10);
			//_itoa((point[14][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 15) {
			Ellipse(hdc, point[15][0] - 5, point[15][1] - 5, point[15][0] + 5, point[15][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[15][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[15][1] * (-2)) + 1030) / 10);
			//_itoa((point[15][0] * 2) - 90, ptX, 10);
			//_itoa((point[15][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 16) {
			Ellipse(hdc, point[16][0] - 5, point[16][1] - 5, point[16][0] + 5, point[16][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[16][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[16][1] * (-2)) + 1030) / 10);
			//_itoa((point[16][0] * 2) - 90, ptX, 10);
			//_itoa((point[16][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 17) {
			Ellipse(hdc, point[17][0] - 5, point[17][1] - 5, point[17][0] + 5, point[17][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[17][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[17][1] * (-2)) + 1030) / 10);
			//_itoa((point[17][0] * 2) - 90, ptX, 10);
			//_itoa((point[17][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 18) {
			Ellipse(hdc, point[18][0] - 5, point[18][1] - 5, point[18][0] + 5, point[18][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[18][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[18][1] * (-2)) + 1030) / 10);
			//_itoa((point[18][0] * 2) - 90, ptX, 10);
			//_itoa((point[18][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 19) {
			Ellipse(hdc, point[19][0] - 5, point[19][1] - 5, point[19][0] + 5, point[19][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[19][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[19][1] * (-2)) + 1030) / 10);
			//_itoa((point[19][0] * 2) - 90, ptX, 10);
			//_itoa((point[19][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 20) {
			Ellipse(hdc, point[20][0] - 5, point[20][1] - 5, point[20][0] + 5, point[20][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[20][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[20][1] * (-2)) + 1030) / 10);
			//_itoa((point[20][0] * 2) - 90, ptX, 10);
			//_itoa((point[20][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}
		else if (Doolgi == 21) {
			Ellipse(hdc, point[21][0] - 5, point[21][1] - 5, point[21][0] + 5, point[21][1] + 5);
			sprintf(ptX, "%0.1lf", (double)((point[21][0] * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((point[21][1] * (-2)) + 1030) / 10);
			//_itoa((point[21][0] * 2) - 90, ptX, 10);
			//_itoa((point[21][1] * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);

		}
		else if (Doolgi == -1) {
			sprintf(ptX, "%0.1lf", (double)((ptMouse.x * 2) - 90) / 10);
			sprintf(ptY, "%0.1lf", (double)((ptMouse.y * (-2)) + 1030) / 10);
			//_itoa((ptMouse.x * 2) - 90, ptX, 10);
			//_itoa((ptMouse.y * (-2)) + 1030, ptY, 10);
			SetWindowText(hEditX, ptX);
			SetWindowText(hEditY, ptY);
		}



		// 더블버퍼링 끝처리 입니다.
		tmpDC = hdc;
		hdc = MemDC;
		MemDC = tmpDC;
		GetClientRect(hWnd, &bufferRT);
		BitBlt(hdc, 0, 0, bufferRT.right, bufferRT.bottom, MemDC, 0, 0, SRCCOPY);
		SelectObject(MemDC, oldBackBit);
		DeleteObject(BackBit);
		DeleteDC(MemDC);

		EndPaint(hWnd, &ps);
		// 여기까지 더블버퍼링 끝처리 끝


		/*
		if (SubLine == 1) {		// 보조선에 체크
			if (CPPosition == 1) {		// 제어점이 4분의 1 지점일때
				LLine(hWnd);
				CPoint(hWnd);
			}
			else if (CPPosition == 2) {		// 제어점이 3분의 1 지점일때
				L2Line(hWnd);
				C2Point(hWnd);
			}
			else if (CPPosition == 3) {		// 제어점이 2분의 1 지점일때
				L3Line(hWnd);
				C3Point(hWnd);
			}

			if (CPPositionINI == 25) {		// 제어점이 4분의 1 지점일때
				LLine(hWnd);
				CPoint(hWnd);
			}
			else if (CPPositionINI == 33) {		// 제어점이 3분의 1 지점일때
				L2Line(hWnd);
				C2Point(hWnd);
			}
			else if (CPPositionINI == 50) {		// 제어점이 2분의 1 지점일때
				L3Line(hWnd);
				C3Point(hWnd);
			}

		}
		*/

		if (ret == 0) {
			if (CPPositionINI == 25) {			// 제어점이 4분의 1 지점일때
				LLine(hWnd);
				CPoint(hWnd);
			}
			else if (CPPositionINI == 33) {		// 제어점이 3분의 1 지점일때
				L2Line(hWnd);
				C2Point(hWnd);
			}
			else if (CPPositionINI == 50) {		// 제어점이 2분의 1 지점일때
				L3Line(hWnd);
				C3Point(hWnd);
			}
		}

		if (Line == 1) {		// 직선에 체크
			SLine(hWnd);
		}

		else if (Line == 0) {	// 곡선에 체크
			if (CPPositionINI == 25) {			// 제어점이 4분의 1 지점일때
				CLine(hWnd);
			}
			else if (CPPositionINI == 33) {		// 제어점이 3분의 1 지점일때
				C2Line(hWnd);
			}
			else if (CPPositionINI == 50) {		// 제어점이 2분의 1 지점일때
				C3Line(hWnd);
			}

		}

		break;
	}
	break;

	case WM_DESTROY:
		PostQuitMessage(0);
		break;

	case WM_INITDIALOG:
		break;
	default:
		return DefWindowProc(hWnd, message, wParam, lParam);
	}
	return 0;
}


// 직선
void SLine(HWND hWnd)		// 직선: 점 개수별로 직선 긋기
{

	hdc = GetDC(hWnd);
	if (Click == 0) {						// 점이 0개일때
		MoveToEx(hdc, point[0][0], point[0][1], NULL);
		LineTo(hdc, point[1][0], point[1][1]);
	}

	if (Click >= 1) {					// 점이 1개일때
		MoveToEx(hdc, point[0][0], point[0][1], NULL);
		LineTo(hdc, point[1][0], point[1][1]);
		MoveToEx(hdc, point[1][0], point[1][1], NULL);
		LineTo(hdc, point[2][0], point[2][1]);
	}

	if (Click >= 2) {					// 점이 2개일때
		MoveToEx(hdc, point[2][0], point[2][1], NULL);
		LineTo(hdc, point[3][0], point[3][1]);
	}

	if (Click >= 3) {					// 점이 3개일때
		MoveToEx(hdc, point[3][0], point[3][1], NULL);
		LineTo(hdc, point[4][0], point[4][1]);
	}

	if (Click >= 4) {					// 점이 4개일때
		MoveToEx(hdc, point[4][0], point[4][1], NULL);
		LineTo(hdc, point[5][0], point[5][1]);
	}

	if (Click >= 5) {					// 점이 5개일때
		MoveToEx(hdc, point[5][0], point[5][1], NULL);
		LineTo(hdc, point[6][0], point[6][1]);
	}

	if (Click >= 6) {					// 점이 6개일때
		MoveToEx(hdc, point[6][0], point[6][1], NULL);
		LineTo(hdc, point[7][0], point[7][1]);
	}

	if (Click >= 7) {					// 점이 7개일때
		MoveToEx(hdc, point[7][0], point[7][1], NULL);
		LineTo(hdc, point[8][0], point[8][1]);
	}

	if (Click >= 8) {					// 점이 8개일때
		MoveToEx(hdc, point[8][0], point[8][1], NULL);
		LineTo(hdc, point[9][0], point[9][1]);
	}

	if (Click >= 9) {					// 점이 9개일때
		MoveToEx(hdc, point[9][0], point[9][1], NULL);
		LineTo(hdc, point[10][0], point[10][1]);
	}

	if (Click >= 10) {					// 점이 10개일때
		MoveToEx(hdc, point[10][0], point[10][1], NULL);
		LineTo(hdc, point[11][0], point[11][1]);
	}

	if (Click >= 11) {					// 점이 11개일때
		MoveToEx(hdc, point[11][0], point[11][1], NULL);
		LineTo(hdc, point[12][0], point[12][1]);
	}

	if (Click >= 12) {					// 점이 12개일때
		MoveToEx(hdc, point[12][0], point[12][1], NULL);
		LineTo(hdc, point[13][0], point[13][1]);
	}

	if (Click >= 13) {					// 점이 13개일때
		MoveToEx(hdc, point[13][0], point[13][1], NULL);
		LineTo(hdc, point[14][0], point[14][1]);
	}

	if (Click >= 14) {					// 점이 14개일때
		MoveToEx(hdc, point[14][0], point[14][1], NULL);
		LineTo(hdc, point[15][0], point[15][1]);
	}

	if (Click >= 15) {					// 점이 15개일때
		MoveToEx(hdc, point[15][0], point[15][1], NULL);
		LineTo(hdc, point[16][0], point[16][1]);
	}

	if (Click >= 16) {					// 점이 16개일때
		MoveToEx(hdc, point[16][0], point[16][1], NULL);
		LineTo(hdc, point[17][0], point[17][1]);
	}

	if (Click >= 17) {					// 점이 17개일때
		MoveToEx(hdc, point[17][0], point[17][1], NULL);
		LineTo(hdc, point[18][0], point[18][1]);
	}

	if (Click >= 18) {					// 점이 18개일때
		MoveToEx(hdc, point[18][0], point[18][1], NULL);
		LineTo(hdc, point[19][0], point[19][1]);
	}

	if (Click >= 19) {					// 점이 19개일때
		MoveToEx(hdc, point[19][0], point[19][1], NULL);
		LineTo(hdc, point[20][0], point[20][1]);
	}

	if (Click >= 20) {					// 점이 20개일때
		MoveToEx(hdc, point[20][0], point[20][1], NULL);
		LineTo(hdc, point[21][0], point[21][1]);
	}
	ReleaseDC(hWnd, hdc);
}




// 4분의 1일때 (곡선, 보조선, 제어점)
// 곡선
void CLine(HWND hWnd) {				// 곡선
	hdc = GetDC(hWnd);

	if (Click == 0 || Click == -1) {

		MoveToEx(hdc, point[0][0], point[0][1], NULL);
		LineTo(hdc, point[1][0], point[1][1]);
	}

	// 오른쪽 끝 선에 대한 커브
	if (Click == 1) {
		int CPX1_1, CPY1_1;

		CPX1_1 = (point[1][0] + ((point[2][0] - point[1][0]) / 4));
		CPY1_1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4))));

		DrawSideCurve(hdc, point[1][0], point[1][1], CPX1_1, CPY1_1, point[2][0], point[2][1]);
	}

	else if (Click == 2) {
		int CPX2_1, CPY2_1;

		CPX2_1 = (point[2][0] + ((point[3][0] - point[2][0]) / 4));
		CPY2_1 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4))));

		DrawSideCurve(hdc, point[2][0], point[2][1], CPX2_1, CPY2_1, point[3][0], point[3][1]);
	}

	else if (Click == 3) {
		int CPX3_1, CPY3_1;

		CPX3_1 = (point[3][0] + ((point[4][0] - point[3][0]) / 4));
		CPY3_1 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4))));

		DrawSideCurve(hdc, point[3][0], point[3][1], CPX3_1, CPY3_1, point[4][0], point[4][1]);
	}

	else if (Click == 4) {
		int CPX4_1, CPY4_1;

		CPX4_1 = (point[4][0] + ((point[5][0] - point[4][0]) / 4));
		CPY4_1 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4))));

		DrawSideCurve(hdc, point[4][0], point[4][1], CPX4_1, CPY4_1, point[5][0], point[5][1]);
	}

	else if (Click == 5) {
		int CPX5_1, CPY5_1;

		CPX5_1 = (point[5][0] + ((point[6][0] - point[5][0]) / 5));
		CPY5_1 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 5)) - (point[5][1] - ((point[5][1] - point[4][1]) / 5))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 5)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 5)) - (point[5][0] - ((point[5][0] - point[4][0]) / 5)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 5)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 5))));

		DrawSideCurve(hdc, point[5][0], point[5][1], CPX5_1, CPY5_1, point[6][0], point[6][1]);
	}

	else if (Click == 6) {
		int CPX6_1, CPY6_1;

		CPX6_1 = (point[6][0] + ((point[7][0] - point[6][0]) / 6));
		CPY6_1 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 6)) - (point[6][1] - ((point[6][1] - point[5][1]) / 6))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 6)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 6)) - (point[6][0] - ((point[6][0] - point[5][0]) / 6)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 6)))) - (point[6][1] + ((point[7][1] - point[6][1]) / 6))));

		DrawSideCurve(hdc, point[6][0], point[6][1], CPX6_1, CPY6_1, point[7][0], point[7][1]);
	}

	else if (Click == 7) {
		int CPX7_1, CPY7_1;

		CPX7_1 = (point[7][0] + ((point[8][0] - point[7][0]) / 7));
		CPY7_1 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 7)) - (point[7][1] - ((point[7][1] - point[6][1]) / 7))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 7)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 7)) - (point[7][0] - ((point[7][0] - point[6][0]) / 7)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 7)))) - (point[7][1] + ((point[8][1] - point[7][1]) / 7))));

		DrawSideCurve(hdc, point[7][0], point[7][1], CPX7_1, CPY7_1, point[8][0], point[8][1]);
	}

	else if (Click == 8) {
		int CPX8_1, CPY8_1;

		CPX8_1 = (point[8][0] + ((point[9][0] - point[8][0]) / 8));
		CPY8_1 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 8)) - (point[8][1] - ((point[8][1] - point[7][1]) / 8))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 8)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 8)) - (point[8][0] - ((point[8][0] - point[7][0]) / 8)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 8)))) - (point[8][1] + ((point[9][1] - point[8][1]) / 8))));

		DrawSideCurve(hdc, point[8][0], point[8][1], CPX8_1, CPY8_1, point[9][0], point[9][1]);
	}

	else if (Click == 9) {
		int CPX9_1, CPY9_1;

		CPX9_1 = (point[9][0] + ((point[10][0] - point[9][0]) / 9));
		CPY9_1 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 9)) - (point[9][1] - ((point[9][1] - point[8][1]) / 9))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 9)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 9)) - (point[9][0] - ((point[9][0] - point[8][0]) / 9)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 9)))) - (point[9][1] + ((point[10][1] - point[9][1]) / 9))));

		DrawSideCurve(hdc, point[9][0], point[9][1], CPX9_1, CPY9_1, point[10][0], point[10][1]);
	}

	else if (Click == 10) {
		int CPX10_1, CPY10_1;

		CPX10_1 = (point[10][0] + ((point[11][0] - point[10][0]) / 10));
		CPY10_1 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 10)) - (point[10][1] - ((point[10][1] - point[9][1]) / 10))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 10)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 10)) - (point[10][0] - ((point[10][0] - point[9][0]) / 10)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 10)))) - (point[10][1] + ((point[11][1] - point[10][1]) / 10))));

		DrawSideCurve(hdc, point[10][0], point[10][1], CPX10_1, CPY10_1, point[11][0], point[11][1]);
	}

	else if (Click == 11) {
		int CPX11_1, CPY11_1;

		CPX11_1 = (point[11][0] + ((point[12][0] - point[11][0]) / 11));
		CPY11_1 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 11)) - (point[11][1] - ((point[11][1] - point[10][1]) / 11))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 11)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 11)) - (point[11][0] - ((point[11][0] - point[10][0]) / 11)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 11)))) - (point[11][1] + ((point[12][1] - point[11][1]) / 11))));

		DrawSideCurve(hdc, point[11][0], point[11][1], CPX11_1, CPY11_1, point[12][0], point[12][1]);
	}

	else if (Click == 12) {
		int CPX12_1, CPY12_1;

		CPX12_1 = (point[12][0] + ((point[13][0] - point[12][0]) / 12));
		CPY12_1 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 12)) - (point[12][1] - ((point[12][1] - point[11][1]) / 12))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 12)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 12)) - (point[12][0] - ((point[12][0] - point[11][0]) / 12)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 12)))) - (point[12][1] + ((point[13][1] - point[12][1]) / 12))));

		DrawSideCurve(hdc, point[12][0], point[12][1], CPX12_1, CPY12_1, point[13][0], point[13][1]);
	}

	else if (Click == 13) {
		int CPX13_1, CPY13_1;

		CPX13_1 = (point[13][0] + ((point[14][0] - point[13][0]) / 13));
		CPY13_1 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 13)) - (point[13][1] - ((point[13][1] - point[12][1]) / 13))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 13)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 13)) - (point[13][0] - ((point[13][0] - point[12][0]) / 13)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 13)))) - (point[13][1] + ((point[14][1] - point[13][1]) / 13))));

		DrawSideCurve(hdc, point[13][0], point[13][1], CPX13_1, CPY13_1, point[14][0], point[14][1]);
	}

	else if (Click == 14) {
		int CPX14_1, CPY14_1;

		CPX14_1 = (point[14][0] + ((point[15][0] - point[14][0]) / 14));
		CPY14_1 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 14)) - (point[14][1] - ((point[14][1] - point[13][1]) / 14))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 14)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 14)) - (point[14][0] - ((point[14][0] - point[13][0]) / 14)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 14)))) - (point[14][1] + ((point[15][1] - point[14][1]) / 14))));

		DrawSideCurve(hdc, point[14][0], point[14][1], CPX14_1, CPY14_1, point[15][0], point[15][1]);
	}

	else if (Click == 15) {
		int CPX15_1, CPY15_1;

		CPX15_1 = (point[15][0] + ((point[16][0] - point[15][0]) / 15));
		CPY15_1 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 15)) - (point[15][1] - ((point[15][1] - point[14][1]) / 15))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 15)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 15)) - (point[15][0] - ((point[15][0] - point[14][0]) / 15)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 15)))) - (point[15][1] + ((point[16][1] - point[15][1]) / 15))));

		DrawSideCurve(hdc, point[15][0], point[15][1], CPX15_1, CPY15_1, point[16][0], point[16][1]);
	}

	else if (Click == 16) {
		int CPX16_1, CPY16_1;

		CPX16_1 = (point[16][0] + ((point[17][0] - point[16][0]) / 16));
		CPY16_1 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 16)) - (point[16][1] - ((point[16][1] - point[15][1]) / 16))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 16)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 16)) - (point[16][0] - ((point[16][0] - point[15][0]) / 16)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 16)))) - (point[16][1] + ((point[17][1] - point[16][1]) / 16))));

		DrawSideCurve(hdc, point[16][0], point[16][1], CPX16_1, CPY16_1, point[17][0], point[17][1]);
	}

	else if (Click == 17) {
		int CPX17_1, CPY17_1;

		CPX17_1 = (point[17][0] + ((point[18][0] - point[17][0]) / 17));
		CPY17_1 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 17)) - (point[17][1] - ((point[17][1] - point[16][1]) / 17))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 17)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 17)) - (point[17][0] - ((point[17][0] - point[16][0]) / 17)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 17)))) - (point[17][1] + ((point[18][1] - point[17][1]) / 17))));

		DrawSideCurve(hdc, point[17][0], point[17][1], CPX17_1, CPY17_1, point[18][0], point[18][1]);
	}

	else if (Click == 18) {
		int CPX18_1, CPY18_1;

		CPX18_1 = (point[18][0] + ((point[19][0] - point[18][0]) / 18));
		CPY18_1 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 18)) - (point[18][1] - ((point[18][1] - point[17][1]) / 18))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 18)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 18)) - (point[18][0] - ((point[18][0] - point[17][0]) / 18)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 18)))) - (point[18][1] + ((point[19][1] - point[18][1]) / 18))));

		DrawSideCurve(hdc, point[18][0], point[18][1], CPX18_1, CPY18_1, point[19][0], point[19][1]);
	}

	else if (Click == 19) {
		int CPX19_1, CPY19_1;

		CPX19_1 = (point[19][0] + ((point[20][0] - point[19][0]) / 19));
		CPY19_1 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 19)) - (point[19][1] - ((point[19][1] - point[18][1]) / 19))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 19)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 19)) - (point[19][0] - ((point[19][0] - point[18][0]) / 19)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 19)))) - (point[19][1] + ((point[20][1] - point[19][1]) / 19))));

		DrawSideCurve(hdc, point[19][0], point[19][1], CPX19_1, CPY19_1, point[20][0], point[20][1]);
	}

	else {

	}





	// 오른쪽 끝을 제외한 점에 대한 커브

	if (Click >= 1) {		// 점이 1개일때
		int CPX1, CPY1;

		CPX1 = (point[1][0] - ((point[1][0] - point[0][0]) / 4));
		CPY1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))));

		DrawSideCurve(hdc, point[0][0], point[0][1], CPX1, CPY1, point[1][0], point[1][1]);
	}

	if (Click >= 2) {		// 점이 2개일때
		int CPX1_1, CPY1_1, CPX2, CPY2;

		CPX1_1 = (point[1][0] + ((point[2][0] - point[1][0]) / 4));
		CPY1_1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4))));
		CPX2 = (point[2][0] - ((point[2][0] - point[1][0]) / 4));
		CPY2 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))));


		DrawCurve(hdc, point[1][0], point[1][1], CPX1_1, CPY1_1, CPX2, CPY2, point[2][0], point[2][1]);
	}

	if (Click >= 3) {		// 점이 3개일때
		int CPX2_1, CPY2_1, CPX3, CPY3;

		CPX2_1 = (point[2][0] + ((point[3][0] - point[2][0]) / 4));
		CPY2_1 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4))));
		CPX3 = (point[3][0] - ((point[3][0] - point[2][0]) / 4));
		CPY3 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))));

		DrawCurve(hdc, point[2][0], point[2][1], CPX2_1, CPY2_1, CPX3, CPY3, point[3][0], point[3][1]);
	}

	if (Click >= 4) {		// 점이 4개일때
		int CPX3_1, CPY3_1, CPX4, CPY4;

		CPX3_1 = (point[3][0] + ((point[4][0] - point[3][0]) / 4));
		CPY3_1 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4))));
		CPX4 = (point[4][0] - ((point[4][0] - point[3][0]) / 4));
		CPY4 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))));

		DrawCurve(hdc, point[3][0], point[3][1], CPX3_1, CPY3_1, CPX4, CPY4, point[4][0], point[4][1]);
	}

	if (Click >= 5) {		// 점이 5개일때
		int CPX4_1, CPY4_1, CPX5, CPY5;

		CPX4_1 = (point[4][0] + ((point[5][0] - point[4][0]) / 4));
		CPY4_1 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4))));
		CPX5 = (point[5][0] - ((point[5][0] - point[4][0]) / 4));
		CPY5 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))));

		DrawCurve(hdc, point[4][0], point[4][1], CPX4_1, CPY4_1, CPX5, CPY5, point[5][0], point[5][1]);
	}


	if (Click >= 6) {		// 점이 6개일때
		int CPX5_1, CPY5_1, CPX6, CPY6;

		CPX5_1 = (point[5][0] + ((point[6][0] - point[5][0]) / 4));
		CPY5_1 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 4))));
		CPX6 = (point[6][0] - ((point[6][0] - point[5][0]) / 4));
		CPY6 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 4)) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 4)) - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 4)))) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))));

		DrawCurve(hdc, point[5][0], point[5][1], CPX5_1, CPY5_1, CPX6, CPY6, point[6][0], point[6][1]);
	}

	if (Click >= 7) {		// 점이 7개일때
		int CPX6_1, CPY6_1, CPX7, CPY7;

		CPX6_1 = (point[6][0] + ((point[7][0] - point[6][0]) / 4));
		CPY6_1 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 4)) - (point[6][1] - ((point[6][1] - point[5][1]) / 4))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 4)) - (point[6][0] - ((point[6][0] - point[5][0]) / 4)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 4)))) - (point[6][1] + ((point[7][1] - point[6][1]) / 4))));
		CPX7 = (point[7][0] - ((point[7][0] - point[6][0]) / 4));
		CPY7 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 4)) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 4)) - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 4)))) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))));

		DrawCurve(hdc, point[6][0], point[6][1], CPX6_1, CPY6_1, CPX7, CPY7, point[7][0], point[7][1]);
	}

	if (Click >= 8) {		// 점이 8개일때
		int CPX7_1, CPY7_1, CPX8, CPY8;

		CPX7_1 = (point[7][0] + ((point[8][0] - point[7][0]) / 4));
		CPY7_1 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 4)) - (point[7][1] - ((point[7][1] - point[6][1]) / 4))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 4)) - (point[7][0] - ((point[7][0] - point[6][0]) / 4)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 4)))) - (point[7][1] + ((point[8][1] - point[7][1]) / 4))));
		CPX8 = (point[8][0] - ((point[8][0] - point[7][0]) / 4));
		CPY8 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 4)) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 4)) - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 4)))) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))));

		DrawCurve(hdc, point[7][0], point[7][1], CPX7_1, CPY7_1, CPX8, CPY8, point[8][0], point[8][1]);
	}

	if (Click >= 9) {		// 점이 9개일때
		int CPX8_1, CPY8_1, CPX9, CPY9;

		CPX8_1 = (point[8][0] + ((point[9][0] - point[8][0]) / 4));
		CPY8_1 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 4)) - (point[8][1] - ((point[8][1] - point[7][1]) / 4))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 4)) - (point[8][0] - ((point[8][0] - point[7][0]) / 4)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 4)))) - (point[8][1] + ((point[9][1] - point[8][1]) / 4))));
		CPX9 = (point[9][0] - ((point[9][0] - point[8][0]) / 4));
		CPY9 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 4)) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 4)) - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 4)))) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))));

		DrawCurve(hdc, point[8][0], point[8][1], CPX8_1, CPY8_1, CPX9, CPY9, point[9][0], point[9][1]);
	}

	if (Click >= 10) {		// 점이 10개일때
		int CPX9_1, CPY9_1, CPX10, CPY10;

		CPX9_1 = (point[9][0] + ((point[10][0] - point[9][0]) / 4));
		CPY9_1 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 4)) - (point[9][1] - ((point[9][1] - point[8][1]) / 4))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 4)) - (point[9][0] - ((point[9][0] - point[8][0]) / 4)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 4)))) - (point[9][1] + ((point[10][1] - point[9][1]) / 4))));
		CPX10 = (point[10][0] - ((point[10][0] - point[9][0]) / 4));
		CPY10 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 4)) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 4)) - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 4)))) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))));

		DrawCurve(hdc, point[9][0], point[9][1], CPX9_1, CPY9_1, CPX10, CPY10, point[10][0], point[10][1]);
	}

	if (Click >= 11) {		// 점이 11개일때
		int CPX10_1, CPY10_1, CPX11, CPY11;

		CPX10_1 = (point[10][0] + ((point[11][0] - point[10][0]) / 4));
		CPY10_1 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 4)) - (point[10][1] - ((point[10][1] - point[9][1]) / 4))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 4)) - (point[10][0] - ((point[10][0] - point[9][0]) / 4)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 4)))) - (point[10][1] + ((point[11][1] - point[10][1]) / 4))));
		CPX11 = (point[11][0] - ((point[11][0] - point[10][0]) / 4));
		CPY11 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 4)) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 4)) - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 4)))) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))));

		DrawCurve(hdc, point[10][0], point[10][1], CPX10_1, CPY10_1, CPX11, CPY11, point[11][0], point[11][1]);
	}

	if (Click >= 12) {		// 점이 12개일때
		int CPX11_1, CPY11_1, CPX12, CPY12;

		CPX11_1 = (point[11][0] + ((point[12][0] - point[11][0]) / 4));
		CPY11_1 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 4)) - (point[11][1] - ((point[11][1] - point[10][1]) / 4))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 4)) - (point[11][0] - ((point[11][0] - point[10][0]) / 4)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 4)))) - (point[11][1] + ((point[12][1] - point[11][1]) / 4))));
		CPX12 = (point[12][0] - ((point[12][0] - point[11][0]) / 4));
		CPY12 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 4)) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 4)) - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 4)))) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))));

		DrawCurve(hdc, point[11][0], point[11][1], CPX11_1, CPY11_1, CPX12, CPY12, point[12][0], point[12][1]);
	}

	if (Click >= 13) {		// 점이 13개일때
		int CPX12_1, CPY12_1, CPX13, CPY13;

		CPX12_1 = (point[12][0] + ((point[13][0] - point[12][0]) / 4));
		CPY12_1 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 4)) - (point[12][1] - ((point[12][1] - point[11][1]) / 4))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 4)) - (point[12][0] - ((point[12][0] - point[11][0]) / 4)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 4)))) - (point[12][1] + ((point[13][1] - point[12][1]) / 4))));
		CPX13 = (point[13][0] - ((point[13][0] - point[12][0]) / 4));
		CPY13 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 4)) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 4)) - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 4)))) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))));

		DrawCurve(hdc, point[12][0], point[12][1], CPX12_1, CPY12_1, CPX13, CPY13, point[13][0], point[13][1]);
	}

	if (Click >= 14) {		// 점이 14개일때
		int CPX13_1, CPY13_1, CPX14, CPY14;

		CPX13_1 = (point[13][0] + ((point[14][0] - point[13][0]) / 4));
		CPY13_1 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 4)) - (point[13][1] - ((point[13][1] - point[12][1]) / 4))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 4)) - (point[13][0] - ((point[13][0] - point[12][0]) / 4)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 4)))) - (point[13][1] + ((point[14][1] - point[13][1]) / 4))));
		CPX14 = (point[14][0] - ((point[14][0] - point[13][0]) / 4));
		CPY14 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 4)) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 4)) - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 4)))) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))));

		DrawCurve(hdc, point[13][0], point[13][1], CPX13_1, CPY13_1, CPX14, CPY14, point[14][0], point[14][1]);
	}

	if (Click >= 15) {		// 점이 15개일때
		int CPX14_1, CPY14_1, CPX15, CPY15;

		CPX14_1 = (point[14][0] + ((point[15][0] - point[14][0]) / 4));
		CPY14_1 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 4)) - (point[14][1] - ((point[14][1] - point[13][1]) / 4))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 4)) - (point[14][0] - ((point[14][0] - point[13][0]) / 4)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 4)))) - (point[14][1] + ((point[15][1] - point[14][1]) / 4))));
		CPX15 = (point[15][0] - ((point[15][0] - point[14][0]) / 4));
		CPY15 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 4)) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 4)) - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 4)))) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))));

		DrawCurve(hdc, point[14][0], point[14][1], CPX14_1, CPY14_1, CPX15, CPY15, point[15][0], point[15][1]);
	}

	if (Click >= 16) {		// 점이 16개일때
		int CPX15_1, CPY15_1, CPX16, CPY16;

		CPX15_1 = (point[15][0] + ((point[16][0] - point[15][0]) / 4));
		CPY15_1 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 4)) - (point[15][1] - ((point[15][1] - point[14][1]) / 4))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 4)) - (point[15][0] - ((point[15][0] - point[14][0]) / 4)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 4)))) - (point[15][1] + ((point[16][1] - point[15][1]) / 4))));
		CPX16 = (point[16][0] - ((point[16][0] - point[15][0]) / 4));
		CPY16 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 4)) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 4)) - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 4)))) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))));

		DrawCurve(hdc, point[15][0], point[15][1], CPX15_1, CPY15_1, CPX16, CPY16, point[16][0], point[16][1]);
	}

	if (Click >= 17) {		// 점이 17개일때
		int CPX16_1, CPY16_1, CPX17, CPY17;

		CPX16_1 = (point[16][0] + ((point[17][0] - point[16][0]) / 4));
		CPY16_1 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 4)) - (point[16][1] - ((point[16][1] - point[15][1]) / 4))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 4)) - (point[16][0] - ((point[16][0] - point[15][0]) / 4)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 4)))) - (point[16][1] + ((point[17][1] - point[16][1]) / 4))));
		CPX17 = (point[17][0] - ((point[17][0] - point[16][0]) / 4));
		CPY17 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 4)) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 4)) - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 4)))) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))));

		DrawCurve(hdc, point[16][0], point[16][1], CPX16_1, CPY16_1, CPX17, CPY17, point[17][0], point[17][1]);
	}

	if (Click >= 18) {		// 점이 18개일때
		int CPX17_1, CPY17_1, CPX18, CPY18;

		CPX17_1 = (point[17][0] + ((point[18][0] - point[17][0]) / 4));
		CPY17_1 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 4)) - (point[17][1] - ((point[17][1] - point[16][1]) / 4))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 4)) - (point[17][0] - ((point[17][0] - point[16][0]) / 4)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 4)))) - (point[17][1] + ((point[18][1] - point[17][1]) / 4))));
		CPX18 = (point[18][0] - ((point[18][0] - point[17][0]) / 4));
		CPY18 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 4)) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 4)) - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 4)))) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))));

		DrawCurve(hdc, point[17][0], point[17][1], CPX17_1, CPY17_1, CPX18, CPY18, point[18][0], point[18][1]);
	}

	if (Click >= 19) {		// 점이 19개일때
		int CPX18_1, CPY18_1, CPX19, CPY19;

		CPX18_1 = (point[18][0] + ((point[19][0] - point[18][0]) / 4));
		CPY18_1 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 4)) - (point[18][1] - ((point[18][1] - point[17][1]) / 4))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 4)) - (point[18][0] - ((point[18][0] - point[17][0]) / 4)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 4)))) - (point[18][1] + ((point[19][1] - point[18][1]) / 4))));
		CPX19 = (point[19][0] - ((point[19][0] - point[18][0]) / 4));
		CPY19 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 4)) - (point[19][1] - ((point[19][1] - point[18][1]) / 4))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 4)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 4)) - (point[19][0] - ((point[19][0] - point[18][0]) / 4)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 4)))) - (point[19][1] - ((point[19][1] - point[18][1]) / 4))));

		DrawCurve(hdc, point[18][0], point[18][1], CPX18_1, CPY18_1, CPX19, CPY19, point[19][0], point[19][1]);
	}

	if (Click >= 20) {		// 점이 20개일때
		int CPX19_1, CPY19_1, CPX20, CPY20;

		CPX19_1 = (point[19][0] + ((point[20][0] - point[19][0]) / 4));
		CPY19_1 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 4)) - (point[19][1] - ((point[19][1] - point[18][1]) / 4))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 4)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 4)) - (point[19][0] - ((point[19][0] - point[18][0]) / 4)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 4)))) - (point[19][1] + ((point[20][1] - point[19][1]) / 4))));
		CPX20 = (point[20][0] - ((point[20][0] - point[19][0]) / 4));
		CPY20 = (point[20][1] - (((((((point[20][1] + ((point[21][1] - point[20][1]) / 4)) - (point[20][1] - ((point[20][1] - point[19][1]) / 4))) * (point[20][0] - (point[20][0] - ((point[20][0] - point[19][0]) / 4)))) / ((point[20][0] + ((point[21][0] - point[20][0]) / 4)) - (point[20][0] - ((point[20][0] - point[19][0]) / 4)))) + (point[20][1] - ((point[20][1] - point[19][1]) / 4)))) - (point[20][1] - ((point[20][1] - point[19][1]) / 4))));

		DrawCurve(hdc, point[19][0], point[19][1], CPX19_1, CPY19_1, CPX20, CPY20, point[20][0], point[20][1]);
	}

	ReleaseDC(hWnd, hdc);

}

// 보조선 (점 5개까지만 적용)
void LLine(HWND hWnd)				// 보조선
{
	hdc = GetDC(hWnd);
	HPEN BluePen = CreatePen(PS_SOLID, 1, RGB(153, 204, 255));
	HGDIOBJ OldBluePen = SelectObject(hdc, BluePen);

	if (Click == 0) {			// 점이 0개일때

	}

	if (Click >= 1) {		// 점이 1개일때
		MoveToEx(hdc, point[0][0], point[0][1], NULL);
		LineTo(hdc, point[1][0], point[1][1]);
		MoveToEx(hdc, point[1][0], point[1][1], NULL);
		LineTo(hdc, point[2][0], point[2][1]);

		Ellipse(hdc, (point[1][0] - ((point[1][0] - point[0][0]) / 4)) - 3, (point[1][1] - ((point[1][1] - point[0][1]) / 4)) - 3,
			(point[1][0] - ((point[1][0] - point[0][0]) / 4)) + 3, (point[1][1] - ((point[1][1] - point[0][1]) / 4)) + 3);
		Ellipse(hdc, (point[1][0] + ((point[2][0] - point[1][0]) / 4)) - 3, (point[1][1] + ((point[2][1] - point[1][1]) / 4)) - 3,
			(point[1][0] + ((point[2][0] - point[1][0]) / 4)) + 3, (point[1][1] + ((point[2][1] - point[1][1]) / 4)) + 3);

		MoveToEx(hdc, (point[1][0] - ((point[1][0] - point[0][0]) / 4)), (point[1][1] - ((point[1][1] - point[0][1]) / 4)), NULL);
		LineTo(hdc, (point[1][0] + ((point[2][0] - point[1][0]) / 4)), (point[1][1] + ((point[2][1] - point[1][1]) / 4)));

		Ellipse(hdc, point[1][0] - 3,
			(((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4))) - 3,
			point[1][0] + 3,
			(((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4))) + 3);

		MoveToEx(hdc, (point[1][0] - ((point[1][0] - point[0][0]) / 4)), (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] - ((point[1][1] - point[0][1]) / 4)))), NULL);
		LineTo(hdc, (point[1][0] + ((point[2][0] - point[1][0]) / 4)), (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4)))));

		Ellipse(hdc, (point[1][0] - ((point[1][0] - point[0][0]) / 4)) - 3,
			(point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - 3,
			(point[1][0] - ((point[1][0] - point[0][0]) / 4)) + 3,
			(point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) + 3);

		Ellipse(hdc, (point[1][0] + ((point[2][0] - point[1][0]) / 4)) - 3,
			(point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4)))) - 3,
			(point[1][0] + ((point[2][0] - point[1][0]) / 4)) + 3,
			(point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4)))) + 3);

	}

	if (Click >= 2) {		// 점이 2개일때
		MoveToEx(hdc, point[1][0], point[1][1], NULL);
		LineTo(hdc, point[2][0], point[2][1]);
		MoveToEx(hdc, point[2][0], point[2][1], NULL);
		LineTo(hdc, point[3][0], point[3][1]);

		Ellipse(hdc, (point[2][0] - ((point[2][0] - point[1][0]) / 4)) - 3, (point[2][1] - ((point[2][1] - point[1][1]) / 4)) - 3,
			(point[2][0] - ((point[2][0] - point[1][0]) / 4)) + 3, (point[2][1] - ((point[2][1] - point[1][1]) / 4)) + 3);
		Ellipse(hdc, (point[2][0] + ((point[3][0] - point[2][0]) / 4)) - 3, (point[2][1] + ((point[3][1] - point[2][1]) / 4)) - 3,
			(point[2][0] + ((point[3][0] - point[2][0]) / 4)) + 3, (point[2][1] + ((point[3][1] - point[2][1]) / 4)) + 3);

		MoveToEx(hdc, (point[2][0] - ((point[2][0] - point[1][0]) / 4)), (point[2][1] - ((point[2][1] - point[1][1]) / 4)), NULL);
		LineTo(hdc, (point[2][0] + ((point[3][0] - point[2][0]) / 4)), (point[2][1] + ((point[3][1] - point[2][1]) / 4)));

		Ellipse(hdc, point[2][0] - 3,
			(((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4))) - 3,
			point[2][0] + 3,
			(((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4))) + 3);

		MoveToEx(hdc, (point[2][0] - ((point[2][0] - point[1][0]) / 4)), (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] - ((point[2][1] - point[1][1]) / 4)))), NULL);
		LineTo(hdc, (point[2][0] + ((point[3][0] - point[2][0]) / 4)), (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4)))));

		Ellipse(hdc, (point[2][0] - ((point[2][0] - point[1][0]) / 4)) - 3,
			(point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - 3,
			(point[2][0] - ((point[2][0] - point[1][0]) / 4)) + 3,
			(point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) + 3);

		Ellipse(hdc, (point[2][0] + ((point[3][0] - point[2][0]) / 4)) - 3,
			(point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4)))) - 3,
			(point[2][0] + ((point[3][0] - point[2][0]) / 4)) + 3,
			(point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4)))) + 3);

	}

	if (Click >= 3) {		// 점이 3개 일때
		MoveToEx(hdc, point[2][0], point[2][1], NULL);
		LineTo(hdc, point[3][0], point[3][1]);
		MoveToEx(hdc, point[3][0], point[3][1], NULL);
		LineTo(hdc, point[4][0], point[4][1]);

		Ellipse(hdc, (point[3][0] - ((point[3][0] - point[2][0]) / 4)) - 3, (point[3][1] - ((point[3][1] - point[2][1]) / 4)) - 3,
			(point[3][0] - ((point[3][0] - point[2][0]) / 4)) + 3, (point[3][1] - ((point[3][1] - point[2][1]) / 4)) + 3);
		Ellipse(hdc, (point[3][0] + ((point[4][0] - point[3][0]) / 4)) - 3, (point[3][1] + ((point[4][1] - point[3][1]) / 4)) - 3,
			(point[3][0] + ((point[4][0] - point[3][0]) / 4)) + 3, (point[3][1] + ((point[4][1] - point[3][1]) / 4)) + 3);

		MoveToEx(hdc, (point[3][0] - ((point[3][0] - point[2][0]) / 4)), (point[3][1] - ((point[3][1] - point[2][1]) / 4)), NULL);
		LineTo(hdc, (point[3][0] + ((point[4][0] - point[3][0]) / 4)), (point[3][1] + ((point[4][1] - point[3][1]) / 4)));

		Ellipse(hdc, point[3][0] - 3,
			(((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4))) - 3,
			point[3][0] + 3,
			(((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4))) + 3);

		MoveToEx(hdc, (point[3][0] - ((point[3][0] - point[2][0]) / 4)), (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] - ((point[3][1] - point[2][1]) / 4)))), NULL);
		LineTo(hdc, (point[3][0] + ((point[4][0] - point[3][0]) / 4)), (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4)))));

		Ellipse(hdc, (point[3][0] - ((point[3][0] - point[2][0]) / 4)) - 3,
			(point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - 3,
			(point[3][0] - ((point[3][0] - point[2][0]) / 4)) + 3,
			(point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) + 3);

		Ellipse(hdc, (point[3][0] + ((point[4][0] - point[3][0]) / 4)) - 3,
			(point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4)))) - 3,
			(point[3][0] + ((point[4][0] - point[3][0]) / 4)) + 3,
			(point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4)))) + 3);

	}

	if (Click >= 4) {		// 점이 4개 일때
		MoveToEx(hdc, point[3][0], point[3][1], NULL);
		LineTo(hdc, point[4][0], point[4][1]);
		MoveToEx(hdc, point[4][0], point[4][1], NULL);
		LineTo(hdc, point[5][0], point[5][1]);

		Ellipse(hdc, (point[4][0] - ((point[4][0] - point[3][0]) / 4)) - 3, (point[4][1] - ((point[4][1] - point[3][1]) / 4)) - 3,
			(point[4][0] - ((point[4][0] - point[3][0]) / 4)) + 3, (point[4][1] - ((point[4][1] - point[3][1]) / 4)) + 3);
		Ellipse(hdc, (point[4][0] + ((point[5][0] - point[4][0]) / 4)) - 3, (point[4][1] + ((point[5][1] - point[4][1]) / 4)) - 3,
			(point[4][0] + ((point[5][0] - point[4][0]) / 4)) + 3, (point[4][1] + ((point[5][1] - point[4][1]) / 4)) + 3);

		MoveToEx(hdc, (point[4][0] - ((point[4][0] - point[3][0]) / 4)), (point[4][1] - ((point[4][1] - point[3][1]) / 4)), NULL);
		LineTo(hdc, (point[4][0] + ((point[5][0] - point[4][0]) / 4)), (point[4][1] + ((point[5][1] - point[4][1]) / 4)));

		Ellipse(hdc, point[4][0] - 3,
			(((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4))) - 3,
			point[4][0] + 3,
			(((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4))) + 3);

		MoveToEx(hdc, (point[4][0] - ((point[4][0] - point[3][0]) / 4)), (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] - ((point[4][1] - point[3][1]) / 4)))), NULL);
		LineTo(hdc, (point[4][0] + ((point[5][0] - point[4][0]) / 4)), (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4)))));

		Ellipse(hdc, (point[4][0] - ((point[4][0] - point[3][0]) / 4)) - 3,
			(point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - 3,
			(point[4][0] - ((point[4][0] - point[3][0]) / 4)) + 3,
			(point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) + 3);

		Ellipse(hdc, (point[4][0] + ((point[5][0] - point[4][0]) / 4)) - 3,
			(point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4)))) - 3,
			(point[4][0] + ((point[5][0] - point[4][0]) / 4)) + 3,
			(point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4)))) + 3);

	}

	if (Click >= 5) {		// 점이 5개 일때
		MoveToEx(hdc, point[4][0], point[4][1], NULL);
		LineTo(hdc, point[5][0], point[5][1]);
		MoveToEx(hdc, point[5][0], point[5][1], NULL);
		LineTo(hdc, point[6][0], point[6][1]);

		Ellipse(hdc, (point[5][0] - ((point[5][0] - point[4][0]) / 4)) - 3, (point[5][1] - ((point[5][1] - point[4][1]) / 4)) - 3,
			(point[5][0] - ((point[5][0] - point[4][0]) / 4)) + 3, (point[5][1] - ((point[5][1] - point[4][1]) / 4)) + 3);
		Ellipse(hdc, (point[5][0] + ((point[6][0] - point[5][0]) / 4)) - 3, (point[5][1] + ((point[6][1] - point[5][1]) / 4)) - 3,
			(point[5][0] + ((point[6][0] - point[5][0]) / 4)) + 3, (point[5][1] + ((point[6][1] - point[5][1]) / 4)) + 3);

		MoveToEx(hdc, (point[5][0] - ((point[5][0] - point[4][0]) / 4)), (point[5][1] - ((point[5][1] - point[4][1]) / 4)), NULL);
		LineTo(hdc, (point[5][0] + ((point[6][0] - point[5][0]) / 4)), (point[5][1] + ((point[6][1] - point[5][1]) / 4)));

		Ellipse(hdc, point[5][0] - 3,
			(((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4))) - 3,
			point[5][0] + 3,
			(((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4))) + 3);

		MoveToEx(hdc, (point[5][0] - ((point[5][0] - point[4][0]) / 4)), (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] - ((point[5][1] - point[4][1]) / 4)))), NULL);
		LineTo(hdc, (point[5][0] + ((point[6][0] - point[5][0]) / 4)), (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 4)))));

		Ellipse(hdc, (point[5][0] - ((point[5][0] - point[4][0]) / 4)) - 3,
			(point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - 3,
			(point[5][0] - ((point[5][0] - point[4][0]) / 4)) + 3,
			(point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) + 3);

		Ellipse(hdc, (point[5][0] + ((point[6][0] - point[5][0]) / 4)) - 3,
			(point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 4)))) - 3,
			(point[5][0] + ((point[6][0] - point[5][0]) / 4)) + 3,
			(point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 4)))) + 3);

	}


	SelectObject(hdc, OldBluePen);
	DeleteObject(BluePen);
	ReleaseDC(hWnd, hdc);
}


// 제어점 (점 5개까지만 적용)
void CPoint(HWND hWnd) {
	hdc = GetDC(hWnd);
	HPEN PinkPen = CreatePen(PS_SOLID, 1, RGB(255, 0, 255));
	HGDIOBJ OldPinkPen = SelectObject(hdc, PinkPen);


	if (Click >= 1) {		// 점이 1개일때
		Ellipse(hdc, (point[1][0] - ((point[1][0] - point[0][0]) / 4)) - 3,
			(point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - 3,
			(point[1][0] - ((point[1][0] - point[0][0]) / 4)) + 3,
			(point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) + 3);

		Ellipse(hdc, (point[1][0] + ((point[2][0] - point[1][0]) / 4)) - 3,
			(point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4)))) - 3,
			(point[1][0] + ((point[2][0] - point[1][0]) / 4)) + 3,
			(point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 4)) - (point[1][1] - ((point[1][1] - point[0][1]) / 4))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 4)) - (point[1][0] - ((point[1][0] - point[0][0]) / 4)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 4)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 4)))) + 3);

	}

	if (Click >= 2) {		// 점이 2개일때
		Ellipse(hdc, (point[2][0] - ((point[2][0] - point[1][0]) / 4)) - 3,
			(point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - 3,
			(point[2][0] - ((point[2][0] - point[1][0]) / 4)) + 3,
			(point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) + 3);

		Ellipse(hdc, (point[2][0] + ((point[3][0] - point[2][0]) / 4)) - 3,
			(point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4)))) - 3,
			(point[2][0] + ((point[3][0] - point[2][0]) / 4)) + 3,
			(point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 4)) - (point[2][1] - ((point[2][1] - point[1][1]) / 4))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 4)) - (point[2][0] - ((point[2][0] - point[1][0]) / 4)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 4)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 4)))) + 3);
	}

	if (Click >= 3) {		// 점이 3개 일때
		Ellipse(hdc, (point[3][0] - ((point[3][0] - point[2][0]) / 4)) - 3,
			(point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - 3,
			(point[3][0] - ((point[3][0] - point[2][0]) / 4)) + 3,
			(point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) + 3);

		Ellipse(hdc, (point[3][0] + ((point[4][0] - point[3][0]) / 4)) - 3,
			(point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4)))) - 3,
			(point[3][0] + ((point[4][0] - point[3][0]) / 4)) + 3,
			(point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 4)) - (point[3][1] - ((point[3][1] - point[2][1]) / 4))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 4)) - (point[3][0] - ((point[3][0] - point[2][0]) / 4)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 4)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 4)))) + 3);
	}

	if (Click >= 4) {		// 점이 4개 일때
		Ellipse(hdc, (point[4][0] - ((point[4][0] - point[3][0]) / 4)) - 3,
			(point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - 3,
			(point[4][0] - ((point[4][0] - point[3][0]) / 4)) + 3,
			(point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) + 3);

		Ellipse(hdc, (point[4][0] + ((point[5][0] - point[4][0]) / 4)) - 3,
			(point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4)))) - 3,
			(point[4][0] + ((point[5][0] - point[4][0]) / 4)) + 3,
			(point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 4)) - (point[4][1] - ((point[4][1] - point[3][1]) / 4))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 4)) - (point[4][0] - ((point[4][0] - point[3][0]) / 4)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 4)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 4)))) + 3);
	}


	if (Click >= 5) {		// 점이 5개 일때
		Ellipse(hdc, (point[5][0] - ((point[5][0] - point[4][0]) / 4)) - 3,
			(point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - 3,
			(point[5][0] - ((point[5][0] - point[4][0]) / 4)) + 3,
			(point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) + 3);

		Ellipse(hdc, (point[5][0] + ((point[6][0] - point[5][0]) / 4)) - 3,
			(point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 4)))) - 3,
			(point[5][0] + ((point[6][0] - point[5][0]) / 4)) + 3,
			(point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 4)) - (point[5][1] - ((point[5][1] - point[4][1]) / 4))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 4)) - (point[5][0] - ((point[5][0] - point[4][0]) / 4)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 4)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 4)))) + 3);

	}


	SelectObject(hdc, OldPinkPen);
	DeleteObject(PinkPen);
	ReleaseDC(hWnd, hdc);
}





// 3분의 1일때 (곡선, 보조선, 제어점)
// 곡선
void C2Line(HWND hWnd) {				// 곡선
	hdc = GetDC(hWnd);

	// 오른쪽 끝 선에 대한 커브
	if (Click == 1) {
		int CPX1_1, CPY1_1;

		CPX1_1 = (point[1][0] + ((point[2][0] - point[1][0]) / 3));
		CPY1_1 = (point[1][1] - (((((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3)))) - (point[1][1] + ((point[2][1] - point[1][1]) / 3))));

		DrawSideCurve(hdc, point[1][0], point[1][1], CPX1_1, CPY1_1, point[2][0], point[2][1]);
	}

	else if (Click == 2) {
		int CPX2_1, CPY2_1;

		CPX2_1 = (point[2][0] + ((point[3][0] - point[2][0]) / 3));
		CPY2_1 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3)))) - (point[2][1] + ((point[3][1] - point[2][1]) / 3))));

		DrawSideCurve(hdc, point[2][0], point[2][1], CPX2_1, CPY2_1, point[3][0], point[3][1]);
	}

	else if (Click == 3) {
		int CPX3_1, CPY3_1;

		CPX3_1 = (point[3][0] + ((point[4][0] - point[3][0]) / 3));
		CPY3_1 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 3))));

		DrawSideCurve(hdc, point[3][0], point[3][1], CPX3_1, CPY3_1, point[4][0], point[4][1]);
	}

	else if (Click == 4) {
		int CPX4_1, CPY4_1;

		CPX4_1 = (point[4][0] + ((point[5][0] - point[4][0]) / 3));
		CPY4_1 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 3))));

		DrawSideCurve(hdc, point[4][0], point[4][1], CPX4_1, CPY4_1, point[5][0], point[5][1]);
	}

	else if (Click == 5) {
		int CPX5_1, CPY5_1;

		CPX5_1 = (point[5][0] + ((point[6][0] - point[5][0]) / 5));
		CPY5_1 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 5)) - (point[5][1] - ((point[5][1] - point[4][1]) / 5))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 5)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 5)) - (point[5][0] - ((point[5][0] - point[4][0]) / 5)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 5)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 5))));

		DrawSideCurve(hdc, point[5][0], point[5][1], CPX5_1, CPY5_1, point[6][0], point[6][1]);
	}

	else if (Click == 6) {
		int CPX6_1, CPY6_1;

		CPX6_1 = (point[6][0] + ((point[7][0] - point[6][0]) / 6));
		CPY6_1 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 6)) - (point[6][1] - ((point[6][1] - point[5][1]) / 6))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 6)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 6)) - (point[6][0] - ((point[6][0] - point[5][0]) / 6)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 6)))) - (point[6][1] + ((point[7][1] - point[6][1]) / 6))));

		DrawSideCurve(hdc, point[6][0], point[6][1], CPX6_1, CPY6_1, point[7][0], point[7][1]);
	}

	else if (Click == 7) {
		int CPX7_1, CPY7_1;

		CPX7_1 = (point[7][0] + ((point[8][0] - point[7][0]) / 7));
		CPY7_1 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 7)) - (point[7][1] - ((point[7][1] - point[6][1]) / 7))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 7)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 7)) - (point[7][0] - ((point[7][0] - point[6][0]) / 7)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 7)))) - (point[7][1] + ((point[8][1] - point[7][1]) / 7))));

		DrawSideCurve(hdc, point[7][0], point[7][1], CPX7_1, CPY7_1, point[8][0], point[8][1]);
	}

	else if (Click == 8) {
		int CPX8_1, CPY8_1;

		CPX8_1 = (point[8][0] + ((point[9][0] - point[8][0]) / 8));
		CPY8_1 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 8)) - (point[8][1] - ((point[8][1] - point[7][1]) / 8))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 8)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 8)) - (point[8][0] - ((point[8][0] - point[7][0]) / 8)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 8)))) - (point[8][1] + ((point[9][1] - point[8][1]) / 8))));

		DrawSideCurve(hdc, point[8][0], point[8][1], CPX8_1, CPY8_1, point[9][0], point[9][1]);
	}

	else if (Click == 9) {
		int CPX9_1, CPY9_1;

		CPX9_1 = (point[9][0] + ((point[10][0] - point[9][0]) / 9));
		CPY9_1 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 9)) - (point[9][1] - ((point[9][1] - point[8][1]) / 9))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 9)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 9)) - (point[9][0] - ((point[9][0] - point[8][0]) / 9)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 9)))) - (point[9][1] + ((point[10][1] - point[9][1]) / 9))));

		DrawSideCurve(hdc, point[9][0], point[9][1], CPX9_1, CPY9_1, point[10][0], point[10][1]);
	}

	else if (Click == 10) {
		int CPX10_1, CPY10_1;

		CPX10_1 = (point[10][0] + ((point[11][0] - point[10][0]) / 10));
		CPY10_1 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 10)) - (point[10][1] - ((point[10][1] - point[9][1]) / 10))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 10)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 10)) - (point[10][0] - ((point[10][0] - point[9][0]) / 10)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 10)))) - (point[10][1] + ((point[11][1] - point[10][1]) / 10))));

		DrawSideCurve(hdc, point[10][0], point[10][1], CPX10_1, CPY10_1, point[11][0], point[11][1]);
	}

	else if (Click == 11) {
		int CPX11_1, CPY11_1;

		CPX11_1 = (point[11][0] + ((point[12][0] - point[11][0]) / 11));
		CPY11_1 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 11)) - (point[11][1] - ((point[11][1] - point[10][1]) / 11))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 11)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 11)) - (point[11][0] - ((point[11][0] - point[10][0]) / 11)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 11)))) - (point[11][1] + ((point[12][1] - point[11][1]) / 11))));

		DrawSideCurve(hdc, point[11][0], point[11][1], CPX11_1, CPY11_1, point[12][0], point[12][1]);
	}

	else if (Click == 12) {
		int CPX12_1, CPY12_1;

		CPX12_1 = (point[12][0] + ((point[13][0] - point[12][0]) / 12));
		CPY12_1 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 12)) - (point[12][1] - ((point[12][1] - point[11][1]) / 12))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 12)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 12)) - (point[12][0] - ((point[12][0] - point[11][0]) / 12)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 12)))) - (point[12][1] + ((point[13][1] - point[12][1]) / 12))));

		DrawSideCurve(hdc, point[12][0], point[12][1], CPX12_1, CPY12_1, point[13][0], point[13][1]);
	}

	else if (Click == 13) {
		int CPX13_1, CPY13_1;

		CPX13_1 = (point[13][0] + ((point[14][0] - point[13][0]) / 13));
		CPY13_1 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 13)) - (point[13][1] - ((point[13][1] - point[12][1]) / 13))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 13)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 13)) - (point[13][0] - ((point[13][0] - point[12][0]) / 13)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 13)))) - (point[13][1] + ((point[14][1] - point[13][1]) / 13))));

		DrawSideCurve(hdc, point[13][0], point[13][1], CPX13_1, CPY13_1, point[14][0], point[14][1]);
	}

	else if (Click == 14) {
		int CPX14_1, CPY14_1;

		CPX14_1 = (point[14][0] + ((point[15][0] - point[14][0]) / 14));
		CPY14_1 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 14)) - (point[14][1] - ((point[14][1] - point[13][1]) / 14))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 14)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 14)) - (point[14][0] - ((point[14][0] - point[13][0]) / 14)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 14)))) - (point[14][1] + ((point[15][1] - point[14][1]) / 14))));

		DrawSideCurve(hdc, point[14][0], point[14][1], CPX14_1, CPY14_1, point[15][0], point[15][1]);
	}

	else if (Click == 15) {
		int CPX15_1, CPY15_1;

		CPX15_1 = (point[15][0] + ((point[16][0] - point[15][0]) / 15));
		CPY15_1 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 15)) - (point[15][1] - ((point[15][1] - point[14][1]) / 15))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 15)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 15)) - (point[15][0] - ((point[15][0] - point[14][0]) / 15)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 15)))) - (point[15][1] + ((point[16][1] - point[15][1]) / 15))));

		DrawSideCurve(hdc, point[15][0], point[15][1], CPX15_1, CPY15_1, point[16][0], point[16][1]);
	}

	else if (Click == 16) {
		int CPX16_1, CPY16_1;

		CPX16_1 = (point[16][0] + ((point[17][0] - point[16][0]) / 16));
		CPY16_1 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 16)) - (point[16][1] - ((point[16][1] - point[15][1]) / 16))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 16)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 16)) - (point[16][0] - ((point[16][0] - point[15][0]) / 16)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 16)))) - (point[16][1] + ((point[17][1] - point[16][1]) / 16))));

		DrawSideCurve(hdc, point[16][0], point[16][1], CPX16_1, CPY16_1, point[17][0], point[17][1]);
	}

	else if (Click == 17) {
		int CPX17_1, CPY17_1;

		CPX17_1 = (point[17][0] + ((point[18][0] - point[17][0]) / 17));
		CPY17_1 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 17)) - (point[17][1] - ((point[17][1] - point[16][1]) / 17))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 17)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 17)) - (point[17][0] - ((point[17][0] - point[16][0]) / 17)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 17)))) - (point[17][1] + ((point[18][1] - point[17][1]) / 17))));

		DrawSideCurve(hdc, point[17][0], point[17][1], CPX17_1, CPY17_1, point[18][0], point[18][1]);
	}

	else if (Click == 18) {
		int CPX18_1, CPY18_1;

		CPX18_1 = (point[18][0] + ((point[19][0] - point[18][0]) / 18));
		CPY18_1 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 18)) - (point[18][1] - ((point[18][1] - point[17][1]) / 18))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 18)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 18)) - (point[18][0] - ((point[18][0] - point[17][0]) / 18)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 18)))) - (point[18][1] + ((point[19][1] - point[18][1]) / 18))));

		DrawSideCurve(hdc, point[18][0], point[18][1], CPX18_1, CPY18_1, point[19][0], point[19][1]);
	}

	else if (Click == 19) {
		int CPX19_1, CPY19_1;

		CPX19_1 = (point[19][0] + ((point[20][0] - point[19][0]) / 19));
		CPY19_1 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 19)) - (point[19][1] - ((point[19][1] - point[18][1]) / 19))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 19)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 19)) - (point[19][0] - ((point[19][0] - point[18][0]) / 19)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 19)))) - (point[19][1] + ((point[20][1] - point[19][1]) / 19))));

		DrawSideCurve(hdc, point[19][0], point[19][1], CPX19_1, CPY19_1, point[20][0], point[20][1]);
	}

	else {
	}





	// 오른쪽 끝을 제외한 점에 대한 커브
	if (Click == 0) {		// 점이 0개일때
		MoveToEx(hdc, point[0][0], point[0][1], NULL);
		LineTo(hdc, point[1][0], point[1][1]);
	}

	if (Click >= 1) {		// 점이 1개일때
		int CPX1, CPY1;

		CPX1 = (point[1][0] - ((point[1][0] - point[0][0]) / 3));
		CPY1 = (point[1][1] + ((point[1][1] - ((point[1][1] - point[0][1]) / 3)) - ((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3)))));

		DrawSideCurve(hdc, point[0][0], point[0][1], CPX1, CPY1, point[1][0], point[1][1]);
	}

	if (Click >= 2) {		// 점이 2개일때
		int CPX1_1, CPY1_1, CPX2, CPY2;

		CPX1_1 = (point[1][0] + ((point[2][0] - point[1][0]) / 3));
		CPY1_1 = (point[1][1] - (((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3))) - (point[1][1] + ((point[2][1] - point[1][1]) / 3))));
		CPX2 = (point[2][0] - ((point[2][0] - point[1][0]) / 3));
		CPY2 = (point[2][1] - (((((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3)))) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))));

		DrawCurve(hdc, point[1][0], point[1][1], CPX1_1, CPY1_1, CPX2, CPY2, point[2][0], point[2][1]);
	}

	if (Click >= 3) {		// 점이 3개일때
		int CPX2_1, CPY2_1, CPX3, CPY3;

		CPX2_1 = (point[2][0] + ((point[3][0] - point[2][0]) / 3));
		CPY2_1 = (point[2][1] - (((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3))) - (point[2][1] + ((point[3][1] - point[2][1]) / 3))));
		CPX3 = (point[3][0] - ((point[3][0] - point[2][0]) / 3));
		CPY3 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3)))) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))));

		DrawCurve(hdc, point[2][0], point[2][1], CPX2_1, CPY2_1, CPX3, CPY3, point[3][0], point[3][1]);
	}

	if (Click >= 4) {		// 점이 4개일때
		int CPX3_1, CPY3_1, CPX4, CPY4;

		CPX3_1 = (point[3][0] + ((point[4][0] - point[3][0]) / 3));
		CPY3_1 = (point[3][1] - (((((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3)))) - (point[3][1] + ((point[4][1] - point[3][1]) / 3))));
		CPX4 = (point[4][0] - ((point[4][0] - point[3][0]) / 3));
		CPY4 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3)))) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))));

		DrawCurve(hdc, point[3][0], point[3][1], CPX3_1, CPY3_1, CPX4, CPY4, point[4][0], point[4][1]);
	}

	if (Click >= 5) {		// 점이 5개일때
		int CPX4_1, CPY4_1, CPX5, CPY5;

		CPX4_1 = (point[4][0] + ((point[5][0] - point[4][0]) / 3));
		CPY4_1 = (point[4][1] - (((((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3)))) - (point[4][1] + ((point[5][1] - point[4][1]) / 3))));
		CPX5 = (point[5][0] - ((point[5][0] - point[4][0]) / 3));
		CPY5 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 3)) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 3)) - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 3)))) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))));

		DrawCurve(hdc, point[4][0], point[4][1], CPX4_1, CPY4_1, CPX5, CPY5, point[5][0], point[5][1]);
	}


	if (Click >= 6) {		// 점이 6개일때
		int CPX5_1, CPY5_1, CPX6, CPY6;

		CPX5_1 = (point[5][0] + ((point[6][0] - point[5][0]) / 3));
		CPY5_1 = (point[5][1] - (((((((point[5][1] + ((point[6][1] - point[5][1]) / 3)) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 3)) - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 3)))) - (point[5][1] + ((point[6][1] - point[5][1]) / 3))));
		CPX6 = (point[6][0] - ((point[6][0] - point[5][0]) / 3));
		CPY6 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 3)) - (point[6][1] - ((point[6][1] - point[5][1]) / 3))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 3)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 3)) - (point[6][0] - ((point[6][0] - point[5][0]) / 3)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 3)))) - (point[6][1] - ((point[6][1] - point[5][1]) / 3))));

		DrawCurve(hdc, point[5][0], point[5][1], CPX5_1, CPY5_1, CPX6, CPY6, point[6][0], point[6][1]);
	}

	if (Click >= 7) {		// 점이 7개일때
		int CPX6_1, CPY6_1, CPX7, CPY7;

		CPX6_1 = (point[6][0] + ((point[7][0] - point[6][0]) / 3));
		CPY6_1 = (point[6][1] - (((((((point[6][1] + ((point[7][1] - point[6][1]) / 3)) - (point[6][1] - ((point[6][1] - point[5][1]) / 3))) * (point[6][0] - (point[6][0] - ((point[6][0] - point[5][0]) / 3)))) / ((point[6][0] + ((point[7][0] - point[6][0]) / 3)) - (point[6][0] - ((point[6][0] - point[5][0]) / 3)))) + (point[6][1] - ((point[6][1] - point[5][1]) / 3)))) - (point[6][1] + ((point[7][1] - point[6][1]) / 3))));
		CPX7 = (point[7][0] - ((point[7][0] - point[6][0]) / 3));
		CPY7 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 3)) - (point[7][1] - ((point[7][1] - point[6][1]) / 3))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 3)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 3)) - (point[7][0] - ((point[7][0] - point[6][0]) / 3)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 3)))) - (point[7][1] - ((point[7][1] - point[6][1]) / 3))));

		DrawCurve(hdc, point[6][0], point[6][1], CPX6_1, CPY6_1, CPX7, CPY7, point[7][0], point[7][1]);
	}

	if (Click >= 8) {		// 점이 8개일때
		int CPX7_1, CPY7_1, CPX8, CPY8;

		CPX7_1 = (point[7][0] + ((point[8][0] - point[7][0]) / 3));
		CPY7_1 = (point[7][1] - (((((((point[7][1] + ((point[8][1] - point[7][1]) / 3)) - (point[7][1] - ((point[7][1] - point[6][1]) / 3))) * (point[7][0] - (point[7][0] - ((point[7][0] - point[6][0]) / 3)))) / ((point[7][0] + ((point[8][0] - point[7][0]) / 3)) - (point[7][0] - ((point[7][0] - point[6][0]) / 3)))) + (point[7][1] - ((point[7][1] - point[6][1]) / 3)))) - (point[7][1] + ((point[8][1] - point[7][1]) / 3))));
		CPX8 = (point[8][0] - ((point[8][0] - point[7][0]) / 3));
		CPY8 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 3)) - (point[8][1] - ((point[8][1] - point[7][1]) / 3))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 3)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 3)) - (point[8][0] - ((point[8][0] - point[7][0]) / 3)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 3)))) - (point[8][1] - ((point[8][1] - point[7][1]) / 3))));

		DrawCurve(hdc, point[7][0], point[7][1], CPX7_1, CPY7_1, CPX8, CPY8, point[8][0], point[8][1]);
	}

	if (Click >= 9) {		// 점이 9개일때
		int CPX8_1, CPY8_1, CPX9, CPY9;

		CPX8_1 = (point[8][0] + ((point[9][0] - point[8][0]) / 3));
		CPY8_1 = (point[8][1] - (((((((point[8][1] + ((point[9][1] - point[8][1]) / 3)) - (point[8][1] - ((point[8][1] - point[7][1]) / 3))) * (point[8][0] - (point[8][0] - ((point[8][0] - point[7][0]) / 3)))) / ((point[8][0] + ((point[9][0] - point[8][0]) / 3)) - (point[8][0] - ((point[8][0] - point[7][0]) / 3)))) + (point[8][1] - ((point[8][1] - point[7][1]) / 3)))) - (point[8][1] + ((point[9][1] - point[8][1]) / 3))));
		CPX9 = (point[9][0] - ((point[9][0] - point[8][0]) / 3));
		CPY9 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 3)) - (point[9][1] - ((point[9][1] - point[8][1]) / 3))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 3)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 3)) - (point[9][0] - ((point[9][0] - point[8][0]) / 3)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 3)))) - (point[9][1] - ((point[9][1] - point[8][1]) / 3))));

		DrawCurve(hdc, point[8][0], point[8][1], CPX8_1, CPY8_1, CPX9, CPY9, point[9][0], point[9][1]);
	}

	if (Click >= 10) {		// 점이 10개일때
		int CPX9_1, CPY9_1, CPX10, CPY10;

		CPX9_1 = (point[9][0] + ((point[10][0] - point[9][0]) / 3));
		CPY9_1 = (point[9][1] - (((((((point[9][1] + ((point[10][1] - point[9][1]) / 3)) - (point[9][1] - ((point[9][1] - point[8][1]) / 3))) * (point[9][0] - (point[9][0] - ((point[9][0] - point[8][0]) / 3)))) / ((point[9][0] + ((point[10][0] - point[9][0]) / 3)) - (point[9][0] - ((point[9][0] - point[8][0]) / 3)))) + (point[9][1] - ((point[9][1] - point[8][1]) / 3)))) - (point[9][1] + ((point[10][1] - point[9][1]) / 3))));
		CPX10 = (point[10][0] - ((point[10][0] - point[9][0]) / 3));
		CPY10 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 3)) - (point[10][1] - ((point[10][1] - point[9][1]) / 3))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 3)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 3)) - (point[10][0] - ((point[10][0] - point[9][0]) / 3)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 3)))) - (point[10][1] - ((point[10][1] - point[9][1]) / 3))));

		DrawCurve(hdc, point[9][0], point[9][1], CPX9_1, CPY9_1, CPX10, CPY10, point[10][0], point[10][1]);
	}

	if (Click >= 11) {		// 점이 11개일때
		int CPX10_1, CPY10_1, CPX11, CPY11;

		CPX10_1 = (point[10][0] + ((point[11][0] - point[10][0]) / 3));
		CPY10_1 = (point[10][1] - (((((((point[10][1] + ((point[11][1] - point[10][1]) / 3)) - (point[10][1] - ((point[10][1] - point[9][1]) / 3))) * (point[10][0] - (point[10][0] - ((point[10][0] - point[9][0]) / 3)))) / ((point[10][0] + ((point[11][0] - point[10][0]) / 3)) - (point[10][0] - ((point[10][0] - point[9][0]) / 3)))) + (point[10][1] - ((point[10][1] - point[9][1]) / 3)))) - (point[10][1] + ((point[11][1] - point[10][1]) / 3))));
		CPX11 = (point[11][0] - ((point[11][0] - point[10][0]) / 3));
		CPY11 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 3)) - (point[11][1] - ((point[11][1] - point[10][1]) / 3))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 3)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 3)) - (point[11][0] - ((point[11][0] - point[10][0]) / 3)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 3)))) - (point[11][1] - ((point[11][1] - point[10][1]) / 3))));

		DrawCurve(hdc, point[10][0], point[10][1], CPX10_1, CPY10_1, CPX11, CPY11, point[11][0], point[11][1]);
	}

	if (Click >= 12) {		// 점이 12개일때
		int CPX11_1, CPY11_1, CPX12, CPY12;

		CPX11_1 = (point[11][0] + ((point[12][0] - point[11][0]) / 3));
		CPY11_1 = (point[11][1] - (((((((point[11][1] + ((point[12][1] - point[11][1]) / 3)) - (point[11][1] - ((point[11][1] - point[10][1]) / 3))) * (point[11][0] - (point[11][0] - ((point[11][0] - point[10][0]) / 3)))) / ((point[11][0] + ((point[12][0] - point[11][0]) / 3)) - (point[11][0] - ((point[11][0] - point[10][0]) / 3)))) + (point[11][1] - ((point[11][1] - point[10][1]) / 3)))) - (point[11][1] + ((point[12][1] - point[11][1]) / 3))));
		CPX12 = (point[12][0] - ((point[12][0] - point[11][0]) / 3));
		CPY12 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 3)) - (point[12][1] - ((point[12][1] - point[11][1]) / 3))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 3)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 3)) - (point[12][0] - ((point[12][0] - point[11][0]) / 3)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 3)))) - (point[12][1] - ((point[12][1] - point[11][1]) / 3))));

		DrawCurve(hdc, point[11][0], point[11][1], CPX11_1, CPY11_1, CPX12, CPY12, point[12][0], point[12][1]);
	}

	if (Click >= 13) {		// 점이 13개일때
		int CPX12_1, CPY12_1, CPX13, CPY13;

		CPX12_1 = (point[12][0] + ((point[13][0] - point[12][0]) / 3));
		CPY12_1 = (point[12][1] - (((((((point[12][1] + ((point[13][1] - point[12][1]) / 3)) - (point[12][1] - ((point[12][1] - point[11][1]) / 3))) * (point[12][0] - (point[12][0] - ((point[12][0] - point[11][0]) / 3)))) / ((point[12][0] + ((point[13][0] - point[12][0]) / 3)) - (point[12][0] - ((point[12][0] - point[11][0]) / 3)))) + (point[12][1] - ((point[12][1] - point[11][1]) / 3)))) - (point[12][1] + ((point[13][1] - point[12][1]) / 3))));
		CPX13 = (point[13][0] - ((point[13][0] - point[12][0]) / 3));
		CPY13 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 3)) - (point[13][1] - ((point[13][1] - point[12][1]) / 3))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 3)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 3)) - (point[13][0] - ((point[13][0] - point[12][0]) / 3)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 3)))) - (point[13][1] - ((point[13][1] - point[12][1]) / 3))));

		DrawCurve(hdc, point[12][0], point[12][1], CPX12_1, CPY12_1, CPX13, CPY13, point[13][0], point[13][1]);
	}

	if (Click >= 14) {		// 점이 14개일때
		int CPX13_1, CPY13_1, CPX14, CPY14;

		CPX13_1 = (point[13][0] + ((point[14][0] - point[13][0]) / 3));
		CPY13_1 = (point[13][1] - (((((((point[13][1] + ((point[14][1] - point[13][1]) / 3)) - (point[13][1] - ((point[13][1] - point[12][1]) / 3))) * (point[13][0] - (point[13][0] - ((point[13][0] - point[12][0]) / 3)))) / ((point[13][0] + ((point[14][0] - point[13][0]) / 3)) - (point[13][0] - ((point[13][0] - point[12][0]) / 3)))) + (point[13][1] - ((point[13][1] - point[12][1]) / 3)))) - (point[13][1] + ((point[14][1] - point[13][1]) / 3))));
		CPX14 = (point[14][0] - ((point[14][0] - point[13][0]) / 3));
		CPY14 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 3)) - (point[14][1] - ((point[14][1] - point[13][1]) / 3))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 3)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 3)) - (point[14][0] - ((point[14][0] - point[13][0]) / 3)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 3)))) - (point[14][1] - ((point[14][1] - point[13][1]) / 3))));

		DrawCurve(hdc, point[13][0], point[13][1], CPX13_1, CPY13_1, CPX14, CPY14, point[14][0], point[14][1]);
	}

	if (Click >= 15) {		// 점이 15개일때
		int CPX14_1, CPY14_1, CPX15, CPY15;

		CPX14_1 = (point[14][0] + ((point[15][0] - point[14][0]) / 3));
		CPY14_1 = (point[14][1] - (((((((point[14][1] + ((point[15][1] - point[14][1]) / 3)) - (point[14][1] - ((point[14][1] - point[13][1]) / 3))) * (point[14][0] - (point[14][0] - ((point[14][0] - point[13][0]) / 3)))) / ((point[14][0] + ((point[15][0] - point[14][0]) / 3)) - (point[14][0] - ((point[14][0] - point[13][0]) / 3)))) + (point[14][1] - ((point[14][1] - point[13][1]) / 3)))) - (point[14][1] + ((point[15][1] - point[14][1]) / 3))));
		CPX15 = (point[15][0] - ((point[15][0] - point[14][0]) / 3));
		CPY15 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 3)) - (point[15][1] - ((point[15][1] - point[14][1]) / 3))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 3)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 3)) - (point[15][0] - ((point[15][0] - point[14][0]) / 3)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 3)))) - (point[15][1] - ((point[15][1] - point[14][1]) / 3))));

		DrawCurve(hdc, point[14][0], point[14][1], CPX14_1, CPY14_1, CPX15, CPY15, point[15][0], point[15][1]);
	}

	if (Click >= 16) {		// 점이 16개일때
		int CPX15_1, CPY15_1, CPX16, CPY16;

		CPX15_1 = (point[15][0] + ((point[16][0] - point[15][0]) / 3));
		CPY15_1 = (point[15][1] - (((((((point[15][1] + ((point[16][1] - point[15][1]) / 3)) - (point[15][1] - ((point[15][1] - point[14][1]) / 3))) * (point[15][0] - (point[15][0] - ((point[15][0] - point[14][0]) / 3)))) / ((point[15][0] + ((point[16][0] - point[15][0]) / 3)) - (point[15][0] - ((point[15][0] - point[14][0]) / 3)))) + (point[15][1] - ((point[15][1] - point[14][1]) / 3)))) - (point[15][1] + ((point[16][1] - point[15][1]) / 3))));
		CPX16 = (point[16][0] - ((point[16][0] - point[15][0]) / 3));
		CPY16 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 3)) - (point[16][1] - ((point[16][1] - point[15][1]) / 3))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 3)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 3)) - (point[16][0] - ((point[16][0] - point[15][0]) / 3)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 3)))) - (point[16][1] - ((point[16][1] - point[15][1]) / 3))));

		DrawCurve(hdc, point[15][0], point[15][1], CPX15_1, CPY15_1, CPX16, CPY16, point[16][0], point[16][1]);
	}

	if (Click >= 17) {		// 점이 17개일때
		int CPX16_1, CPY16_1, CPX17, CPY17;

		CPX16_1 = (point[16][0] + ((point[17][0] - point[16][0]) / 3));
		CPY16_1 = (point[16][1] - (((((((point[16][1] + ((point[17][1] - point[16][1]) / 3)) - (point[16][1] - ((point[16][1] - point[15][1]) / 3))) * (point[16][0] - (point[16][0] - ((point[16][0] - point[15][0]) / 3)))) / ((point[16][0] + ((point[17][0] - point[16][0]) / 3)) - (point[16][0] - ((point[16][0] - point[15][0]) / 3)))) + (point[16][1] - ((point[16][1] - point[15][1]) / 3)))) - (point[16][1] + ((point[17][1] - point[16][1]) / 3))));
		CPX17 = (point[17][0] - ((point[17][0] - point[16][0]) / 3));
		CPY17 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 3)) - (point[17][1] - ((point[17][1] - point[16][1]) / 3))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 3)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 3)) - (point[17][0] - ((point[17][0] - point[16][0]) / 3)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 3)))) - (point[17][1] - ((point[17][1] - point[16][1]) / 3))));

		DrawCurve(hdc, point[16][0], point[16][1], CPX16_1, CPY16_1, CPX17, CPY17, point[17][0], point[17][1]);
	}

	if (Click >= 18) {		// 점이 18개일때
		int CPX17_1, CPY17_1, CPX18, CPY18;

		CPX17_1 = (point[17][0] + ((point[18][0] - point[17][0]) / 3));
		CPY17_1 = (point[17][1] - (((((((point[17][1] + ((point[18][1] - point[17][1]) / 3)) - (point[17][1] - ((point[17][1] - point[16][1]) / 3))) * (point[17][0] - (point[17][0] - ((point[17][0] - point[16][0]) / 3)))) / ((point[17][0] + ((point[18][0] - point[17][0]) / 3)) - (point[17][0] - ((point[17][0] - point[16][0]) / 3)))) + (point[17][1] - ((point[17][1] - point[16][1]) / 3)))) - (point[17][1] + ((point[18][1] - point[17][1]) / 3))));
		CPX18 = (point[18][0] - ((point[18][0] - point[17][0]) / 3));
		CPY18 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 3)) - (point[18][1] - ((point[18][1] - point[17][1]) / 3))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 3)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 3)) - (point[18][0] - ((point[18][0] - point[17][0]) / 3)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 3)))) - (point[18][1] - ((point[18][1] - point[17][1]) / 3))));

		DrawCurve(hdc, point[17][0], point[17][1], CPX17_1, CPY17_1, CPX18, CPY18, point[18][0], point[18][1]);
	}

	if (Click >= 19) {		// 점이 19개일때
		int CPX18_1, CPY18_1, CPX19, CPY19;

		CPX18_1 = (point[18][0] + ((point[19][0] - point[18][0]) / 3));
		CPY18_1 = (point[18][1] - (((((((point[18][1] + ((point[19][1] - point[18][1]) / 3)) - (point[18][1] - ((point[18][1] - point[17][1]) / 3))) * (point[18][0] - (point[18][0] - ((point[18][0] - point[17][0]) / 3)))) / ((point[18][0] + ((point[19][0] - point[18][0]) / 3)) - (point[18][0] - ((point[18][0] - point[17][0]) / 3)))) + (point[18][1] - ((point[18][1] - point[17][1]) / 3)))) - (point[18][1] + ((point[19][1] - point[18][1]) / 3))));
		CPX19 = (point[19][0] - ((point[19][0] - point[18][0]) / 3));
		CPY19 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 3)) - (point[19][1] - ((point[19][1] - point[18][1]) / 3))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 3)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 3)) - (point[19][0] - ((point[19][0] - point[18][0]) / 3)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 3)))) - (point[19][1] - ((point[19][1] - point[18][1]) / 3))));

		DrawCurve(hdc, point[18][0], point[18][1], CPX18_1, CPY18_1, CPX19, CPY19, point[19][0], point[19][1]);
	}

	if (Click >= 20) {		// 점이 20개일때
		int CPX19_1, CPY19_1, CPX20, CPY20;

		CPX19_1 = (point[19][0] + ((point[20][0] - point[19][0]) / 3));
		CPY19_1 = (point[19][1] - (((((((point[19][1] + ((point[20][1] - point[19][1]) / 3)) - (point[19][1] - ((point[19][1] - point[18][1]) / 3))) * (point[19][0] - (point[19][0] - ((point[19][0] - point[18][0]) / 3)))) / ((point[19][0] + ((point[20][0] - point[19][0]) / 3)) - (point[19][0] - ((point[19][0] - point[18][0]) / 3)))) + (point[19][1] - ((point[19][1] - point[18][1]) / 3)))) - (point[19][1] + ((point[20][1] - point[19][1]) / 3))));
		CPX20 = (point[20][0] - ((point[20][0] - point[19][0]) / 3));
		CPY20 = (point[20][1] - (((((((point[20][1] + ((point[21][1] - point[20][1]) / 3)) - (point[20][1] - ((point[20][1] - point[19][1]) / 3))) * (point[20][0] - (point[20][0] - ((point[20][0] - point[19][0]) / 3)))) / ((point[20][0] + ((point[21][0] - point[20][0]) / 3)) - (point[20][0] - ((point[20][0] - point[19][0]) / 3)))) + (point[20][1] - ((point[20][1] - point[19][1]) / 3)))) - (point[20][1] - ((point[20][1] - point[19][1]) / 3))));

		DrawCurve(hdc, point[19][0], point[19][1], CPX19_1, CPY19_1, CPX20, CPY20, point[20][0], point[20][1]);
	}

	ReleaseDC(hWnd, hdc);

}


// 보조선 (점 5개까지만 적용)
void L2Line(HWND hWnd)				// 보조선
{
	hdc = GetDC(hWnd);
	HPEN BluePen = CreatePen(PS_SOLID, 1, RGB(153, 204, 255));
	HGDIOBJ OldBluePen = SelectObject(hdc, BluePen);

	if (Click == 0) {			// 점이 0개일때

	}

	if (Click >= 1) {		// 점이 1개일때
		MoveToEx(hdc, point[0][0], point[0][1], NULL);
		LineTo(hdc, point[1][0], point[1][1]);
		MoveToEx(hdc, point[1][0], point[1][1], NULL);
		LineTo(hdc, point[2][0], point[2][1]);

		Ellipse(hdc, (point[1][0] - ((point[1][0] - point[0][0]) / 3)) - 3, (point[1][1] - ((point[1][1] - point[0][1]) / 3)) - 3, (point[1][0] - ((point[1][0] - point[0][0]) / 3)) + 3, (point[1][1] - ((point[1][1] - point[0][1]) / 3)) + 3);
		Ellipse(hdc, (point[1][0] + ((point[2][0] - point[1][0]) / 3)) - 3, (point[1][1] + ((point[2][1] - point[1][1]) / 3)) - 3, (point[1][0] + ((point[2][0] - point[1][0]) / 3)) + 3, (point[1][1] + ((point[2][1] - point[1][1]) / 3)) + 3);
		MoveToEx(hdc, (point[1][0] - ((point[1][0] - point[0][0]) / 3)), (point[1][1] - ((point[1][1] - point[0][1]) / 3)), NULL);
		LineTo(hdc, (point[1][0] + ((point[2][0] - point[1][0]) / 3)), (point[1][1] + ((point[2][1] - point[1][1]) / 3)));

		Ellipse(hdc, point[1][0] - 3,
			((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3))) - 3,
			point[1][0] + 3,
			((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3))) + 3);

		MoveToEx(hdc, (point[1][0] - ((point[1][0] - point[0][0]) / 3)), (point[1][1] + ((point[1][1] - ((point[1][1] - point[0][1]) / 3)) - ((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3))))), NULL);
		LineTo(hdc, (point[1][0] + ((point[2][0] - point[1][0]) / 3)), (point[1][1] - (((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3))) - (point[1][1] + ((point[2][1] - point[1][1]) / 3)))));

	}

	if (Click >= 2) {		// 점이 2개일때
		MoveToEx(hdc, point[1][0], point[1][1], NULL);
		LineTo(hdc, point[2][0], point[2][1]);
		MoveToEx(hdc, point[2][0], point[2][1], NULL);
		LineTo(hdc, point[3][0], point[3][1]);

		Ellipse(hdc, (point[2][0] - ((point[2][0] - point[1][0]) / 3)) - 3, (point[2][1] - ((point[2][1] - point[1][1]) / 3)) - 3, (point[2][0] - ((point[2][0] - point[1][0]) / 3)) + 3, (point[2][1] - ((point[2][1] - point[1][1]) / 3)) + 3);
		Ellipse(hdc, (point[2][0] + ((point[3][0] - point[2][0]) / 3)) - 3, (point[2][1] + ((point[3][1] - point[2][1]) / 3)) - 3, (point[2][0] + ((point[3][0] - point[2][0]) / 3)) + 3, (point[2][1] + ((point[3][1] - point[2][1]) / 3)) + 3);
		MoveToEx(hdc, (point[2][0] - ((point[2][0] - point[1][0]) / 3)), (point[2][1] - ((point[2][1] - point[1][1]) / 3)), NULL);
		LineTo(hdc, (point[2][0] + ((point[3][0] - point[2][0]) / 3)), (point[2][1] + ((point[3][1] - point[2][1]) / 3)));

		Ellipse(hdc, point[2][0] - 3,
			((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3))) - 3,
			point[2][0] + 3,
			((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3))) + 3);

		MoveToEx(hdc, (point[2][0] - ((point[2][0] - point[1][0]) / 3)), (point[2][1] + ((point[2][1] - ((point[2][1] - point[1][1]) / 3)) - ((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3))))), NULL);
		LineTo(hdc, (point[2][0] + ((point[3][0] - point[2][0]) / 3)), (point[2][1] - (((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3))) - (point[2][1] + ((point[3][1] - point[2][1]) / 3)))));

	}

	if (Click >= 3) {		// 점이 3개 일때
		MoveToEx(hdc, point[2][0], point[2][1], NULL);
		LineTo(hdc, point[3][0], point[3][1]);
		MoveToEx(hdc, point[3][0], point[3][1], NULL);
		LineTo(hdc, point[4][0], point[4][1]);

		Ellipse(hdc, (point[3][0] - ((point[3][0] - point[2][0]) / 3)) - 3, (point[3][1] - ((point[3][1] - point[2][1]) / 3)) - 3, (point[3][0] - ((point[3][0] - point[2][0]) / 3)) + 3, (point[3][1] - ((point[3][1] - point[2][1]) / 3)) + 3);
		Ellipse(hdc, (point[3][0] + ((point[4][0] - point[3][0]) / 3)) - 3, (point[3][1] + ((point[4][1] - point[3][1]) / 3)) - 3, (point[3][0] + ((point[4][0] - point[3][0]) / 3)) + 3, (point[3][1] + ((point[4][1] - point[3][1]) / 3)) + 3);
		MoveToEx(hdc, (point[3][0] - ((point[3][0] - point[2][0]) / 3)), (point[3][1] - ((point[3][1] - point[2][1]) / 3)), NULL);
		LineTo(hdc, (point[3][0] + ((point[4][0] - point[3][0]) / 3)), (point[3][1] + ((point[4][1] - point[3][1]) / 3)));

		Ellipse(hdc, point[3][0] - 3,
			((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3))) - 3,
			point[3][0] + 3,
			((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3))) + 3);

		MoveToEx(hdc, (point[3][0] - ((point[3][0] - point[2][0]) / 3)), (point[3][1] + ((point[3][1] - ((point[3][1] - point[2][1]) / 3)) - ((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3))))), NULL);
		LineTo(hdc, (point[3][0] + ((point[4][0] - point[3][0]) / 3)), (point[3][1] - (((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3))) - (point[3][1] + ((point[4][1] - point[3][1]) / 3)))));
	}

	if (Click >= 4) {		// 점이 4개 일때
		MoveToEx(hdc, point[3][0], point[3][1], NULL);
		LineTo(hdc, point[4][0], point[4][1]);
		MoveToEx(hdc, point[4][0], point[4][1], NULL);
		LineTo(hdc, point[5][0], point[5][1]);

		Ellipse(hdc, (point[4][0] - ((point[4][0] - point[3][0]) / 3)) - 3, (point[4][1] - ((point[4][1] - point[3][1]) / 3)) - 3, (point[4][0] - ((point[4][0] - point[3][0]) / 3)) + 3, (point[4][1] - ((point[4][1] - point[3][1]) / 3)) + 3);
		Ellipse(hdc, (point[4][0] + ((point[5][0] - point[4][0]) / 3)) - 3, (point[4][1] + ((point[5][1] - point[4][1]) / 3)) - 3, (point[4][0] + ((point[5][0] - point[4][0]) / 3)) + 3, (point[4][1] + ((point[5][1] - point[4][1]) / 3)) + 3);
		MoveToEx(hdc, (point[4][0] - ((point[4][0] - point[3][0]) / 3)), (point[4][1] - ((point[4][1] - point[3][1]) / 3)), NULL);
		LineTo(hdc, (point[4][0] + ((point[5][0] - point[4][0]) / 3)), (point[4][1] + ((point[5][1] - point[4][1]) / 3)));

		Ellipse(hdc, point[4][0] - 3,
			((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3))) - 3,
			point[4][0] + 3,
			((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3))) + 3);

		MoveToEx(hdc, (point[4][0] - ((point[4][0] - point[3][0]) / 3)), (point[4][1] + ((point[4][1] - ((point[4][1] - point[3][1]) / 3)) - ((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3))))), NULL);
		LineTo(hdc, (point[4][0] + ((point[5][0] - point[4][0]) / 3)), (point[4][1] - (((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3))) - (point[4][1] + ((point[5][1] - point[4][1]) / 3)))));

	}

	if (Click >= 5) {		// 점이 5개 일때
		MoveToEx(hdc, point[4][0], point[4][1], NULL);
		LineTo(hdc, point[5][0], point[5][1]);
		MoveToEx(hdc, point[5][0], point[5][1], NULL);
		LineTo(hdc, point[6][0], point[6][1]);

		Ellipse(hdc, (point[5][0] - ((point[5][0] - point[4][0]) / 3)) - 3, (point[5][1] - ((point[5][1] - point[4][1]) / 3)) - 3, (point[5][0] - ((point[5][0] - point[4][0]) / 3)) + 3, (point[5][1] - ((point[5][1] - point[4][1]) / 3)) + 3);
		Ellipse(hdc, (point[5][0] + ((point[6][0] - point[5][0]) / 3)) - 3, (point[5][1] + ((point[6][1] - point[5][1]) / 3)) - 3, (point[5][0] + ((point[6][0] - point[5][0]) / 3)) + 3, (point[5][1] + ((point[6][1] - point[5][1]) / 3)) + 3);
		MoveToEx(hdc, (point[5][0] - ((point[5][0] - point[4][0]) / 3)), (point[5][1] - ((point[5][1] - point[4][1]) / 3)), NULL);
		LineTo(hdc, (point[5][0] + ((point[6][0] - point[5][0]) / 3)), (point[5][1] + ((point[6][1] - point[5][1]) / 3)));

		Ellipse(hdc, point[5][0] - 3,
			((((point[5][1] + ((point[6][1] - point[5][1]) / 3)) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 3))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 3)) - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 3))) - 3,
			point[5][0] + 3,
			((((point[5][1] + ((point[6][1] - point[5][1]) / 3)) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 3))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 3)) - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 3))) + 3);

		MoveToEx(hdc, (point[5][0] - ((point[5][0] - point[4][0]) / 3)), (point[5][1] + ((point[5][1] - ((point[5][1] - point[4][1]) / 3)) - ((((point[5][1] + ((point[6][1] - point[5][1]) / 3)) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 3))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 3)) - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 3))))), NULL);
		LineTo(hdc, (point[5][0] + ((point[6][0] - point[5][0]) / 3)), (point[5][1] - (((((point[5][1] + ((point[6][1] - point[5][1]) / 3)) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 3))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 3)) - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 3))) - (point[5][1] + ((point[6][1] - point[5][1]) / 3)))));
	}


	SelectObject(hdc, OldBluePen);
	DeleteObject(BluePen);
	ReleaseDC(hWnd, hdc);
}


// 제어점 (점 5개까지만 적용)
void C2Point(HWND hWnd) {
	hdc = GetDC(hWnd);
	HPEN PinkPen = CreatePen(PS_SOLID, 1, RGB(255, 0, 255));
	HGDIOBJ OldPinkPen = SelectObject(hdc, PinkPen);


	if (Click >= 1) {		// 점이 1개일때
		Ellipse(hdc, (point[1][0] - ((point[1][0] - point[0][0]) / 3)) - 3,
			(point[1][1] + ((point[1][1] - ((point[1][1] - point[0][1]) / 3)) - ((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3))))) - 3,
			(point[1][0] - ((point[1][0] - point[0][0]) / 3)) + 3,
			(point[1][1] + ((point[1][1] - ((point[1][1] - point[0][1]) / 3)) - ((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3))))) + 3);
		Ellipse(hdc, (point[1][0] + ((point[2][0] - point[1][0]) / 3)) - 3,
			(point[1][1] - (((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3))) - (point[1][1] + ((point[2][1] - point[1][1]) / 3)))) - 3,
			(point[1][0] + ((point[2][0] - point[1][0]) / 3)) + 3,
			(point[1][1] - (((((point[1][1] + ((point[2][1] - point[1][1]) / 3)) - (point[1][1] - ((point[1][1] - point[0][1]) / 3))) * (point[1][0] - (point[1][0] - ((point[1][0] - point[0][0]) / 3))) / ((point[1][0] + ((point[2][0] - point[1][0]) / 3)) - (point[1][0] - ((point[1][0] - point[0][0]) / 3)))) + (point[1][1] - ((point[1][1] - point[0][1]) / 3))) - (point[1][1] + ((point[2][1] - point[1][1]) / 3)))) + 3);

	}

	if (Click >= 2) {		// 점이 2개일때
		Ellipse(hdc, (point[2][0] - ((point[2][0] - point[1][0]) / 3)) - 3,
			(point[2][1] + ((point[2][1] - ((point[2][1] - point[1][1]) / 3)) - ((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3))))) - 3,
			(point[2][0] - ((point[2][0] - point[1][0]) / 3)) + 3,
			(point[2][1] + ((point[2][1] - ((point[2][1] - point[1][1]) / 3)) - ((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3))))) + 3);
		Ellipse(hdc, (point[2][0] + ((point[3][0] - point[2][0]) / 3)) - 3,
			(point[2][1] - (((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3))) - (point[2][1] + ((point[3][1] - point[2][1]) / 3)))) - 3,
			(point[2][0] + ((point[3][0] - point[2][0]) / 3)) + 3,
			(point[2][1] - (((((point[2][1] + ((point[3][1] - point[2][1]) / 3)) - (point[2][1] - ((point[2][1] - point[1][1]) / 3))) * (point[2][0] - (point[2][0] - ((point[2][0] - point[1][0]) / 3))) / ((point[2][0] + ((point[3][0] - point[2][0]) / 3)) - (point[2][0] - ((point[2][0] - point[1][0]) / 3)))) + (point[2][1] - ((point[2][1] - point[1][1]) / 3))) - (point[2][1] + ((point[3][1] - point[2][1]) / 3)))) + 3);

	}

	if (Click >= 3) {		// 점이 3개 일때
		Ellipse(hdc, (point[3][0] - ((point[3][0] - point[2][0]) / 3)) - 3,
			(point[3][1] + ((point[3][1] - ((point[3][1] - point[2][1]) / 3)) - ((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3))))) - 3,
			(point[3][0] - ((point[3][0] - point[2][0]) / 3)) + 3,
			(point[3][1] + ((point[3][1] - ((point[3][1] - point[2][1]) / 3)) - ((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3))))) + 3);
		Ellipse(hdc, (point[3][0] + ((point[4][0] - point[3][0]) / 3)) - 3,
			(point[3][1] - (((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3))) - (point[3][1] + ((point[4][1] - point[3][1]) / 3)))) - 3,
			(point[3][0] + ((point[4][0] - point[3][0]) / 3)) + 3,
			(point[3][1] - (((((point[3][1] + ((point[4][1] - point[3][1]) / 3)) - (point[3][1] - ((point[3][1] - point[2][1]) / 3))) * (point[3][0] - (point[3][0] - ((point[3][0] - point[2][0]) / 3))) / ((point[3][0] + ((point[4][0] - point[3][0]) / 3)) - (point[3][0] - ((point[3][0] - point[2][0]) / 3)))) + (point[3][1] - ((point[3][1] - point[2][1]) / 3))) - (point[3][1] + ((point[4][1] - point[3][1]) / 3)))) + 3);

	}

	if (Click >= 4) {		// 점이 4개 일때
		Ellipse(hdc, (point[4][0] - ((point[4][0] - point[3][0]) / 3)) - 3,
			(point[4][1] + ((point[4][1] - ((point[4][1] - point[3][1]) / 3)) - ((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3))))) - 3,
			(point[4][0] - ((point[4][0] - point[3][0]) / 3)) + 3,
			(point[4][1] + ((point[4][1] - ((point[4][1] - point[3][1]) / 3)) - ((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3))))) + 3);
		Ellipse(hdc, (point[4][0] + ((point[5][0] - point[4][0]) / 3)) - 3,
			(point[4][1] - (((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3))) - (point[4][1] + ((point[5][1] - point[4][1]) / 3)))) - 3,
			(point[4][0] + ((point[5][0] - point[4][0]) / 3)) + 3,
			(point[4][1] - (((((point[4][1] + ((point[5][1] - point[4][1]) / 3)) - (point[4][1] - ((point[4][1] - point[3][1]) / 3))) * (point[4][0] - (point[4][0] - ((point[4][0] - point[3][0]) / 3))) / ((point[4][0] + ((point[5][0] - point[4][0]) / 3)) - (point[4][0] - ((point[4][0] - point[3][0]) / 3)))) + (point[4][1] - ((point[4][1] - point[3][1]) / 3))) - (point[4][1] + ((point[5][1] - point[4][1]) / 3)))) + 3);

	}


	if (Click >= 5) {		// 점이 5개 일때
		Ellipse(hdc, (point[5][0] - ((point[5][0] - point[4][0]) / 3)) - 3,
			(point[5][1] + ((point[5][1] - ((point[5][1] - point[4][1]) / 3)) - ((((point[5][1] + ((point[6][1] - point[5][1]) / 3)) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 3))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 3)) - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 3))))) - 3,
			(point[5][0] - ((point[5][0] - point[4][0]) / 3)) + 3,
			(point[5][1] + ((point[5][1] - ((point[5][1] - point[4][1]) / 3)) - ((((point[5][1] + ((point[6][1] - point[5][1]) / 3)) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 3))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 3)) - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 3))))) + 3);
		Ellipse(hdc, (point[5][0] + ((point[6][0] - point[5][0]) / 3)) - 3,
			(point[5][1] - (((((point[5][1] + ((point[6][1] - point[5][1]) / 3)) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 3))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 3)) - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 3))) - (point[5][1] + ((point[6][1] - point[5][1]) / 3)))) - 3,
			(point[5][0] + ((point[6][0] - point[5][0]) / 3)) + 3,
			(point[5][1] - (((((point[5][1] + ((point[6][1] - point[5][1]) / 3)) - (point[5][1] - ((point[5][1] - point[4][1]) / 3))) * (point[5][0] - (point[5][0] - ((point[5][0] - point[4][0]) / 3))) / ((point[5][0] + ((point[6][0] - point[5][0]) / 3)) - (point[5][0] - ((point[5][0] - point[4][0]) / 3)))) + (point[5][1] - ((point[5][1] - point[4][1]) / 3))) - (point[5][1] + ((point[6][1] - point[5][1]) / 3)))) + 3);

	}


	SelectObject(hdc, OldPinkPen);
	DeleteObject(PinkPen);
	ReleaseDC(hWnd, hdc);
}





// 2분의 1일때 (곡선, 보조선, 제어점)
// 곡선

void C3Line(HWND hWnd) {				// 곡선
	hdc = GetDC(hWnd);

	// 오른쪽 끝 선에 대한 커브
	if (Click == 1) {
		int CPX1_1, CPY1_1;

		CPX1_1 = ((point[1][0] + point[2][0]) / 2);
		CPY1_1 = (point[1][1] - ((((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2)) - ((point[1][1] + point[2][1]) / 2)));

		DrawSideCurve(hdc, point[1][0], point[1][1], CPX1_1, CPY1_1, point[2][0], point[2][1]);
	}

	else if (Click == 2) {
		int CPX2_1, CPY2_1;

		CPX2_1 = ((point[2][0] + point[3][0]) / 2);
		CPY2_1 = (point[2][1] - ((((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2)) - ((point[2][1] + point[3][1]) / 2)));

		DrawSideCurve(hdc, point[2][0], point[2][1], CPX2_1, CPY2_1, point[3][0], point[3][1]);
	}

	else if (Click == 3) {
		int CPX3_1, CPY3_1;

		CPX3_1 = ((point[3][0] + point[4][0]) / 2);
		CPY3_1 = (point[3][1] - ((((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2)) - ((point[3][1] + point[4][1]) / 2)));

		DrawSideCurve(hdc, point[3][0], point[3][1], CPX3_1, CPY3_1, point[4][0], point[4][1]);
	}

	else if (Click == 4) {
		int CPX4_1, CPY4_1;

		CPX4_1 = ((point[4][0] + point[5][0]) / 2);
		CPY4_1 = (point[4][1] - ((((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2)) - ((point[4][1] + point[5][1]) / 2)));

		DrawSideCurve(hdc, point[4][0], point[4][1], CPX4_1, CPY4_1, point[5][0], point[5][1]);
	}

	else if (Click == 5) {
		int CPX5_1, CPY5_1;

		CPX5_1 = ((point[5][0] + point[6][0]) / 2);
		CPY5_1 = (point[5][1] - ((((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2)) - ((point[5][1] + point[6][1]) / 2)));

		DrawSideCurve(hdc, point[5][0], point[5][1], CPX5_1, CPY5_1, point[6][0], point[6][1]);
	}

	else if (Click == 6) {
		int CPX6_1, CPY6_1;

		CPX6_1 = ((point[6][0] + point[7][0]) / 2);
		CPY6_1 = (point[6][1] - ((((((point[6][1] + point[7][1]) / 2) - ((point[5][1] + point[6][1]) / 2)) * (point[6][0] - ((point[5][0] + point[6][0]) / 2)) / (((point[6][0] + point[7][0]) / 2) - ((point[5][0] + point[6][0]) / 2))) + ((point[5][1] + point[6][1]) / 2)) - ((point[6][1] + point[7][1]) / 2)));

		DrawSideCurve(hdc, point[6][0], point[6][1], CPX6_1, CPY6_1, point[7][0], point[7][1]);
	}

	else if (Click == 7) {
		int CPX7_1, CPY7_1;

		CPX7_1 = ((point[7][0] + point[8][0]) / 2);
		CPY7_1 = (point[7][1] - ((((((point[7][1] + point[8][1]) / 2) - ((point[6][1] + point[7][1]) / 2)) * (point[7][0] - ((point[6][0] + point[7][0]) / 2)) / (((point[7][0] + point[8][0]) / 2) - ((point[6][0] + point[7][0]) / 2))) + ((point[6][1] + point[7][1]) / 2)) - ((point[7][1] + point[8][1]) / 2)));

		DrawSideCurve(hdc, point[7][0], point[7][1], CPX7_1, CPY7_1, point[8][0], point[8][1]);
	}

	else if (Click == 8) {
		int CPX8_1, CPY8_1;

		CPX8_1 = ((point[8][0] + point[9][0]) / 2);
		CPY8_1 = (point[8][1] - ((((((point[8][1] + point[9][1]) / 2) - ((point[7][1] + point[8][1]) / 2)) * (point[8][0] - ((point[7][0] + point[8][0]) / 2)) / (((point[8][0] + point[9][0]) / 2) - ((point[7][0] + point[8][0]) / 2))) + ((point[7][1] + point[8][1]) / 2)) - ((point[8][1] + point[9][1]) / 2)));

		DrawSideCurve(hdc, point[8][0], point[8][1], CPX8_1, CPY8_1, point[9][0], point[9][1]);
	}

	else if (Click == 9) {
		int CPX9_1, CPY9_1;

		CPX9_1 = ((point[9][0] + point[10][0]) / 2);
		CPY9_1 = (point[9][1] - ((((((point[9][1] + point[10][1]) / 2) - ((point[8][1] + point[9][1]) / 2)) * (point[9][0] - ((point[8][0] + point[9][0]) / 2)) / (((point[9][0] + point[10][0]) / 2) - ((point[8][0] + point[9][0]) / 2))) + ((point[8][1] + point[9][1]) / 2)) - ((point[9][1] + point[10][1]) / 2)));

		DrawSideCurve(hdc, point[9][0], point[9][1], CPX9_1, CPY9_1, point[10][0], point[10][1]);
	}

	else if (Click == 10) {
		int CPX10_1, CPY10_1;

		CPX10_1 = ((point[10][0] + point[11][0]) / 2);
		CPY10_1 = (point[10][1] - ((((((point[10][1] + point[11][1]) / 2) - ((point[9][1] + point[10][1]) / 2)) * (point[10][0] - ((point[9][0] + point[10][0]) / 2)) / (((point[10][0] + point[11][0]) / 2) - ((point[9][0] + point[10][0]) / 2))) + ((point[9][1] + point[10][1]) / 2)) - ((point[10][1] + point[11][1]) / 2)));

		DrawSideCurve(hdc, point[10][0], point[10][1], CPX10_1, CPY10_1, point[11][0], point[11][1]);
	}

	else if (Click == 11) {
		int CPX11_1, CPY11_1;

		CPX11_1 = ((point[11][0] + point[12][0]) / 2);
		CPY11_1 = (point[11][1] - ((((((point[11][1] + point[12][1]) / 2) - ((point[10][1] + point[11][1]) / 2)) * (point[11][0] - ((point[10][0] + point[11][0]) / 2)) / (((point[11][0] + point[12][0]) / 2) - ((point[10][0] + point[11][0]) / 2))) + ((point[10][1] + point[11][1]) / 2)) - ((point[11][1] + point[12][1]) / 2)));

		DrawSideCurve(hdc, point[11][0], point[11][1], CPX11_1, CPY11_1, point[12][0], point[12][1]);
	}

	else if (Click == 12) {
		int CPX12_1, CPY12_1;

		CPX12_1 = ((point[12][0] + point[13][0]) / 2);
		CPY12_1 = (point[12][1] - ((((((point[12][1] + point[13][1]) / 2) - ((point[11][1] + point[12][1]) / 2)) * (point[12][0] - ((point[11][0] + point[12][0]) / 2)) / (((point[12][0] + point[13][0]) / 2) - ((point[11][0] + point[12][0]) / 2))) + ((point[11][1] + point[12][1]) / 2)) - ((point[12][1] + point[13][1]) / 2)));

		DrawSideCurve(hdc, point[12][0], point[12][1], CPX12_1, CPY12_1, point[13][0], point[13][1]);
	}

	else if (Click == 13) {
		int CPX13_1, CPY13_1;

		CPX13_1 = ((point[13][0] + point[14][0]) / 2);
		CPY13_1 = (point[13][1] - ((((((point[13][1] + point[14][1]) / 2) - ((point[12][1] + point[13][1]) / 2)) * (point[13][0] - ((point[12][0] + point[13][0]) / 2)) / (((point[13][0] + point[14][0]) / 2) - ((point[12][0] + point[13][0]) / 2))) + ((point[12][1] + point[13][1]) / 2)) - ((point[13][1] + point[14][1]) / 2)));

		DrawSideCurve(hdc, point[13][0], point[13][1], CPX13_1, CPY13_1, point[14][0], point[14][1]);
	}

	else if (Click == 14) {
		int CPX14_1, CPY14_1;

		CPX14_1 = ((point[14][0] + point[15][0]) / 2);
		CPY14_1 = (point[14][1] - ((((((point[14][1] + point[15][1]) / 2) - ((point[13][1] + point[14][1]) / 2)) * (point[14][0] - ((point[13][0] + point[14][0]) / 2)) / (((point[14][0] + point[15][0]) / 2) - ((point[13][0] + point[14][0]) / 2))) + ((point[13][1] + point[14][1]) / 2)) - ((point[14][1] + point[15][1]) / 2)));

		DrawSideCurve(hdc, point[14][0], point[14][1], CPX14_1, CPY14_1, point[15][0], point[15][1]);
	}

	else if (Click == 15) {
		int CPX15_1, CPY15_1;

		CPX15_1 = ((point[15][0] + point[16][0]) / 2);
		CPY15_1 = (point[15][1] - ((((((point[15][1] + point[16][1]) / 2) - ((point[14][1] + point[15][1]) / 2)) * (point[15][0] - ((point[14][0] + point[15][0]) / 2)) / (((point[15][0] + point[16][0]) / 2) - ((point[14][0] + point[15][0]) / 2))) + ((point[14][1] + point[15][1]) / 2)) - ((point[15][1] + point[16][1]) / 2)));

		DrawSideCurve(hdc, point[15][0], point[15][1], CPX15_1, CPY15_1, point[16][0], point[16][1]);
	}

	else if (Click == 16) {
		int CPX16_1, CPY16_1;

		CPX16_1 = ((point[16][0] + point[17][0]) / 2);
		CPY16_1 = (point[16][1] - ((((((point[16][1] + point[17][1]) / 2) - ((point[15][1] + point[16][1]) / 2)) * (point[16][0] - ((point[15][0] + point[16][0]) / 2)) / (((point[16][0] + point[17][0]) / 2) - ((point[15][0] + point[16][0]) / 2))) + ((point[15][1] + point[16][1]) / 2)) - ((point[16][1] + point[17][1]) / 2)));

		DrawSideCurve(hdc, point[16][0], point[16][1], CPX16_1, CPY16_1, point[17][0], point[17][1]);
	}

	else if (Click == 17) {
		int CPX17_1, CPY17_1;

		CPX17_1 = ((point[17][0] + point[18][0]) / 2);
		CPY17_1 = (point[17][1] - ((((((point[17][1] + point[18][1]) / 2) - ((point[16][1] + point[17][1]) / 2)) * (point[17][0] - ((point[16][0] + point[17][0]) / 2)) / (((point[17][0] + point[18][0]) / 2) - ((point[16][0] + point[17][0]) / 2))) + ((point[16][1] + point[17][1]) / 2)) - ((point[17][1] + point[18][1]) / 2)));

		DrawSideCurve(hdc, point[17][0], point[17][1], CPX17_1, CPY17_1, point[18][0], point[18][1]);
	}

	else if (Click == 18) {
		int CPX18_1, CPY18_1;

		CPX18_1 = ((point[18][0] + point[19][0]) / 2);
		CPY18_1 = (point[18][1] - ((((((point[18][1] + point[19][1]) / 2) - ((point[17][1] + point[18][1]) / 2)) * (point[18][0] - ((point[17][0] + point[18][0]) / 2)) / (((point[18][0] + point[19][0]) / 2) - ((point[17][0] + point[18][0]) / 2))) + ((point[17][1] + point[18][1]) / 2)) - ((point[18][1] + point[19][1]) / 2)));

		DrawSideCurve(hdc, point[18][0], point[18][1], CPX18_1, CPY18_1, point[19][0], point[19][1]);
	}

	else if (Click == 19) {
		int CPX19_1, CPY19_1;

		CPX19_1 = ((point[19][0] + point[20][0]) / 2);
		CPY19_1 = (point[19][1] - ((((((point[19][1] + point[20][1]) / 2) - ((point[18][1] + point[19][1]) / 2)) * (point[19][0] - ((point[18][0] + point[19][0]) / 2)) / (((point[19][0] + point[20][0]) / 2) - ((point[18][0] + point[19][0]) / 2))) + ((point[18][1] + point[19][1]) / 2)) - ((point[19][1] + point[20][1]) / 2)));

		DrawSideCurve(hdc, point[19][0], point[19][1], CPX19_1, CPY19_1, point[20][0], point[20][1]);
	}

	else {
	}





	// 오른쪽 끝을 제외한 점에 대한 커브
	if (Click == 0) {		// 점이 0개일때
		MoveToEx(hdc, point[0][0], point[0][1], NULL);
		LineTo(hdc, point[1][0], point[1][1]);
	}

	if (Click >= 1) {		// 점이 1개일때
		int CPX1, CPY1;

		CPX1 = ((point[0][0] + point[1][0]) / 2);
		CPY1 = (point[1][1] + (((point[0][1] + point[1][1]) / 2) - (((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2))));

		DrawSideCurve(hdc, point[0][0], point[0][1], CPX1, CPY1, point[1][0], point[1][1]);
	}

	if (Click >= 2) {		// 점이 2개일때
		int CPX1_1, CPY1_1, CPX2, CPY2;

		CPX1_1 = ((point[1][0] + point[2][0]) / 2);
		CPY1_1 = (point[1][1] - ((((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2)) - ((point[1][1] + point[2][1]) / 2)));
		CPX2 = ((point[1][0] + point[2][0]) / 2);
		CPY2 = (point[2][1] + (((point[1][1] + point[2][1]) / 2) - (((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2))));

		DrawCurve(hdc, point[1][0], point[1][1], CPX1_1, CPY1_1, CPX2, CPY2, point[2][0], point[2][1]);
	}

	if (Click >= 3) {		// 점이 3개일때
		int CPX2_1, CPY2_1, CPX3, CPY3;

		CPX2_1 = ((point[2][0] + point[3][0]) / 2);
		CPY2_1 = (point[2][1] - ((((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2)) - ((point[2][1] + point[3][1]) / 2)));
		CPX3 = ((point[2][0] + point[3][0]) / 2);
		CPY3 = (point[3][1] + (((point[2][1] + point[3][1]) / 2) - (((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2))));

		DrawCurve(hdc, point[2][0], point[2][1], CPX2_1, CPY2_1, CPX3, CPY3, point[3][0], point[3][1]);
	}

	if (Click >= 4) {		// 점이 4개일때
		int CPX3_1, CPY3_1, CPX4, CPY4;

		CPX3_1 = ((point[3][0] + point[4][0]) / 2);
		CPY3_1 = (point[3][1] - ((((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2)) - ((point[3][1] + point[4][1]) / 2)));
		CPX4 = ((point[3][0] + point[4][0]) / 2);
		CPY4 = (point[4][1] + (((point[3][1] + point[4][1]) / 2) - (((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2))));

		DrawCurve(hdc, point[3][0], point[3][1], CPX3_1, CPY3_1, CPX4, CPY4, point[4][0], point[4][1]);
	}

	if (Click >= 5) {		// 점이 5개일때
		int CPX4_1, CPY4_1, CPX5, CPY5;

		CPX4_1 = ((point[4][0] + point[5][0]) / 2);
		CPY4_1 = (point[4][1] - ((((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2)) - ((point[4][1] + point[5][1]) / 2)));
		CPX5 = ((point[4][0] + point[5][0]) / 2);
		CPY5 = (point[5][1] + (((point[4][1] + point[5][1]) / 2) - (((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2))));

		DrawCurve(hdc, point[4][0], point[4][1], CPX4_1, CPY4_1, CPX5, CPY5, point[5][0], point[5][1]);
	}


	if (Click >= 6) {		// 점이 6개일때
		int CPX5_1, CPY5_1, CPX6, CPY6;

		CPX5_1 = ((point[5][0] + point[6][0]) / 2);
		CPY5_1 = (point[5][1] - ((((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2)) - ((point[5][1] + point[6][1]) / 2)));
		CPX6 = ((point[5][0] + point[6][0]) / 2);
		CPY6 = (point[6][1] + (((point[5][1] + point[6][1]) / 2) - (((((point[6][1] + point[7][1]) / 2) - ((point[5][1] + point[6][1]) / 2)) * (point[6][0] - ((point[5][0] + point[6][0]) / 2)) / (((point[6][0] + point[7][0]) / 2) - ((point[5][0] + point[6][0]) / 2))) + ((point[5][1] + point[6][1]) / 2))));

		DrawCurve(hdc, point[5][0], point[5][1], CPX5_1, CPY5_1, CPX6, CPY6, point[6][0], point[6][1]);
	}

	if (Click >= 7) {		// 점이 7개일때
		int CPX6_1, CPY6_1, CPX7, CPY7;

		CPX6_1 = ((point[6][0] + point[7][0]) / 2);
		CPY6_1 = (point[6][1] - ((((((point[6][1] + point[7][1]) / 2) - ((point[5][1] + point[6][1]) / 2)) * (point[6][0] - ((point[5][0] + point[6][0]) / 2)) / (((point[6][0] + point[7][0]) / 2) - ((point[5][0] + point[6][0]) / 2))) + ((point[5][1] + point[6][1]) / 2)) - ((point[6][1] + point[7][1]) / 2)));
		CPX7 = ((point[6][0] + point[7][0]) / 2);
		CPY7 = (point[7][1] + (((point[6][1] + point[7][1]) / 2) - (((((point[7][1] + point[8][1]) / 2) - ((point[6][1] + point[7][1]) / 2)) * (point[7][0] - ((point[6][0] + point[7][0]) / 2)) / (((point[7][0] + point[8][0]) / 2) - ((point[6][0] + point[7][0]) / 2))) + ((point[6][1] + point[7][1]) / 2))));

		DrawCurve(hdc, point[6][0], point[6][1], CPX6_1, CPY6_1, CPX7, CPY7, point[7][0], point[7][1]);
	}

	if (Click >= 8) {		// 점이 8개일때
		int CPX7_1, CPY7_1, CPX8, CPY8;

		CPX7_1 = ((point[7][0] + point[8][0]) / 2);
		CPY7_1 = (point[7][1] - ((((((point[7][1] + point[8][1]) / 2) - ((point[6][1] + point[7][1]) / 2)) * (point[7][0] - ((point[6][0] + point[7][0]) / 2)) / (((point[7][0] + point[8][0]) / 2) - ((point[6][0] + point[7][0]) / 2))) + ((point[6][1] + point[7][1]) / 2)) - ((point[7][1] + point[8][1]) / 2)));
		CPX8 = ((point[7][0] + point[8][0]) / 2);
		CPY8 = (point[8][1] + (((point[7][1] + point[8][1]) / 2) - (((((point[8][1] + point[9][1]) / 2) - ((point[7][1] + point[8][1]) / 2)) * (point[8][0] - ((point[7][0] + point[8][0]) / 2)) / (((point[8][0] + point[9][0]) / 2) - ((point[7][0] + point[8][0]) / 2))) + ((point[7][1] + point[8][1]) / 2))));

		DrawCurve(hdc, point[7][0], point[7][1], CPX7_1, CPY7_1, CPX8, CPY8, point[8][0], point[8][1]);
	}

	if (Click >= 9) {		// 점이 9개일때
		int CPX8_1, CPY8_1, CPX9, CPY9;

		CPX8_1 = ((point[8][0] + point[9][0]) / 2);
		CPY8_1 = (point[8][1] - ((((((point[8][1] + point[9][1]) / 2) - ((point[7][1] + point[8][1]) / 2)) * (point[8][0] - ((point[7][0] + point[8][0]) / 2)) / (((point[8][0] + point[9][0]) / 2) - ((point[7][0] + point[8][0]) / 2))) + ((point[7][1] + point[8][1]) / 2)) - ((point[8][1] + point[9][1]) / 2)));
		CPX9 = ((point[8][0] + point[9][0]) / 2);
		CPY9 = (point[9][1] + (((point[8][1] + point[9][1]) / 2) - (((((point[9][1] + point[10][1]) / 2) - ((point[8][1] + point[9][1]) / 2)) * (point[9][0] - ((point[8][0] + point[9][0]) / 2)) / (((point[9][0] + point[10][0]) / 2) - ((point[8][0] + point[9][0]) / 2))) + ((point[8][1] + point[9][1]) / 2))));

		DrawCurve(hdc, point[8][0], point[8][1], CPX8_1, CPY8_1, CPX9, CPY9, point[9][0], point[9][1]);
	}

	if (Click >= 10) {		// 점이 10개일때
		int CPX9_1, CPY9_1, CPX10, CPY10;

		CPX9_1 = ((point[9][0] + point[10][0]) / 2);
		CPY9_1 = (point[9][1] - ((((((point[9][1] + point[10][1]) / 2) - ((point[8][1] + point[9][1]) / 2)) * (point[9][0] - ((point[8][0] + point[9][0]) / 2)) / (((point[9][0] + point[10][0]) / 2) - ((point[8][0] + point[9][0]) / 2))) + ((point[8][1] + point[9][1]) / 2)) - ((point[9][1] + point[10][1]) / 2)));
		CPX10 = ((point[9][0] + point[10][0]) / 2);
		CPY10 = (point[10][1] + (((point[9][1] + point[10][1]) / 2) - (((((point[10][1] + point[11][1]) / 2) - ((point[9][1] + point[10][1]) / 2)) * (point[10][0] - ((point[9][0] + point[10][0]) / 2)) / (((point[10][0] + point[11][0]) / 2) - ((point[9][0] + point[10][0]) / 2))) + ((point[9][1] + point[10][1]) / 2))));

		DrawCurve(hdc, point[9][0], point[9][1], CPX9_1, CPY9_1, CPX10, CPY10, point[10][0], point[10][1]);
	}

	if (Click >= 11) {		// 점이 11개일때
		int CPX10_1, CPY10_1, CPX11, CPY11;

		CPX10_1 = ((point[10][0] + point[11][0]) / 2);
		CPY10_1 = (point[10][1] - ((((((point[10][1] + point[11][1]) / 2) - ((point[9][1] + point[10][1]) / 2)) * (point[10][0] - ((point[9][0] + point[10][0]) / 2)) / (((point[10][0] + point[11][0]) / 2) - ((point[9][0] + point[10][0]) / 2))) + ((point[9][1] + point[10][1]) / 2)) - ((point[10][1] + point[11][1]) / 2)));
		CPX11 = ((point[10][0] + point[11][0]) / 2);
		CPY11 = (point[11][1] + (((point[10][1] + point[11][1]) / 2) - (((((point[11][1] + point[12][1]) / 2) - ((point[10][1] + point[11][1]) / 2)) * (point[11][0] - ((point[10][0] + point[11][0]) / 2)) / (((point[11][0] + point[12][0]) / 2) - ((point[10][0] + point[11][0]) / 2))) + ((point[10][1] + point[11][1]) / 2))));

		DrawCurve(hdc, point[10][0], point[10][1], CPX10_1, CPY10_1, CPX11, CPY11, point[11][0], point[11][1]);
	}

	if (Click >= 12) {		// 점이 12개일때
		int CPX11_1, CPY11_1, CPX12, CPY12;

		CPX11_1 = ((point[11][0] + point[12][0]) / 2);
		CPY11_1 = (point[11][1] - ((((((point[11][1] + point[12][1]) / 2) - ((point[10][1] + point[11][1]) / 2)) * (point[11][0] - ((point[10][0] + point[11][0]) / 2)) / (((point[11][0] + point[12][0]) / 2) - ((point[10][0] + point[11][0]) / 2))) + ((point[10][1] + point[11][1]) / 2)) - ((point[11][1] + point[12][1]) / 2)));
		CPX12 = ((point[11][0] + point[12][0]) / 2);
		CPY12 = (point[12][1] + (((point[11][1] + point[12][1]) / 2) - (((((point[12][1] + point[13][1]) / 2) - ((point[11][1] + point[12][1]) / 2)) * (point[12][0] - ((point[11][0] + point[12][0]) / 2)) / (((point[12][0] + point[13][0]) / 2) - ((point[11][0] + point[12][0]) / 2))) + ((point[11][1] + point[12][1]) / 2))));

		DrawCurve(hdc, point[11][0], point[11][1], CPX11_1, CPY11_1, CPX12, CPY12, point[12][0], point[12][1]);
	}

	if (Click >= 13) {		// 점이 13개일때
		int CPX12_1, CPY12_1, CPX13, CPY13;

		CPX12_1 = ((point[12][0] + point[13][0]) / 2);
		CPY12_1 = (point[12][1] - ((((((point[12][1] + point[13][1]) / 2) - ((point[11][1] + point[12][1]) / 2)) * (point[12][0] - ((point[11][0] + point[12][0]) / 2)) / (((point[12][0] + point[13][0]) / 2) - ((point[11][0] + point[12][0]) / 2))) + ((point[11][1] + point[12][1]) / 2)) - ((point[12][1] + point[13][1]) / 2)));
		CPX13 = ((point[12][0] + point[13][0]) / 2);
		CPY13 = (point[13][1] + (((point[12][1] + point[13][1]) / 2) - (((((point[13][1] + point[14][1]) / 2) - ((point[12][1] + point[13][1]) / 2)) * (point[13][0] - ((point[12][0] + point[13][0]) / 2)) / (((point[13][0] + point[14][0]) / 2) - ((point[12][0] + point[13][0]) / 2))) + ((point[12][1] + point[13][1]) / 2))));

		DrawCurve(hdc, point[12][0], point[12][1], CPX12_1, CPY12_1, CPX13, CPY13, point[13][0], point[13][1]);
	}

	if (Click >= 14) {		// 점이 14개일때
		int CPX13_1, CPY13_1, CPX14, CPY14;

		CPX13_1 = ((point[13][0] + point[14][0]) / 2);
		CPY13_1 = (point[13][1] - ((((((point[13][1] + point[14][1]) / 2) - ((point[12][1] + point[13][1]) / 2)) * (point[13][0] - ((point[12][0] + point[13][0]) / 2)) / (((point[13][0] + point[14][0]) / 2) - ((point[12][0] + point[13][0]) / 2))) + ((point[12][1] + point[13][1]) / 2)) - ((point[13][1] + point[14][1]) / 2)));
		CPX14 = ((point[13][0] + point[14][0]) / 2);
		CPY14 = (point[14][1] + (((point[13][1] + point[14][1]) / 2) - (((((point[14][1] + point[15][1]) / 2) - ((point[13][1] + point[14][1]) / 2)) * (point[14][0] - ((point[13][0] + point[14][0]) / 2)) / (((point[14][0] + point[15][0]) / 2) - ((point[13][0] + point[14][0]) / 2))) + ((point[13][1] + point[14][1]) / 2))));

		DrawCurve(hdc, point[13][0], point[13][1], CPX13_1, CPY13_1, CPX14, CPY14, point[14][0], point[14][1]);
	}

	if (Click >= 15) {		// 점이 15개일때
		int CPX14_1, CPY14_1, CPX15, CPY15;

		CPX14_1 = ((point[14][0] + point[15][0]) / 2);
		CPY14_1 = (point[14][1] - ((((((point[14][1] + point[15][1]) / 2) - ((point[13][1] + point[14][1]) / 2)) * (point[14][0] - ((point[13][0] + point[14][0]) / 2)) / (((point[14][0] + point[15][0]) / 2) - ((point[13][0] + point[14][0]) / 2))) + ((point[13][1] + point[14][1]) / 2)) - ((point[14][1] + point[15][1]) / 2)));
		CPX15 = ((point[14][0] + point[15][0]) / 2);
		CPY15 = (point[15][1] + (((point[14][1] + point[15][1]) / 2) - (((((point[15][1] + point[16][1]) / 2) - ((point[14][1] + point[15][1]) / 2)) * (point[15][0] - ((point[14][0] + point[15][0]) / 2)) / (((point[15][0] + point[16][0]) / 2) - ((point[14][0] + point[15][0]) / 2))) + ((point[14][1] + point[15][1]) / 2))));

		DrawCurve(hdc, point[14][0], point[14][1], CPX14_1, CPY14_1, CPX15, CPY15, point[15][0], point[15][1]);
	}

	if (Click >= 16) {		// 점이 16개일때
		int CPX15_1, CPY15_1, CPX16, CPY16;

		CPX15_1 = ((point[15][0] + point[16][0]) / 2);
		CPY15_1 = (point[15][1] - ((((((point[15][1] + point[16][1]) / 2) - ((point[14][1] + point[15][1]) / 2)) * (point[15][0] - ((point[14][0] + point[15][0]) / 2)) / (((point[15][0] + point[16][0]) / 2) - ((point[14][0] + point[15][0]) / 2))) + ((point[14][1] + point[15][1]) / 2)) - ((point[15][1] + point[16][1]) / 2)));
		CPX16 = ((point[15][0] + point[16][0]) / 2);
		CPY16 = (point[16][1] + (((point[15][1] + point[16][1]) / 2) - (((((point[16][1] + point[17][1]) / 2) - ((point[15][1] + point[16][1]) / 2)) * (point[16][0] - ((point[15][0] + point[16][0]) / 2)) / (((point[16][0] + point[17][0]) / 2) - ((point[15][0] + point[16][0]) / 2))) + ((point[15][1] + point[16][1]) / 2))));

		DrawCurve(hdc, point[15][0], point[15][1], CPX15_1, CPY15_1, CPX16, CPY16, point[16][0], point[16][1]);
	}

	if (Click >= 17) {		// 점이 17개일때
		int CPX16_1, CPY16_1, CPX17, CPY17;

		CPX16_1 = ((point[16][0] + point[17][0]) / 2);
		CPY16_1 = (point[16][1] - ((((((point[16][1] + point[17][1]) / 2) - ((point[15][1] + point[16][1]) / 2)) * (point[16][0] - ((point[15][0] + point[16][0]) / 2)) / (((point[16][0] + point[17][0]) / 2) - ((point[15][0] + point[16][0]) / 2))) + ((point[15][1] + point[16][1]) / 2)) - ((point[16][1] + point[17][1]) / 2)));
		CPX17 = ((point[16][0] + point[17][0]) / 2);
		CPY17 = (point[17][1] + (((point[16][1] + point[17][1]) / 2) - (((((point[17][1] + point[18][1]) / 2) - ((point[16][1] + point[17][1]) / 2)) * (point[17][0] - ((point[16][0] + point[17][0]) / 2)) / (((point[17][0] + point[18][0]) / 2) - ((point[16][0] + point[17][0]) / 2))) + ((point[16][1] + point[17][1]) / 2))));

		DrawCurve(hdc, point[16][0], point[16][1], CPX16_1, CPY16_1, CPX17, CPY17, point[17][0], point[17][1]);
	}

	if (Click >= 18) {		// 점이 18개일때
		int CPX17_1, CPY17_1, CPX18, CPY18;

		CPX17_1 = ((point[17][0] + point[18][0]) / 2);
		CPY17_1 = (point[17][1] - ((((((point[17][1] + point[18][1]) / 2) - ((point[16][1] + point[17][1]) / 2)) * (point[17][0] - ((point[16][0] + point[17][0]) / 2)) / (((point[17][0] + point[18][0]) / 2) - ((point[16][0] + point[17][0]) / 2))) + ((point[16][1] + point[17][1]) / 2)) - ((point[17][1] + point[18][1]) / 2)));
		CPX18 = ((point[17][0] + point[18][0]) / 2);
		CPY18 = (point[18][1] + (((point[17][1] + point[18][1]) / 2) - (((((point[18][1] + point[19][1]) / 2) - ((point[17][1] + point[18][1]) / 2)) * (point[18][0] - ((point[17][0] + point[18][0]) / 2)) / (((point[18][0] + point[19][0]) / 2) - ((point[17][0] + point[18][0]) / 2))) + ((point[17][1] + point[18][1]) / 2))));

		DrawCurve(hdc, point[17][0], point[17][1], CPX17_1, CPY17_1, CPX18, CPY18, point[18][0], point[18][1]);
	}

	if (Click >= 19) {		// 점이 19개일때
		int CPX18_1, CPY18_1, CPX19, CPY19;

		CPX18_1 = ((point[18][0] + point[19][0]) / 2);
		CPY18_1 = (point[18][1] - ((((((point[18][1] + point[19][1]) / 2) - ((point[17][1] + point[18][1]) / 2)) * (point[18][0] - ((point[17][0] + point[18][0]) / 2)) / (((point[18][0] + point[19][0]) / 2) - ((point[17][0] + point[18][0]) / 2))) + ((point[17][1] + point[18][1]) / 2)) - ((point[18][1] + point[19][1]) / 2)));
		CPX19 = ((point[18][0] + point[19][0]) / 2);
		CPY19 = (point[19][1] + (((point[18][1] + point[19][1]) / 2) - (((((point[19][1] + point[20][1]) / 2) - ((point[18][1] + point[19][1]) / 2)) * (point[19][0] - ((point[18][0] + point[19][0]) / 2)) / (((point[19][0] + point[20][0]) / 2) - ((point[18][0] + point[19][0]) / 2))) + ((point[18][1] + point[19][1]) / 2))));

		DrawCurve(hdc, point[18][0], point[18][1], CPX18_1, CPY18_1, CPX19, CPY19, point[19][0], point[19][1]);
	}

	if (Click >= 20) {		// 점이 20개일때
		int CPX19_1, CPY19_1, CPX20, CPY20;

		CPX19_1 = ((point[19][0] + point[20][0]) / 2);
		CPY19_1 = (point[19][1] - ((((((point[19][1] + point[20][1]) / 2) - ((point[18][1] + point[19][1]) / 2)) * (point[19][0] - ((point[18][0] + point[19][0]) / 2)) / (((point[19][0] + point[20][0]) / 2) - ((point[18][0] + point[19][0]) / 2))) + ((point[18][1] + point[19][1]) / 2)) - ((point[19][1] + point[20][1]) / 2)));
		CPX20 = ((point[19][0] + point[20][0]) / 2);
		CPY20 = (point[20][1] + (((point[19][1] + point[20][1]) / 2) - (((((point[20][1] + point[21][1]) / 2) - ((point[19][1] + point[20][1]) / 2)) * (point[20][0] - ((point[19][0] + point[20][0]) / 2)) / (((point[20][0] + point[21][0]) / 2) - ((point[19][0] + point[20][0]) / 2))) + ((point[19][1] + point[20][1]) / 2))));

		DrawCurve(hdc, point[19][0], point[19][1], CPX19_1, CPY19_1, CPX20, CPY20, point[20][0], point[20][1]);
	}

	ReleaseDC(hWnd, hdc);

}


// 보조선 (점 5개까지만 적용)
void L3Line(HWND hWnd)				// 보조선
{
	hdc = GetDC(hWnd);
	HPEN BluePen = CreatePen(PS_SOLID, 1, RGB(153, 204, 255));
	HGDIOBJ OldBluePen = SelectObject(hdc, BluePen);

	if (Click == 0) {			// 점이 0개일때

	}

	if (Click >= 1) {		// 점이 1개일때
		MoveToEx(hdc, point[0][0], point[0][1], NULL);
		LineTo(hdc, point[1][0], point[1][1]);
		MoveToEx(hdc, point[1][0], point[1][1], NULL);
		LineTo(hdc, point[2][0], point[2][1]);

		Ellipse(hdc, ((point[0][0] + point[1][0]) / 2) - 3, ((point[0][1] + point[1][1]) / 2) - 3, ((point[0][0] + point[1][0]) / 2) + 3, ((point[0][1] + point[1][1]) / 2) + 3);
		Ellipse(hdc, ((point[1][0] + point[2][0]) / 2) - 3, ((point[1][1] + point[2][1]) / 2) - 3, ((point[1][0] + point[2][0]) / 2) + 3, ((point[1][1] + point[2][1]) / 2) + 3);

		MoveToEx(hdc, ((point[0][0] + point[1][0]) / 2), ((point[0][1] + point[1][1]) / 2), NULL);
		LineTo(hdc, ((point[1][0] + point[2][0]) / 2), ((point[1][1] + point[2][1]) / 2));

		Ellipse(hdc, point[1][0] - 3,
			(((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2)) - 3,
			point[1][0] + 3,
			(((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2)) + 3);

		MoveToEx(hdc, ((point[0][0] + point[1][0]) / 2), (point[1][1] + (((point[0][1] + point[1][1]) / 2) - (((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2)))), NULL);
		LineTo(hdc, ((point[1][0] + point[2][0]) / 2), (point[1][1] - ((((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2)) - ((point[1][1] + point[2][1]) / 2))));
	}

	if (Click >= 2) {		// 점이 2개일때
		MoveToEx(hdc, point[1][0], point[1][1], NULL);
		LineTo(hdc, point[2][0], point[2][1]);
		MoveToEx(hdc, point[2][0], point[2][1], NULL);
		LineTo(hdc, point[3][0], point[3][1]);

		Ellipse(hdc, ((point[1][0] + point[2][0]) / 2) - 3, ((point[1][1] + point[2][1]) / 2) - 3, ((point[1][0] + point[2][0]) / 2) + 3, ((point[1][1] + point[2][1]) / 2) + 3);
		Ellipse(hdc, ((point[2][0] + point[3][0]) / 2) - 3, ((point[2][1] + point[3][1]) / 2) - 3, ((point[2][0] + point[3][0]) / 2) + 3, ((point[2][1] + point[3][1]) / 2) + 3);

		MoveToEx(hdc, ((point[1][0] + point[2][0]) / 2), ((point[1][1] + point[2][1]) / 2), NULL);
		LineTo(hdc, ((point[2][0] + point[3][0]) / 2), ((point[2][1] + point[3][1]) / 2));

		Ellipse(hdc, point[2][0] - 3,
			((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2) - 3,
			point[2][0] + 3,
			((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2) + 3);

		MoveToEx(hdc, ((point[1][0] + point[2][0]) / 2), (point[2][1] + (((point[1][1] + point[2][1]) / 2) - (((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2)))), NULL);
		LineTo(hdc, ((point[2][0] + point[3][0]) / 2), (point[2][1] - ((((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2)) - ((point[2][1] + point[3][1]) / 2))));
	}

	if (Click >= 3) {		// 점이 3개 일때
		MoveToEx(hdc, point[2][0], point[2][1], NULL);
		LineTo(hdc, point[3][0], point[3][1]);
		MoveToEx(hdc, point[3][0], point[3][1], NULL);
		LineTo(hdc, point[4][0], point[4][1]);

		Ellipse(hdc, ((point[2][0] + point[3][0]) / 2) - 3, ((point[2][1] + point[3][1]) / 2) - 3, ((point[2][0] + point[3][0]) / 2) + 3, ((point[2][1] + point[3][1]) / 2) + 3);
		Ellipse(hdc, ((point[3][0] + point[4][0]) / 2) - 3, ((point[3][1] + point[4][1]) / 2) - 3, ((point[3][0] + point[4][0]) / 2) + 3, ((point[3][1] + point[4][1]) / 2) + 3);

		MoveToEx(hdc, ((point[2][0] + point[3][0]) / 2), ((point[2][1] + point[3][1]) / 2), NULL);
		LineTo(hdc, ((point[3][0] + point[4][0]) / 2), ((point[3][1] + point[4][1]) / 2));

		Ellipse(hdc, point[3][0] - 3,
			((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2) - 3,
			point[3][0] + 3,
			((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2) + 3);

		MoveToEx(hdc, ((point[2][0] + point[3][0]) / 2), (point[3][1] + (((point[2][1] + point[3][1]) / 2) - (((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2)))), NULL);
		LineTo(hdc, ((point[3][0] + point[4][0]) / 2), (point[3][1] - ((((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2)) - ((point[3][1] + point[4][1]) / 2))));
	}

	if (Click >= 4) {		// 점이 4개 일때
		MoveToEx(hdc, point[3][0], point[3][1], NULL);
		LineTo(hdc, point[4][0], point[4][1]);
		MoveToEx(hdc, point[4][0], point[4][1], NULL);
		LineTo(hdc, point[5][0], point[5][1]);

		Ellipse(hdc, ((point[3][0] + point[4][0]) / 2) - 3, ((point[3][1] + point[4][1]) / 2) - 3, ((point[3][0] + point[4][0]) / 2) + 3, ((point[3][1] + point[4][1]) / 2) + 3);
		Ellipse(hdc, ((point[4][0] + point[5][0]) / 2) - 3, ((point[4][1] + point[5][1]) / 2) - 3, ((point[4][0] + point[5][0]) / 2) + 3, ((point[4][1] + point[5][1]) / 2) + 3);

		MoveToEx(hdc, ((point[3][0] + point[4][0]) / 2), ((point[3][1] + point[4][1]) / 2), NULL);
		LineTo(hdc, ((point[4][0] + point[5][0]) / 2), ((point[4][1] + point[5][1]) / 2));

		Ellipse(hdc, point[4][0] - 3,
			((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2) - 3,
			point[4][0] + 3,
			((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2) + 3);

		MoveToEx(hdc, ((point[3][0] + point[4][0]) / 2), (point[4][1] + (((point[3][1] + point[4][1]) / 2) - (((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2)))), NULL);
		LineTo(hdc, ((point[4][0] + point[5][0]) / 2), (point[4][1] - ((((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2)) - ((point[4][1] + point[5][1]) / 2))));
	}

	if (Click >= 5) {		// 점이 5개 일때
		MoveToEx(hdc, point[4][0], point[4][1], NULL);
		LineTo(hdc, point[5][0], point[5][1]);
		MoveToEx(hdc, point[5][0], point[5][1], NULL);
		LineTo(hdc, point[6][0], point[6][1]);

		Ellipse(hdc, ((point[4][0] + point[5][0]) / 2) - 3, ((point[4][1] + point[5][1]) / 2) - 3, ((point[4][0] + point[5][0]) / 2) + 3, ((point[4][1] + point[5][1]) / 2) + 3);
		Ellipse(hdc, ((point[5][0] + point[6][0]) / 2) - 3, ((point[5][1] + point[6][1]) / 2) - 3, ((point[5][0] + point[6][0]) / 2) + 3, ((point[5][1] + point[6][1]) / 2) + 3);

		MoveToEx(hdc, ((point[4][0] + point[5][0]) / 2), ((point[4][1] + point[5][1]) / 2), NULL);
		LineTo(hdc, ((point[5][0] + point[6][0]) / 2), ((point[5][1] + point[6][1]) / 2));

		Ellipse(hdc, point[5][0] - 3,
			((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2) - 3,
			point[5][0] + 3,
			((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2) + 3);

		MoveToEx(hdc, ((point[4][0] + point[5][0]) / 2), (point[5][1] + (((point[4][1] + point[5][1]) / 2) - (((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2)))), NULL);
		LineTo(hdc, ((point[5][0] + point[6][0]) / 2), (point[5][1] - ((((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2)) - ((point[5][1] + point[6][1]) / 2))));
	}


	SelectObject(hdc, OldBluePen);
	DeleteObject(BluePen);
	ReleaseDC(hWnd, hdc);
}


// 제어점 (점 5개까지만 적용)
void C3Point(HWND hWnd) {
	hdc = GetDC(hWnd);
	HPEN PinkPen = CreatePen(PS_SOLID, 1, RGB(255, 0, 255));
	HGDIOBJ OldPinkPen = SelectObject(hdc, PinkPen);


	if (Click >= 1) {		// 점이 1개일때
		Ellipse(hdc, ((point[0][0] + point[1][0]) / 2) - 3,
			(point[1][1] + (((point[0][1] + point[1][1]) / 2) - (((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2)))) - 3,
			((point[0][0] + point[1][0]) / 2) + 3,
			(point[1][1] + (((point[0][1] + point[1][1]) / 2) - (((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2)))) + 3);
		Ellipse(hdc, ((point[1][0] + point[2][0]) / 2) - 3,
			(point[1][1] - ((((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2)) - ((point[1][1] + point[2][1]) / 2))) - 3,
			((point[1][0] + point[2][0]) / 2) + 3,
			(point[1][1] - ((((((point[1][1] + point[2][1]) / 2) - ((point[0][1] + point[1][1]) / 2)) * (point[1][0] - ((point[0][0] + point[1][0]) / 2)) / (((point[1][0] + point[2][0]) / 2) - ((point[0][0] + point[1][0]) / 2))) + ((point[0][1] + point[1][1]) / 2)) - ((point[1][1] + point[2][1]) / 2))) + 3);
	}

	if (Click >= 2) {		// 점이 2개일때
		Ellipse(hdc, ((point[1][0] + point[2][0]) / 2) - 3,
			(point[2][1] + (((point[1][1] + point[2][1]) / 2) - (((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2)))) - 3,
			((point[1][0] + point[2][0]) / 2) + 3,
			(point[2][1] + (((point[1][1] + point[2][1]) / 2) - (((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2)))) + 3);
		Ellipse(hdc, ((point[2][0] + point[3][0]) / 2) - 3,
			(point[2][1] - ((((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2)) - ((point[2][1] + point[3][1]) / 2))) - 3,
			((point[2][0] + point[3][0]) / 2) + 3,
			(point[2][1] - ((((((point[2][1] + point[3][1]) / 2) - ((point[1][1] + point[2][1]) / 2)) * (point[2][0] - ((point[1][0] + point[2][0]) / 2)) / (((point[2][0] + point[3][0]) / 2) - ((point[1][0] + point[2][0]) / 2))) + ((point[1][1] + point[2][1]) / 2)) - ((point[2][1] + point[3][1]) / 2))) + 3);
	}

	if (Click >= 3) {		// 점이 3개 일때
		Ellipse(hdc, ((point[2][0] + point[3][0]) / 2) - 3,
			(point[3][1] + (((point[2][1] + point[3][1]) / 2) - (((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2)))) - 3,
			((point[2][0] + point[3][0]) / 2) + 3,
			(point[3][1] + (((point[2][1] + point[3][1]) / 2) - (((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2)))) + 3);
		Ellipse(hdc, ((point[3][0] + point[4][0]) / 2) - 3,
			(point[3][1] - ((((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2)) - ((point[3][1] + point[4][1]) / 2))) - 3,
			((point[3][0] + point[4][0]) / 2) + 3,
			(point[3][1] - ((((((point[3][1] + point[4][1]) / 2) - ((point[2][1] + point[3][1]) / 2)) * (point[3][0] - ((point[2][0] + point[3][0]) / 2)) / (((point[3][0] + point[4][0]) / 2) - ((point[2][0] + point[3][0]) / 2))) + ((point[2][1] + point[3][1]) / 2)) - ((point[3][1] + point[4][1]) / 2))) + 3);
	}

	if (Click >= 4) {		// 점이 4개 일때
		Ellipse(hdc, ((point[3][0] + point[4][0]) / 2) - 3,
			(point[4][1] + (((point[3][1] + point[4][1]) / 2) - (((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2)))) - 3,
			((point[3][0] + point[4][0]) / 2) + 3,
			(point[4][1] + (((point[3][1] + point[4][1]) / 2) - (((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2)))) + 3);
		Ellipse(hdc, ((point[4][0] + point[5][0]) / 2) - 3,
			(point[4][1] - ((((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2)) - ((point[4][1] + point[5][1]) / 2))) - 3,
			((point[4][0] + point[5][0]) / 2) + 3,
			(point[4][1] - ((((((point[4][1] + point[5][1]) / 2) - ((point[3][1] + point[4][1]) / 2)) * (point[4][0] - ((point[3][0] + point[4][0]) / 2)) / (((point[4][0] + point[5][0]) / 2) - ((point[3][0] + point[4][0]) / 2))) + ((point[3][1] + point[4][1]) / 2)) - ((point[4][1] + point[5][1]) / 2))) + 3);
	}


	if (Click >= 5) {		// 점이 5개 일때
		Ellipse(hdc, ((point[4][0] + point[5][0]) / 2) - 3,
			(point[5][1] + (((point[4][1] + point[5][1]) / 2) - (((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2)))) - 3,
			((point[4][0] + point[5][0]) / 2) + 3,
			(point[5][1] + (((point[4][1] + point[5][1]) / 2) - (((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2)))) + 3);
		Ellipse(hdc, ((point[5][0] + point[6][0]) / 2) - 3,
			(point[5][1] - ((((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2)) - ((point[5][1] + point[6][1]) / 2))) - 3,
			((point[5][0] + point[6][0]) / 2) + 3,
			(point[5][1] - ((((((point[5][1] + point[6][1]) / 2) - ((point[4][1] + point[5][1]) / 2)) * (point[5][0] - ((point[4][0] + point[5][0]) / 2)) / (((point[5][0] + point[6][0]) / 2) - ((point[4][0] + point[5][0]) / 2))) + ((point[4][1] + point[5][1]) / 2)) - ((point[5][1] + point[6][1]) / 2))) + 3);
	}


	SelectObject(hdc, OldPinkPen);
	DeleteObject(PinkPen);
	ReleaseDC(hWnd, hdc);
}








// 점 생성 : 새로운 점 찍을 때 위치 비교해서 어느 점과 연결할지 정하는 함수
void AddPoint(LPARAM lParam) {
	int a = 0;
	static POINT ptMouse;

	ptMouse.x = LOWORD(lParam);
	ptMouse.y = HIWORD(lParam);

	for (int p = 0; p < Click + 1; p++)
	{
		if (ptMouse.x < point[p][0])		// 새로 찍은 점이 가장 끝 배열의 X좌표(p)보다 작으면
		{
			a = p;							// 새로 찍은 점의 X좌표를 p로 바꾸고
			break;
		}
	}

	for (int j = Click; j > a - 1; j--)
	{
		point[j + 1][0] = point[j][0];		// 새로 찍은 점 뒤에 있는 점들은 하나씩 뒤로 미뤄진다
		point[j + 1][1] = point[j][1];
	}

	point[a][0] = ptMouse.x;
	point[a][1] = ptMouse.y;
}


// 점 삭제
void DeletePoint(LPARAM lParam) {

	Click = Click - 1;
	Max = Click;

	CMoveX0 = CMoveX1;
	CMoveY0 = CMoveY1;
	CMoveX1 = CMoveX2;
	CMoveY1 = CMoveY2;
	CMoveX2 = CMoveX3;
	CMoveY2 = CMoveY3;
	CMoveX3 = CMoveX4;
	CMoveY3 = CMoveY4;
	CMoveX4 = CMoveX5;
	CMoveY4 = CMoveY5;
	CMoveX5 = CMoveX6;
	CMoveY5 = CMoveY6;
	CMoveX6 = CMoveX7;
	CMoveY6 = CMoveY7;
	CMoveX7 = CMoveX8;
	CMoveY7 = CMoveY8;
	CMoveX8 = CMoveX9;
	CMoveY8 = CMoveY9;
	CMoveX9 = CMoveX10;
	CMoveY9 = CMoveY10;
	CMoveX10 = CMoveX11;
	CMoveY10 = CMoveY11;
	CMoveX11 = CMoveX12;
	CMoveY11 = CMoveY12;
	CMoveX12 = CMoveX13;
	CMoveY12 = CMoveY13;
	CMoveX13 = CMoveX14;
	CMoveY13 = CMoveY14;
	CMoveX14 = CMoveX15;
	CMoveY14 = CMoveY15;
	CMoveX15 = CMoveX16;
	CMoveY15 = CMoveY16;
	CMoveX16 = CMoveX17;
	CMoveY16 = CMoveY17;
	CMoveX17 = CMoveX18;
	CMoveY17 = CMoveY18;
	CMoveX18 = CMoveX19;
	CMoveY18 = CMoveY19;
	CMoveX19 = CMoveX20;
	CMoveY19 = CMoveY20;
	CMoveX20 = CMoveX20;
	CMoveY20 = CMoveY20;

}




// 정보 대화 상자의 메시지 처리기입니다.
INT_PTR CALLBACK About(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)
{
	UNREFERENCED_PARAMETER(lParam);
	switch (message)
	{
	case WM_INITDIALOG:
		return (INT_PTR)TRUE;

	case WM_COMMAND:
		if (LOWORD(wParam) == IDOK || LOWORD(wParam) == IDCANCEL)
		{
			EndDialog(hDlg, LOWORD(wParam));
			return (INT_PTR)TRUE;
		}
		break;
	}
	return (INT_PTR)FALSE;
}


// 가운데 곡선 그리는 함수
int DrawCurve(HDC hdc, int P0x, int P0y, int P1x, int P1y, int P2x, int P2y, int P3x, int P3y)
{


	// Y1 ~ Y7 : 두 점 사이에 들어가는 7개의 중간점 (7개의 점을 연결하면 곡선이 됨)
	int Y1Line, Y2Line, Y3Line, Y4Line, Y5Line, Y6Line, Y7Line;
	Y1Line = (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2;
	Y2Line = (((((P2y + (P2y + P3y) / 2) / 2) - ((P1y + (P1y + P2y) / 2) / 2)) / 4 + (P1y + (P1y + P2y) / 2) / 2) - ((((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2)) / 4 + (((P1y + (P1y + P2y) / 2) / 2) - ((P0y + (P0y + P1y) / 2) / 2)) / 4 + (P0y + (P0y + P1y) / 2) / 2;
	Y3Line = (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
	Y4Line = (((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + P3y) / 2)) / 2)) / 2;
	Y5Line = (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
	Y6Line = (((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - ((((P3y + (P2y + P3y) / 2) / 2) - (((P3y + (P2y + P3y) / 2) / 2) - ((P2y + (P1y + P2y) / 2) / 2)) / 4) - (((P2y + (P1y + P2y) / 2) / 2) - (((P2y + (P1y + P2y) / 2) / 2) - ((P1y + (P0y + P1y) / 2) / 2)) / 4)) / 4;
	Y7Line = (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8;

	int X1Line, X2Line, X3Line, X4Line, X5Line, X6Line, X7Line;
	X1Line = ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2;
	X2Line = (((((P2x + (P2x + P3x) / 2) / 2) - ((P1x + (P1x + P2x) / 2) / 2)) / 4 + (P1x + (P1x + P2x) / 2) / 2) - ((((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2)) / 4 + (((P1x + (P1x + P2x) / 2) / 2) - ((P0x + (P0x + P1x) / 2) / 2)) / 4 + (P0x + (P0x + P1x) / 2) / 2;
	X3Line = (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
	X4Line = (((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + P3x) / 2)) / 2)) / 2;
	X5Line = (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2;
	X6Line = (((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - ((((P3x + (P2x + P3x) / 2) / 2) - (((P3x + (P2x + P3x) / 2) / 2) - ((P2x + (P1x + P2x) / 2) / 2)) / 4) - (((P2x + (P1x + P2x) / 2) / 2) - (((P2x + (P1x + P2x) / 2) / 2) - ((P1x + (P0x + P1x) / 2) / 2)) / 4)) / 4;
	X7Line = (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8;


	// 그래프가 좌표 밖으로 나가지 않도록
	if (Y1Line <= 15) {
		Y1Line = 15;
	}
	else if (Y1Line >= 515) {
		Y1Line = 515;
	}

	if (Y2Line <= 15) {
		Y2Line = 15;
	}
	else if (Y2Line >= 515) {
		Y2Line = 515;
	}

	if (Y3Line <= 15) {
		Y3Line = 15;
	}
	else if (Y3Line >= 515) {
		Y3Line = 515;
	}

	if (Y4Line <= 15) {
		Y4Line = 15;
	}
	else if (Y4Line >= 515) {
		Y4Line = 515;
	}

	if (Y5Line <= 15) {
		Y5Line = 15;
	}
	else if (Y5Line >= 515) {
		Y5Line = 515;
	}

	if (Y6Line <= 15) {
		Y6Line = 15;
	}
	else if (Y6Line >= 515) {
		Y6Line = 515;
	}

	if (Y7Line <= 15) {
		Y7Line = 15;
	}
	else if (Y7Line >= 515) {
		Y7Line = 515;
	}


	// 7개의 점을 연결하는 부분
	MoveToEx(hdc, P0x, P0y, NULL);
	LineTo(hdc, X1Line, Y1Line);

	MoveToEx(hdc, X1Line, Y1Line, NULL);
	LineTo(hdc, X2Line, Y2Line);

	MoveToEx(hdc, X2Line, Y2Line, NULL);
	LineTo(hdc, X3Line, Y3Line);

	MoveToEx(hdc, X3Line, Y3Line, NULL);
	LineTo(hdc, X4Line, Y4Line);

	MoveToEx(hdc, X4Line, Y4Line, NULL);
	LineTo(hdc, X5Line, Y5Line);

	MoveToEx(hdc, X5Line, Y5Line, NULL);
	LineTo(hdc, X6Line, Y6Line);

	MoveToEx(hdc, X6Line, Y6Line, NULL);
	LineTo(hdc, X7Line, Y7Line);

	MoveToEx(hdc, X7Line, Y7Line, NULL);
	LineTo(hdc, P3x, P3y);

	return 0;
}



/*
	// 4개의 점을 연결하는 부분
	MoveToEx(hdc, P0x, P0y, NULL);
	LineTo(hdc, ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2, (((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2);

	MoveToEx(hdc, ((((((P2x + (P2x + (P2x + P3x) / 2) / 2) / 2) - ((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2)) / 8) + (P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - (((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8 + ((((P1x + (P1x + (P1x + P2x) / 2) / 2) / 2) - ((P0x + (P0x + (P0x + P1x) / 2) / 2) / 2)) / 8) + (P0x + (P0x + (P0x + P1x) / 2) / 2) / 2,
		(((((P2y + (P2y + (P2y + P3y) / 2) / 2) / 2) - ((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2)) / 8 + (P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - (((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8 + ((((P1y + (P1y + (P1y + P2y) / 2) / 2) / 2) - ((P0y + (P0y + (P0y + P1y) / 2) / 2) / 2)) / 8) + (P0y + (P0y + (P0y + P1y) / 2) / 2) / 2, NULL);
	LineTo(hdc, (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2, (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

	MoveToEx(hdc, (((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + (P0x + P1x) / 2) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((((P1x + (P1x + P2x) / 2) / 2) + ((P1x + P2x) / 2)) / 2) + ((((P2x + (P2x + P3x) / 2) / 2) + ((P2x + P3x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2, (((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + (P0y + P1y) / 2) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((((P1y + (P1y + P2y) / 2) / 2) + ((P1y + P2y) / 2)) / 2) + ((((P2y + (P2y + P3y) / 2) / 2) + ((P2y + P3y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2, NULL);
	LineTo(hdc, (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2, (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);

	MoveToEx(hdc, (((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((P1x + (P0x + P1x) / 2) / 2)) / 2) + ((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2) + ((((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((P2x + (P1x + P2x) / 2) / 2)) / 2) + ((((P2x + P3x) / 2) + ((P3x + (P2x + P3x) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2, (((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((P1y + (P0y + P1y) / 2) / 2)) / 2) + ((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 2)) / 2)) / 2) + ((((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2) + ((((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((P2y + (P1y + P2y) / 2) / 2)) / 2) + ((((P2y + P3y) / 2) + ((P3y + (P2y + P3y) / 2) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2)) / 2, NULL);
	LineTo(hdc, (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8,
		(((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8);

	MoveToEx(hdc, (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - ((((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - (((P3x + ((P3x + (P2x + P3x) / 2) / 2)) / 2) - ((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2)) / 8) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - (((P2x + ((P2x + (P1x + P2x) / 2) / 2)) / 2) - ((P1x + (P1x + (P0x + P1x) / 2) / 2) / 2)) / 8)) / 8, (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - ((((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - (((P3y + ((P3y + (P2y + P3y) / 2) / 2)) / 2) - ((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2)) / 8) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - (((P2y + ((P2y + (P1y + P2y) / 2) / 2)) / 2) - ((P1y + ((P1y + (P0y + P1y) / 2) / 2)) / 2)) / 8)) / 8, NULL);
	LineTo(hdc, P3x, P3y);



	return 0;
}
*/





// 맨끝 곡선 그리는 함수
int DrawSideCurve(HDC hdc, int P0x, int P0y, int P1x, int P1y, int P2x, int P2y)
{
	int X1Line, X2Line, X3Line, X4Line, X5Line, X6Line, X7Line;
	X1Line = ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((((P0x + ((P0x + ((P0x + P1x) / 2)) / 2)) / 2) + ((P1x + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
	X2Line = ((((P0x + ((P0x + P1x) / 2)) / 2) + ((((P0x + ((P0x + P1x) / 2)) / 2) + ((P1x + ((P1x + P2x) / 2)) / 2)) / 2)) / 2);
	X3Line = ((((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((((P0x + ((P0x + P1x) / 2)) / 2) + ((P0x + P1x) / 2)) / 2) + ((((P1x + ((P1x + P2x) / 2)) / 2) + ((P1x + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
	X4Line = ((((P0x + P1x) / 2) + ((P1x + P2x) / 2)) / 2);
	X5Line = ((((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2) + ((((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2) + ((((((P0x + P1x) / 2) + ((((P0x + P1x) / 2) + P1x) / 2)) / 2) + ((((P1x + P2x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2)) / 2);
	X6Line = ((((((P1x + P2x) / 2) + P2x) / 2) + ((((((P0x + P1x) / 2) + P1x) / 2) + ((((P1x + P2x) / 2) + P2x) / 2)) / 2)) / 2);
	X7Line = ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2) + ((((((((P0x + P1x) / 2) + P1x) / 2) + P1x) / 2) + ((((((P1x + P2x) / 2) + P2x) / 2) + P2x) / 2)) / 2)) / 2)) / 2);

	int Y1Line, Y2Line, Y3Line, Y4Line, Y5Line, Y6Line, Y7Line;
	Y1Line = ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((((P0y + ((P0y + ((P0y + P1y) / 2)) / 2)) / 2) + ((P1y + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2)) / 2);
	Y2Line = ((((P0y + ((P0y + P1y) / 2)) / 2) + ((((P0y + ((P0y + P1y) / 2)) / 2) + ((P1y + ((P1y + P2y) / 2)) / 2)) / 2)) / 2);
	Y3Line = ((((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((((P0y + ((P0y + P1y) / 2)) / 2) + ((P0y + P1y) / 2)) / 2) + ((((P1y + ((P1y + P2y) / 2)) / 2) + ((P1y + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
	Y4Line = ((((P0y + P1y) / 2) + ((P1y + P2y) / 2)) / 2);
	Y5Line = ((((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2) + ((((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2) + ((((((P0y + P1y) / 2) + ((((P0y + P1y) / 2) + P1y) / 2)) / 2) + ((((P1y + P2y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2)) / 2);
	Y6Line = ((((((P1y + P2y) / 2) + P2y) / 2) + ((((((P0y + P1y) / 2) + P1y) / 2) + ((((P1y + P2y) / 2) + P2y) / 2)) / 2)) / 2);
	Y7Line = ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2) + ((((((((P0y + P1y) / 2) + P1y) / 2) + P1y) / 2) + ((((((P1y + P2y) / 2) + P2y) / 2) + P2y) / 2)) / 2)) / 2)) / 2);

	// 그래프가 좌표 밖으로 나가지 않도록
	if (Y1Line <= 15) {
		Y1Line = 15;
	}
	else if (Y1Line >= 515) {
		Y1Line = 515;
	}

	if (Y2Line <= 15) {
		Y2Line = 15;
	}
	else if (Y2Line >= 515) {
		Y2Line = 515;
	}

	if (Y3Line <= 15) {
		Y3Line = 15;
	}
	else if (Y3Line >= 515) {
		Y3Line = 515;
	}

	if (Y4Line <= 15) {
		Y4Line = 15;
	}
	else if (Y4Line >= 515) {
		Y4Line = 515;
	}

	if (Y5Line <= 15) {
		Y5Line = 15;
	}
	else if (Y5Line >= 515) {
		Y5Line = 515;
	}

	if (Y6Line <= 15) {
		Y6Line = 15;
	}
	else if (Y6Line >= 515) {
		Y6Line = 515;
	}

	if (Y7Line <= 15) {
		Y7Line = 15;
	}
	else if (Y7Line >= 515) {
		Y7Line = 515;
	}

	MoveToEx(hdc, P0x, P0y, NULL);
	LineTo(hdc, X1Line, Y1Line);
	MoveToEx(hdc, X1Line, Y1Line, NULL);
	LineTo(hdc, X2Line, Y2Line);
	MoveToEx(hdc, X2Line, Y2Line, NULL);
	LineTo(hdc, X3Line, Y3Line);
	MoveToEx(hdc, X3Line, Y3Line, NULL);
	LineTo(hdc, X4Line, Y4Line);
	MoveToEx(hdc, X4Line, Y4Line, NULL);
	LineTo(hdc, X5Line, Y5Line);
	MoveToEx(hdc, X5Line, Y5Line, NULL);
	LineTo(hdc, X6Line, Y6Line);
	MoveToEx(hdc, X6Line, Y6Line, NULL);
	LineTo(hdc, X7Line, Y7Line);
	MoveToEx(hdc, X7Line, Y7Line, NULL);
	LineTo(hdc, P2x, P2y);

	return 0;
}



void SaveFile()
{

}



// 노주임 추가
///////////////////////////////////////////////////////////////////////////
PCHAR* CommandLineToArgvA(PCHAR CmdLine, int* _argc)
{
	PCHAR* argv;
	PCHAR  _argv;
	ULONG   len;
	ULONG   argc;
	CHAR   a;
	ULONG   i, j;

	BOOLEAN  in_QM;
	BOOLEAN  in_TEXT;
	BOOLEAN  in_SPACE;

	len = strlen(CmdLine);
	i = ((len + 2) / 2) * sizeof(PVOID) + sizeof(PVOID);

	argv = (PCHAR*)GlobalAlloc(GMEM_FIXED,
		i + (len + 2) * sizeof(CHAR));

	_argv = (PCHAR)(((PUCHAR)argv) + i);

	argc = 0;
	argv[argc] = _argv;
	in_QM = FALSE;
	in_TEXT = FALSE;
	in_SPACE = TRUE;
	i = 0;
	j = 0;

	while (a = CmdLine[i]) {
		if (in_QM) {
			if (a == '\"') {
				in_QM = FALSE;
			}
			else {
				_argv[j] = a;
				j++;
			}
		}
		else {
			switch (a) {
			case '\"':
				in_QM = TRUE;
				in_TEXT = TRUE;
				if (in_SPACE) {
					argv[argc] = _argv + j;
					argc++;
				}
				in_SPACE = FALSE;
				break;
			case ' ':
			case '\t':
			case '\n':
			case '\r':
				if (in_TEXT) {
					_argv[j] = '\0';
					j++;
				}
				in_TEXT = FALSE;
				in_SPACE = TRUE;
				break;
			default:
				in_TEXT = TRUE;
				if (in_SPACE) {
					argv[argc] = _argv + j;
					argc++;
				}
				_argv[j] = a;
				j++;
				in_SPACE = FALSE;
				break;
			}
		}
		i++;
	}
	_argv[j] = '\0';
	argv[argc] = NULL;

	(*_argc) = argc;
	return argv;
}



void RegistMessage()
{
	// 메시지 등록 : 문자열을 사용자 메시지로 등록하여 메시지번호를 받는다.
	// WM_USER와는 조금 다른 개념.
	// (WM_USER + 추가번호)는 다음 어떤 어플리케이션과 메시지번호가 중복 될 가능성이 있으나,
	// RegisterWindowMessage()는 고유의 메시지번호를 받는 것이다.

	m_uRegisteredMessage = RegisterWindowMessage(_T("CURVE_Message"));
}

void CreateCurveFilePathTXT(const char* str_curve_file_path)
{
	// 현재 실행파일이 있는 경로 구한다.
	char cbuf[4096] = { 0, };
	char cCreatePath[4096] = { 0, };
	GetModuleFileName(NULL, cbuf, 4096);
	int iLength = strlen(cbuf) + 1;
	int iIndex = 0;

	for (int i = 0; i < iLength; i++)
	{
		if (cbuf[iLength - 1 - i] == '\\')
		{
			iIndex = iLength - 1 - i;
			break;
		}
	}

	strncpy(cCreatePath, cbuf, iIndex);
	strcat(cCreatePath, "\\CurveFilePath.txt");

	//printf("%s\n", cCreatePath);

	FILE* fp = NULL;
	fopen_s(&fp, cCreatePath, "wb");
	//fp = fopen("Curve_File_Path.txt", "wb");

	if (fp != NULL)
	{
		//printf("%s\n", str_curve_file_path);
		fprintf(fp, "%s\n", (char*)str_curve_file_path);
		fprintf(fp, "%d\n", _iNum);
		fclose(fp);
	}
}

